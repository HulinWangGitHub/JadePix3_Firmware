/******************************************************************************/
/* Verilog models generated by SiliconSmart 2013.06-SP2 (Production) build number: 4464. */
/* Siliconsmart Path: /apps/snps/SiliconSmart-2013.06-SP2/linux26_x86_64/bin/siliconsmart */
/* Host Name: vncs02fc, User Name: avipa, PID: 13252                          */
/* Directory: /libraries/tsl18/tower/tsl18fs120/workspaces/tsl18fs120_avipa/fs120_svt */
/*                                                                            */
/* File generated on Wed Sep 10 12:16:28 IDT 2014.                            */
/******************************************************************************/


`timescale 1ns/1ps

// udp_data_begin


`celldefine
module ad01d0_func( CO, S, A, B, CI );
input A, B, CI;
output CO, S;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

	wire S_row1;

	and MGM_BG_4( S_row1, A, B, CI );

	wire B_inv_for_ad01d0;

	not MGM_BG_5( B_inv_for_ad01d0, B );

	wire CI_inv_for_ad01d0;

	not MGM_BG_6( CI_inv_for_ad01d0, CI );

	wire S_row2;

	and MGM_BG_7( S_row2, B_inv_for_ad01d0, CI_inv_for_ad01d0, A );

	wire A_inv_for_ad01d0;

	not MGM_BG_8( A_inv_for_ad01d0, A );

	wire S_row3;

	and MGM_BG_9( S_row3, A_inv_for_ad01d0, CI_inv_for_ad01d0, B );

	wire S_row4;

	and MGM_BG_10( S_row4, A_inv_for_ad01d0, B_inv_for_ad01d0, CI );

	or MGM_BG_11( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ad01d1_func( CO, S, A, B, CI );
input A, B, CI;
output CO, S;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

	wire S_row1;

	and MGM_BG_4( S_row1, A, B, CI );

	wire B_inv_for_ad01d1;

	not MGM_BG_5( B_inv_for_ad01d1, B );

	wire CI_inv_for_ad01d1;

	not MGM_BG_6( CI_inv_for_ad01d1, CI );

	wire S_row2;

	and MGM_BG_7( S_row2, B_inv_for_ad01d1, CI_inv_for_ad01d1, A );

	wire A_inv_for_ad01d1;

	not MGM_BG_8( A_inv_for_ad01d1, A );

	wire S_row3;

	and MGM_BG_9( S_row3, A_inv_for_ad01d1, CI_inv_for_ad01d1, B );

	wire S_row4;

	and MGM_BG_10( S_row4, A_inv_for_ad01d1, B_inv_for_ad01d1, CI );

	or MGM_BG_11( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ad01d2_func( CO, S, A, B, CI );
input A, B, CI;
output CO, S;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

	wire S_row1;

	and MGM_BG_4( S_row1, A, B, CI );

	wire B_inv_for_ad01d2;

	not MGM_BG_5( B_inv_for_ad01d2, B );

	wire CI_inv_for_ad01d2;

	not MGM_BG_6( CI_inv_for_ad01d2, CI );

	wire S_row2;

	and MGM_BG_7( S_row2, B_inv_for_ad01d2, CI_inv_for_ad01d2, A );

	wire A_inv_for_ad01d2;

	not MGM_BG_8( A_inv_for_ad01d2, A );

	wire S_row3;

	and MGM_BG_9( S_row3, A_inv_for_ad01d2, CI_inv_for_ad01d2, B );

	wire S_row4;

	and MGM_BG_10( S_row4, A_inv_for_ad01d2, B_inv_for_ad01d2, CI );

	or MGM_BG_11( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ad01d4_func( CO, S, A, B, CI );
input A, B, CI;
output CO, S;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

	wire S_row1;

	and MGM_BG_4( S_row1, A, B, CI );

	wire B_inv_for_ad01d4;

	not MGM_BG_5( B_inv_for_ad01d4, B );

	wire CI_inv_for_ad01d4;

	not MGM_BG_6( CI_inv_for_ad01d4, CI );

	wire S_row2;

	and MGM_BG_7( S_row2, B_inv_for_ad01d4, CI_inv_for_ad01d4, A );

	wire A_inv_for_ad01d4;

	not MGM_BG_8( A_inv_for_ad01d4, A );

	wire S_row3;

	and MGM_BG_9( S_row3, A_inv_for_ad01d4, CI_inv_for_ad01d4, B );

	wire S_row4;

	and MGM_BG_10( S_row4, A_inv_for_ad01d4, B_inv_for_ad01d4, CI );

	or MGM_BG_11( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module adiode_func( I );
input I;

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module adp1d0_func( CO, P, S, A, B, CI );
input A, B, CI;
output CO, P, S;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

	wire B_inv_for_adp1d0;

	not MGM_BG_4( B_inv_for_adp1d0, B );

	wire P_row1;

	and MGM_BG_5( P_row1, B_inv_for_adp1d0, A );

	wire A_inv_for_adp1d0;

	not MGM_BG_6( A_inv_for_adp1d0, A );

	wire P_row2;

	and MGM_BG_7( P_row2, A_inv_for_adp1d0, B );

	or MGM_BG_8( P, P_row1, P_row2 );

	wire S_row1;

	and MGM_BG_9( S_row1, A, B, CI );

	wire CI_inv_for_adp1d0;

	not MGM_BG_10( CI_inv_for_adp1d0, CI );

	wire S_row2;

	and MGM_BG_11( S_row2, B_inv_for_adp1d0, CI_inv_for_adp1d0, A );

	wire S_row3;

	and MGM_BG_12( S_row3, A_inv_for_adp1d0, CI_inv_for_adp1d0, B );

	wire S_row4;

	and MGM_BG_13( S_row4, A_inv_for_adp1d0, B_inv_for_adp1d0, CI );

	or MGM_BG_14( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module adp1d1_func( CO, P, S, A, B, CI );
input A, B, CI;
output CO, P, S;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

	wire B_inv_for_adp1d1;

	not MGM_BG_4( B_inv_for_adp1d1, B );

	wire P_row1;

	and MGM_BG_5( P_row1, B_inv_for_adp1d1, A );

	wire A_inv_for_adp1d1;

	not MGM_BG_6( A_inv_for_adp1d1, A );

	wire P_row2;

	and MGM_BG_7( P_row2, A_inv_for_adp1d1, B );

	or MGM_BG_8( P, P_row1, P_row2 );

	wire S_row1;

	and MGM_BG_9( S_row1, A, B, CI );

	wire CI_inv_for_adp1d1;

	not MGM_BG_10( CI_inv_for_adp1d1, CI );

	wire S_row2;

	and MGM_BG_11( S_row2, B_inv_for_adp1d1, CI_inv_for_adp1d1, A );

	wire S_row3;

	and MGM_BG_12( S_row3, A_inv_for_adp1d1, CI_inv_for_adp1d1, B );

	wire S_row4;

	and MGM_BG_13( S_row4, A_inv_for_adp1d1, B_inv_for_adp1d1, CI );

	or MGM_BG_14( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module adp1d2_func( CO, P, S, A, B, CI );
input A, B, CI;
output CO, P, S;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

	wire B_inv_for_adp1d2;

	not MGM_BG_4( B_inv_for_adp1d2, B );

	wire P_row1;

	and MGM_BG_5( P_row1, B_inv_for_adp1d2, A );

	wire A_inv_for_adp1d2;

	not MGM_BG_6( A_inv_for_adp1d2, A );

	wire P_row2;

	and MGM_BG_7( P_row2, A_inv_for_adp1d2, B );

	or MGM_BG_8( P, P_row1, P_row2 );

	wire S_row1;

	and MGM_BG_9( S_row1, A, B, CI );

	wire CI_inv_for_adp1d2;

	not MGM_BG_10( CI_inv_for_adp1d2, CI );

	wire S_row2;

	and MGM_BG_11( S_row2, B_inv_for_adp1d2, CI_inv_for_adp1d2, A );

	wire S_row3;

	and MGM_BG_12( S_row3, A_inv_for_adp1d2, CI_inv_for_adp1d2, B );

	wire S_row4;

	and MGM_BG_13( S_row4, A_inv_for_adp1d2, B_inv_for_adp1d2, CI );

	or MGM_BG_14( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module adp1d4_func( CO, P, S, A, B, CI );
input A, B, CI;
output CO, P, S;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

	wire B_inv_for_adp1d4;

	not MGM_BG_4( B_inv_for_adp1d4, B );

	wire P_row1;

	and MGM_BG_5( P_row1, B_inv_for_adp1d4, A );

	wire A_inv_for_adp1d4;

	not MGM_BG_6( A_inv_for_adp1d4, A );

	wire P_row2;

	and MGM_BG_7( P_row2, A_inv_for_adp1d4, B );

	or MGM_BG_8( P, P_row1, P_row2 );

	wire S_row1;

	and MGM_BG_9( S_row1, A, B, CI );

	wire CI_inv_for_adp1d4;

	not MGM_BG_10( CI_inv_for_adp1d4, CI );

	wire S_row2;

	and MGM_BG_11( S_row2, B_inv_for_adp1d4, CI_inv_for_adp1d4, A );

	wire S_row3;

	and MGM_BG_12( S_row3, A_inv_for_adp1d4, CI_inv_for_adp1d4, B );

	wire S_row4;

	and MGM_BG_13( S_row4, A_inv_for_adp1d4, B_inv_for_adp1d4, CI );

	or MGM_BG_14( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ah01d0_func( CO, S, A, B );
input A, B;
output CO, S;

	and MGM_BG_0( CO, A, B );

	wire B_inv_for_ah01d0;

	not MGM_BG_1( B_inv_for_ah01d0, B );

	wire S_row1;

	and MGM_BG_2( S_row1, B_inv_for_ah01d0, A );

	wire A_inv_for_ah01d0;

	not MGM_BG_3( A_inv_for_ah01d0, A );

	wire S_row2;

	and MGM_BG_4( S_row2, A_inv_for_ah01d0, B );

	or MGM_BG_5( S, S_row1, S_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ah01d1_func( CO, S, A, B );
input A, B;
output CO, S;

	and MGM_BG_0( CO, A, B );

	wire B_inv_for_ah01d1;

	not MGM_BG_1( B_inv_for_ah01d1, B );

	wire S_row1;

	and MGM_BG_2( S_row1, B_inv_for_ah01d1, A );

	wire A_inv_for_ah01d1;

	not MGM_BG_3( A_inv_for_ah01d1, A );

	wire S_row2;

	and MGM_BG_4( S_row2, A_inv_for_ah01d1, B );

	or MGM_BG_5( S, S_row1, S_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ah01d2_func( CO, S, A, B );
input A, B;
output CO, S;

	and MGM_BG_0( CO, A, B );

	wire B_inv_for_ah01d2;

	not MGM_BG_1( B_inv_for_ah01d2, B );

	wire S_row1;

	and MGM_BG_2( S_row1, B_inv_for_ah01d2, A );

	wire A_inv_for_ah01d2;

	not MGM_BG_3( A_inv_for_ah01d2, A );

	wire S_row2;

	and MGM_BG_4( S_row2, A_inv_for_ah01d2, B );

	or MGM_BG_5( S, S_row1, S_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ah01d4_func( CO, S, A, B );
input A, B;
output CO, S;

	and MGM_BG_0( CO, A, B );

	wire B_inv_for_ah01d4;

	not MGM_BG_1( B_inv_for_ah01d4, B );

	wire S_row1;

	and MGM_BG_2( S_row1, B_inv_for_ah01d4, A );

	wire A_inv_for_ah01d4;

	not MGM_BG_3( A_inv_for_ah01d4, A );

	wire S_row2;

	and MGM_BG_4( S_row2, A_inv_for_ah01d4, B );

	or MGM_BG_5( S, S_row1, S_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an02d0_func( Z, A1, A2 );
input A1, A2;
output Z;

	and MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an02d1_func( Z, A1, A2 );
input A1, A2;
output Z;

	and MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an02d2_func( Z, A1, A2 );
input A1, A2;
output Z;

	and MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an02d4_func( Z, A1, A2 );
input A1, A2;
output Z;

	and MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an02d7_func( Z, A1, A2 );
input A1, A2;
output Z;

	and MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an02da_func( Z, A1, A2 );
input A1, A2;
output Z;

	and MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an03d0_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	and MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an03d1_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	and MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an03d2_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	and MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an03d4_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	and MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an03d7_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	and MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an03da_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	and MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an04d0_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	and MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an04d1_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	and MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an04d2_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	and MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an04d4_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	and MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an04d7_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	and MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an04da_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	and MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an12d1_func( Z, A1, A2 );
input A1, A2;
output Z;

	wire A1_inv_for_an12d1;

	not MGM_BG_0( A1_inv_for_an12d1, A1 );

	and MGM_BG_1( Z, A1_inv_for_an12d1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an12d2_func( Z, A1, A2 );
input A1, A2;
output Z;

	wire A1_inv_for_an12d2;

	not MGM_BG_0( A1_inv_for_an12d2, A1 );

	and MGM_BG_1( Z, A1_inv_for_an12d2, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module an12d4_func( Z, A1, A2 );
input A1, A2;
output Z;

	wire A1_inv_for_an12d4;

	not MGM_BG_0( A1_inv_for_an12d4, A1 );

	and MGM_BG_1( Z, A1_inv_for_an12d4, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi211d1_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoi211d1;

	not MGM_BG_0( A_inv_for_aoi211d1, A );

	wire B_inv_for_aoi211d1;

	not MGM_BG_1( B_inv_for_aoi211d1, B );

	wire C1_inv_for_aoi211d1;

	not MGM_BG_2( C1_inv_for_aoi211d1, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi211d1, B_inv_for_aoi211d1, C1_inv_for_aoi211d1 );

	wire C2_inv_for_aoi211d1;

	not MGM_BG_4( C2_inv_for_aoi211d1, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi211d1, B_inv_for_aoi211d1, C2_inv_for_aoi211d1 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi211d2_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoi211d2;

	not MGM_BG_0( A_inv_for_aoi211d2, A );

	wire B_inv_for_aoi211d2;

	not MGM_BG_1( B_inv_for_aoi211d2, B );

	wire C1_inv_for_aoi211d2;

	not MGM_BG_2( C1_inv_for_aoi211d2, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi211d2, B_inv_for_aoi211d2, C1_inv_for_aoi211d2 );

	wire C2_inv_for_aoi211d2;

	not MGM_BG_4( C2_inv_for_aoi211d2, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi211d2, B_inv_for_aoi211d2, C2_inv_for_aoi211d2 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi211d4_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoi211d4;

	not MGM_BG_0( A_inv_for_aoi211d4, A );

	wire B_inv_for_aoi211d4;

	not MGM_BG_1( B_inv_for_aoi211d4, B );

	wire C1_inv_for_aoi211d4;

	not MGM_BG_2( C1_inv_for_aoi211d4, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi211d4, B_inv_for_aoi211d4, C1_inv_for_aoi211d4 );

	wire C2_inv_for_aoi211d4;

	not MGM_BG_4( C2_inv_for_aoi211d4, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi211d4, B_inv_for_aoi211d4, C2_inv_for_aoi211d4 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi21d1_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_aoi21d1;

	not MGM_BG_0( A_inv_for_aoi21d1, A );

	wire B1_inv_for_aoi21d1;

	not MGM_BG_1( B1_inv_for_aoi21d1, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoi21d1, B1_inv_for_aoi21d1 );

	wire B2_inv_for_aoi21d1;

	not MGM_BG_3( B2_inv_for_aoi21d1, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A_inv_for_aoi21d1, B2_inv_for_aoi21d1 );

	or MGM_BG_5( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi21d2_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_aoi21d2;

	not MGM_BG_0( A_inv_for_aoi21d2, A );

	wire B1_inv_for_aoi21d2;

	not MGM_BG_1( B1_inv_for_aoi21d2, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoi21d2, B1_inv_for_aoi21d2 );

	wire B2_inv_for_aoi21d2;

	not MGM_BG_3( B2_inv_for_aoi21d2, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A_inv_for_aoi21d2, B2_inv_for_aoi21d2 );

	or MGM_BG_5( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi21d4_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_aoi21d4;

	not MGM_BG_0( A_inv_for_aoi21d4, A );

	wire B1_inv_for_aoi21d4;

	not MGM_BG_1( B1_inv_for_aoi21d4, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoi21d4, B1_inv_for_aoi21d4 );

	wire B2_inv_for_aoi21d4;

	not MGM_BG_3( B2_inv_for_aoi21d4, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A_inv_for_aoi21d4, B2_inv_for_aoi21d4 );

	or MGM_BG_5( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi221d1_func( ZN, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output ZN;

	wire A_inv_for_aoi221d1;

	not MGM_BG_0( A_inv_for_aoi221d1, A );

	wire B1_inv_for_aoi221d1;

	not MGM_BG_1( B1_inv_for_aoi221d1, B1 );

	wire C1_inv_for_aoi221d1;

	not MGM_BG_2( C1_inv_for_aoi221d1, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi221d1, B1_inv_for_aoi221d1, C1_inv_for_aoi221d1 );

	wire C2_inv_for_aoi221d1;

	not MGM_BG_4( C2_inv_for_aoi221d1, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi221d1, B1_inv_for_aoi221d1, C2_inv_for_aoi221d1 );

	wire B2_inv_for_aoi221d1;

	not MGM_BG_6( B2_inv_for_aoi221d1, B2 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi221d1, B2_inv_for_aoi221d1, C1_inv_for_aoi221d1 );

	wire ZN_row4;

	and MGM_BG_8( ZN_row4, A_inv_for_aoi221d1, B2_inv_for_aoi221d1, C2_inv_for_aoi221d1 );

	or MGM_BG_9( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi221d2_func( ZN, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output ZN;

	wire A_inv_for_aoi221d2;

	not MGM_BG_0( A_inv_for_aoi221d2, A );

	wire B1_inv_for_aoi221d2;

	not MGM_BG_1( B1_inv_for_aoi221d2, B1 );

	wire C1_inv_for_aoi221d2;

	not MGM_BG_2( C1_inv_for_aoi221d2, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi221d2, B1_inv_for_aoi221d2, C1_inv_for_aoi221d2 );

	wire C2_inv_for_aoi221d2;

	not MGM_BG_4( C2_inv_for_aoi221d2, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi221d2, B1_inv_for_aoi221d2, C2_inv_for_aoi221d2 );

	wire B2_inv_for_aoi221d2;

	not MGM_BG_6( B2_inv_for_aoi221d2, B2 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi221d2, B2_inv_for_aoi221d2, C1_inv_for_aoi221d2 );

	wire ZN_row4;

	and MGM_BG_8( ZN_row4, A_inv_for_aoi221d2, B2_inv_for_aoi221d2, C2_inv_for_aoi221d2 );

	or MGM_BG_9( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi221d4_func( ZN, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output ZN;

	wire A_inv_for_aoi221d4;

	not MGM_BG_0( A_inv_for_aoi221d4, A );

	wire B1_inv_for_aoi221d4;

	not MGM_BG_1( B1_inv_for_aoi221d4, B1 );

	wire C1_inv_for_aoi221d4;

	not MGM_BG_2( C1_inv_for_aoi221d4, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi221d4, B1_inv_for_aoi221d4, C1_inv_for_aoi221d4 );

	wire C2_inv_for_aoi221d4;

	not MGM_BG_4( C2_inv_for_aoi221d4, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi221d4, B1_inv_for_aoi221d4, C2_inv_for_aoi221d4 );

	wire B2_inv_for_aoi221d4;

	not MGM_BG_6( B2_inv_for_aoi221d4, B2 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi221d4, B2_inv_for_aoi221d4, C1_inv_for_aoi221d4 );

	wire ZN_row4;

	and MGM_BG_8( ZN_row4, A_inv_for_aoi221d4, B2_inv_for_aoi221d4, C2_inv_for_aoi221d4 );

	or MGM_BG_9( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi2222d1_func( ZN, A1, A2, B1, B2, C1, C2, D1, D2 );
input A1, A2, B1, B2, C1, C2, D1, D2;
output ZN;

	wire A1_inv_for_aoi2222d1;

	not MGM_BG_0( A1_inv_for_aoi2222d1, A1 );

	wire B1_inv_for_aoi2222d1;

	not MGM_BG_1( B1_inv_for_aoi2222d1, B1 );

	wire C1_inv_for_aoi2222d1;

	not MGM_BG_2( C1_inv_for_aoi2222d1, C1 );

	wire D1_inv_for_aoi2222d1;

	not MGM_BG_3( D1_inv_for_aoi2222d1, D1 );

	wire ZN_row1;

	and MGM_BG_4( ZN_row1, A1_inv_for_aoi2222d1, B1_inv_for_aoi2222d1, C1_inv_for_aoi2222d1, D1_inv_for_aoi2222d1 );

	wire D2_inv_for_aoi2222d1;

	not MGM_BG_5( D2_inv_for_aoi2222d1, D2 );

	wire ZN_row2;

	and MGM_BG_6( ZN_row2, A1_inv_for_aoi2222d1, B1_inv_for_aoi2222d1, C1_inv_for_aoi2222d1, D2_inv_for_aoi2222d1 );

	wire C2_inv_for_aoi2222d1;

	not MGM_BG_7( C2_inv_for_aoi2222d1, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, A1_inv_for_aoi2222d1, B1_inv_for_aoi2222d1, C2_inv_for_aoi2222d1, D1_inv_for_aoi2222d1 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A1_inv_for_aoi2222d1, B1_inv_for_aoi2222d1, C2_inv_for_aoi2222d1, D2_inv_for_aoi2222d1 );

	wire B2_inv_for_aoi2222d1;

	not MGM_BG_10( B2_inv_for_aoi2222d1, B2 );

	wire ZN_row5;

	and MGM_BG_11( ZN_row5, A1_inv_for_aoi2222d1, B2_inv_for_aoi2222d1, C1_inv_for_aoi2222d1, D1_inv_for_aoi2222d1 );

	wire ZN_row6;

	and MGM_BG_12( ZN_row6, A1_inv_for_aoi2222d1, B2_inv_for_aoi2222d1, C1_inv_for_aoi2222d1, D2_inv_for_aoi2222d1 );

	wire ZN_row7;

	and MGM_BG_13( ZN_row7, A1_inv_for_aoi2222d1, B2_inv_for_aoi2222d1, C2_inv_for_aoi2222d1, D1_inv_for_aoi2222d1 );

	wire ZN_row8;

	and MGM_BG_14( ZN_row8, A1_inv_for_aoi2222d1, B2_inv_for_aoi2222d1, C2_inv_for_aoi2222d1, D2_inv_for_aoi2222d1 );

	wire A2_inv_for_aoi2222d1;

	not MGM_BG_15( A2_inv_for_aoi2222d1, A2 );

	wire ZN_row9;

	and MGM_BG_16( ZN_row9, A2_inv_for_aoi2222d1, B1_inv_for_aoi2222d1, C1_inv_for_aoi2222d1, D1_inv_for_aoi2222d1 );

	wire ZN_row10;

	and MGM_BG_17( ZN_row10, A2_inv_for_aoi2222d1, B1_inv_for_aoi2222d1, C1_inv_for_aoi2222d1, D2_inv_for_aoi2222d1 );

	wire ZN_row11;

	and MGM_BG_18( ZN_row11, A2_inv_for_aoi2222d1, B1_inv_for_aoi2222d1, C2_inv_for_aoi2222d1, D1_inv_for_aoi2222d1 );

	wire ZN_row12;

	and MGM_BG_19( ZN_row12, A2_inv_for_aoi2222d1, B1_inv_for_aoi2222d1, C2_inv_for_aoi2222d1, D2_inv_for_aoi2222d1 );

	wire ZN_row13;

	and MGM_BG_20( ZN_row13, A2_inv_for_aoi2222d1, B2_inv_for_aoi2222d1, C1_inv_for_aoi2222d1, D1_inv_for_aoi2222d1 );

	wire ZN_row14;

	and MGM_BG_21( ZN_row14, A2_inv_for_aoi2222d1, B2_inv_for_aoi2222d1, C1_inv_for_aoi2222d1, D2_inv_for_aoi2222d1 );

	wire ZN_row15;

	and MGM_BG_22( ZN_row15, A2_inv_for_aoi2222d1, B2_inv_for_aoi2222d1, C2_inv_for_aoi2222d1, D1_inv_for_aoi2222d1 );

	wire ZN_row16;

	and MGM_BG_23( ZN_row16, A2_inv_for_aoi2222d1, B2_inv_for_aoi2222d1, C2_inv_for_aoi2222d1, D2_inv_for_aoi2222d1 );

	or MGM_BG_24( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8, ZN_row9, ZN_row10, ZN_row11, ZN_row12, ZN_row13, ZN_row14, ZN_row15, ZN_row16 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi2222d2_func( ZN, A1, A2, B1, B2, C1, C2, D1, D2 );
input A1, A2, B1, B2, C1, C2, D1, D2;
output ZN;

	wire A1_inv_for_aoi2222d2;

	not MGM_BG_0( A1_inv_for_aoi2222d2, A1 );

	wire B1_inv_for_aoi2222d2;

	not MGM_BG_1( B1_inv_for_aoi2222d2, B1 );

	wire C1_inv_for_aoi2222d2;

	not MGM_BG_2( C1_inv_for_aoi2222d2, C1 );

	wire D1_inv_for_aoi2222d2;

	not MGM_BG_3( D1_inv_for_aoi2222d2, D1 );

	wire ZN_row1;

	and MGM_BG_4( ZN_row1, A1_inv_for_aoi2222d2, B1_inv_for_aoi2222d2, C1_inv_for_aoi2222d2, D1_inv_for_aoi2222d2 );

	wire D2_inv_for_aoi2222d2;

	not MGM_BG_5( D2_inv_for_aoi2222d2, D2 );

	wire ZN_row2;

	and MGM_BG_6( ZN_row2, A1_inv_for_aoi2222d2, B1_inv_for_aoi2222d2, C1_inv_for_aoi2222d2, D2_inv_for_aoi2222d2 );

	wire C2_inv_for_aoi2222d2;

	not MGM_BG_7( C2_inv_for_aoi2222d2, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, A1_inv_for_aoi2222d2, B1_inv_for_aoi2222d2, C2_inv_for_aoi2222d2, D1_inv_for_aoi2222d2 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A1_inv_for_aoi2222d2, B1_inv_for_aoi2222d2, C2_inv_for_aoi2222d2, D2_inv_for_aoi2222d2 );

	wire B2_inv_for_aoi2222d2;

	not MGM_BG_10( B2_inv_for_aoi2222d2, B2 );

	wire ZN_row5;

	and MGM_BG_11( ZN_row5, A1_inv_for_aoi2222d2, B2_inv_for_aoi2222d2, C1_inv_for_aoi2222d2, D1_inv_for_aoi2222d2 );

	wire ZN_row6;

	and MGM_BG_12( ZN_row6, A1_inv_for_aoi2222d2, B2_inv_for_aoi2222d2, C1_inv_for_aoi2222d2, D2_inv_for_aoi2222d2 );

	wire ZN_row7;

	and MGM_BG_13( ZN_row7, A1_inv_for_aoi2222d2, B2_inv_for_aoi2222d2, C2_inv_for_aoi2222d2, D1_inv_for_aoi2222d2 );

	wire ZN_row8;

	and MGM_BG_14( ZN_row8, A1_inv_for_aoi2222d2, B2_inv_for_aoi2222d2, C2_inv_for_aoi2222d2, D2_inv_for_aoi2222d2 );

	wire A2_inv_for_aoi2222d2;

	not MGM_BG_15( A2_inv_for_aoi2222d2, A2 );

	wire ZN_row9;

	and MGM_BG_16( ZN_row9, A2_inv_for_aoi2222d2, B1_inv_for_aoi2222d2, C1_inv_for_aoi2222d2, D1_inv_for_aoi2222d2 );

	wire ZN_row10;

	and MGM_BG_17( ZN_row10, A2_inv_for_aoi2222d2, B1_inv_for_aoi2222d2, C1_inv_for_aoi2222d2, D2_inv_for_aoi2222d2 );

	wire ZN_row11;

	and MGM_BG_18( ZN_row11, A2_inv_for_aoi2222d2, B1_inv_for_aoi2222d2, C2_inv_for_aoi2222d2, D1_inv_for_aoi2222d2 );

	wire ZN_row12;

	and MGM_BG_19( ZN_row12, A2_inv_for_aoi2222d2, B1_inv_for_aoi2222d2, C2_inv_for_aoi2222d2, D2_inv_for_aoi2222d2 );

	wire ZN_row13;

	and MGM_BG_20( ZN_row13, A2_inv_for_aoi2222d2, B2_inv_for_aoi2222d2, C1_inv_for_aoi2222d2, D1_inv_for_aoi2222d2 );

	wire ZN_row14;

	and MGM_BG_21( ZN_row14, A2_inv_for_aoi2222d2, B2_inv_for_aoi2222d2, C1_inv_for_aoi2222d2, D2_inv_for_aoi2222d2 );

	wire ZN_row15;

	and MGM_BG_22( ZN_row15, A2_inv_for_aoi2222d2, B2_inv_for_aoi2222d2, C2_inv_for_aoi2222d2, D1_inv_for_aoi2222d2 );

	wire ZN_row16;

	and MGM_BG_23( ZN_row16, A2_inv_for_aoi2222d2, B2_inv_for_aoi2222d2, C2_inv_for_aoi2222d2, D2_inv_for_aoi2222d2 );

	or MGM_BG_24( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8, ZN_row9, ZN_row10, ZN_row11, ZN_row12, ZN_row13, ZN_row14, ZN_row15, ZN_row16 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi2222d4_func( ZN, A1, A2, B1, B2, C1, C2, D1, D2 );
input A1, A2, B1, B2, C1, C2, D1, D2;
output ZN;

	wire A1_inv_for_aoi2222d4;

	not MGM_BG_0( A1_inv_for_aoi2222d4, A1 );

	wire B1_inv_for_aoi2222d4;

	not MGM_BG_1( B1_inv_for_aoi2222d4, B1 );

	wire C1_inv_for_aoi2222d4;

	not MGM_BG_2( C1_inv_for_aoi2222d4, C1 );

	wire D1_inv_for_aoi2222d4;

	not MGM_BG_3( D1_inv_for_aoi2222d4, D1 );

	wire ZN_row1;

	and MGM_BG_4( ZN_row1, A1_inv_for_aoi2222d4, B1_inv_for_aoi2222d4, C1_inv_for_aoi2222d4, D1_inv_for_aoi2222d4 );

	wire D2_inv_for_aoi2222d4;

	not MGM_BG_5( D2_inv_for_aoi2222d4, D2 );

	wire ZN_row2;

	and MGM_BG_6( ZN_row2, A1_inv_for_aoi2222d4, B1_inv_for_aoi2222d4, C1_inv_for_aoi2222d4, D2_inv_for_aoi2222d4 );

	wire C2_inv_for_aoi2222d4;

	not MGM_BG_7( C2_inv_for_aoi2222d4, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, A1_inv_for_aoi2222d4, B1_inv_for_aoi2222d4, C2_inv_for_aoi2222d4, D1_inv_for_aoi2222d4 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A1_inv_for_aoi2222d4, B1_inv_for_aoi2222d4, C2_inv_for_aoi2222d4, D2_inv_for_aoi2222d4 );

	wire B2_inv_for_aoi2222d4;

	not MGM_BG_10( B2_inv_for_aoi2222d4, B2 );

	wire ZN_row5;

	and MGM_BG_11( ZN_row5, A1_inv_for_aoi2222d4, B2_inv_for_aoi2222d4, C1_inv_for_aoi2222d4, D1_inv_for_aoi2222d4 );

	wire ZN_row6;

	and MGM_BG_12( ZN_row6, A1_inv_for_aoi2222d4, B2_inv_for_aoi2222d4, C1_inv_for_aoi2222d4, D2_inv_for_aoi2222d4 );

	wire ZN_row7;

	and MGM_BG_13( ZN_row7, A1_inv_for_aoi2222d4, B2_inv_for_aoi2222d4, C2_inv_for_aoi2222d4, D1_inv_for_aoi2222d4 );

	wire ZN_row8;

	and MGM_BG_14( ZN_row8, A1_inv_for_aoi2222d4, B2_inv_for_aoi2222d4, C2_inv_for_aoi2222d4, D2_inv_for_aoi2222d4 );

	wire A2_inv_for_aoi2222d4;

	not MGM_BG_15( A2_inv_for_aoi2222d4, A2 );

	wire ZN_row9;

	and MGM_BG_16( ZN_row9, A2_inv_for_aoi2222d4, B1_inv_for_aoi2222d4, C1_inv_for_aoi2222d4, D1_inv_for_aoi2222d4 );

	wire ZN_row10;

	and MGM_BG_17( ZN_row10, A2_inv_for_aoi2222d4, B1_inv_for_aoi2222d4, C1_inv_for_aoi2222d4, D2_inv_for_aoi2222d4 );

	wire ZN_row11;

	and MGM_BG_18( ZN_row11, A2_inv_for_aoi2222d4, B1_inv_for_aoi2222d4, C2_inv_for_aoi2222d4, D1_inv_for_aoi2222d4 );

	wire ZN_row12;

	and MGM_BG_19( ZN_row12, A2_inv_for_aoi2222d4, B1_inv_for_aoi2222d4, C2_inv_for_aoi2222d4, D2_inv_for_aoi2222d4 );

	wire ZN_row13;

	and MGM_BG_20( ZN_row13, A2_inv_for_aoi2222d4, B2_inv_for_aoi2222d4, C1_inv_for_aoi2222d4, D1_inv_for_aoi2222d4 );

	wire ZN_row14;

	and MGM_BG_21( ZN_row14, A2_inv_for_aoi2222d4, B2_inv_for_aoi2222d4, C1_inv_for_aoi2222d4, D2_inv_for_aoi2222d4 );

	wire ZN_row15;

	and MGM_BG_22( ZN_row15, A2_inv_for_aoi2222d4, B2_inv_for_aoi2222d4, C2_inv_for_aoi2222d4, D1_inv_for_aoi2222d4 );

	wire ZN_row16;

	and MGM_BG_23( ZN_row16, A2_inv_for_aoi2222d4, B2_inv_for_aoi2222d4, C2_inv_for_aoi2222d4, D2_inv_for_aoi2222d4 );

	or MGM_BG_24( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8, ZN_row9, ZN_row10, ZN_row11, ZN_row12, ZN_row13, ZN_row14, ZN_row15, ZN_row16 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi222d1_func( ZN, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output ZN;

	wire A1_inv_for_aoi222d1;

	not MGM_BG_0( A1_inv_for_aoi222d1, A1 );

	wire B1_inv_for_aoi222d1;

	not MGM_BG_1( B1_inv_for_aoi222d1, B1 );

	wire C1_inv_for_aoi222d1;

	not MGM_BG_2( C1_inv_for_aoi222d1, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A1_inv_for_aoi222d1, B1_inv_for_aoi222d1, C1_inv_for_aoi222d1 );

	wire C2_inv_for_aoi222d1;

	not MGM_BG_4( C2_inv_for_aoi222d1, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A1_inv_for_aoi222d1, B1_inv_for_aoi222d1, C2_inv_for_aoi222d1 );

	wire B2_inv_for_aoi222d1;

	not MGM_BG_6( B2_inv_for_aoi222d1, B2 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A1_inv_for_aoi222d1, B2_inv_for_aoi222d1, C1_inv_for_aoi222d1 );

	wire ZN_row4;

	and MGM_BG_8( ZN_row4, A1_inv_for_aoi222d1, B2_inv_for_aoi222d1, C2_inv_for_aoi222d1 );

	wire A2_inv_for_aoi222d1;

	not MGM_BG_9( A2_inv_for_aoi222d1, A2 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A2_inv_for_aoi222d1, B1_inv_for_aoi222d1, C1_inv_for_aoi222d1 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A2_inv_for_aoi222d1, B1_inv_for_aoi222d1, C2_inv_for_aoi222d1 );

	wire ZN_row7;

	and MGM_BG_12( ZN_row7, A2_inv_for_aoi222d1, B2_inv_for_aoi222d1, C1_inv_for_aoi222d1 );

	wire ZN_row8;

	and MGM_BG_13( ZN_row8, A2_inv_for_aoi222d1, B2_inv_for_aoi222d1, C2_inv_for_aoi222d1 );

	or MGM_BG_14( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi222d2_func( ZN, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output ZN;

	wire A1_inv_for_aoi222d2;

	not MGM_BG_0( A1_inv_for_aoi222d2, A1 );

	wire B1_inv_for_aoi222d2;

	not MGM_BG_1( B1_inv_for_aoi222d2, B1 );

	wire C1_inv_for_aoi222d2;

	not MGM_BG_2( C1_inv_for_aoi222d2, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A1_inv_for_aoi222d2, B1_inv_for_aoi222d2, C1_inv_for_aoi222d2 );

	wire C2_inv_for_aoi222d2;

	not MGM_BG_4( C2_inv_for_aoi222d2, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A1_inv_for_aoi222d2, B1_inv_for_aoi222d2, C2_inv_for_aoi222d2 );

	wire B2_inv_for_aoi222d2;

	not MGM_BG_6( B2_inv_for_aoi222d2, B2 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A1_inv_for_aoi222d2, B2_inv_for_aoi222d2, C1_inv_for_aoi222d2 );

	wire ZN_row4;

	and MGM_BG_8( ZN_row4, A1_inv_for_aoi222d2, B2_inv_for_aoi222d2, C2_inv_for_aoi222d2 );

	wire A2_inv_for_aoi222d2;

	not MGM_BG_9( A2_inv_for_aoi222d2, A2 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A2_inv_for_aoi222d2, B1_inv_for_aoi222d2, C1_inv_for_aoi222d2 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A2_inv_for_aoi222d2, B1_inv_for_aoi222d2, C2_inv_for_aoi222d2 );

	wire ZN_row7;

	and MGM_BG_12( ZN_row7, A2_inv_for_aoi222d2, B2_inv_for_aoi222d2, C1_inv_for_aoi222d2 );

	wire ZN_row8;

	and MGM_BG_13( ZN_row8, A2_inv_for_aoi222d2, B2_inv_for_aoi222d2, C2_inv_for_aoi222d2 );

	or MGM_BG_14( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi222d4_func( ZN, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output ZN;

	wire A1_inv_for_aoi222d4;

	not MGM_BG_0( A1_inv_for_aoi222d4, A1 );

	wire B1_inv_for_aoi222d4;

	not MGM_BG_1( B1_inv_for_aoi222d4, B1 );

	wire C1_inv_for_aoi222d4;

	not MGM_BG_2( C1_inv_for_aoi222d4, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A1_inv_for_aoi222d4, B1_inv_for_aoi222d4, C1_inv_for_aoi222d4 );

	wire C2_inv_for_aoi222d4;

	not MGM_BG_4( C2_inv_for_aoi222d4, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A1_inv_for_aoi222d4, B1_inv_for_aoi222d4, C2_inv_for_aoi222d4 );

	wire B2_inv_for_aoi222d4;

	not MGM_BG_6( B2_inv_for_aoi222d4, B2 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A1_inv_for_aoi222d4, B2_inv_for_aoi222d4, C1_inv_for_aoi222d4 );

	wire ZN_row4;

	and MGM_BG_8( ZN_row4, A1_inv_for_aoi222d4, B2_inv_for_aoi222d4, C2_inv_for_aoi222d4 );

	wire A2_inv_for_aoi222d4;

	not MGM_BG_9( A2_inv_for_aoi222d4, A2 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A2_inv_for_aoi222d4, B1_inv_for_aoi222d4, C1_inv_for_aoi222d4 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A2_inv_for_aoi222d4, B1_inv_for_aoi222d4, C2_inv_for_aoi222d4 );

	wire ZN_row7;

	and MGM_BG_12( ZN_row7, A2_inv_for_aoi222d4, B2_inv_for_aoi222d4, C1_inv_for_aoi222d4 );

	wire ZN_row8;

	and MGM_BG_13( ZN_row8, A2_inv_for_aoi222d4, B2_inv_for_aoi222d4, C2_inv_for_aoi222d4 );

	or MGM_BG_14( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi22d1_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_aoi22d1;

	not MGM_BG_0( A1_inv_for_aoi22d1, A1 );

	wire B1_inv_for_aoi22d1;

	not MGM_BG_1( B1_inv_for_aoi22d1, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_aoi22d1, B1_inv_for_aoi22d1 );

	wire B2_inv_for_aoi22d1;

	not MGM_BG_3( B2_inv_for_aoi22d1, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A1_inv_for_aoi22d1, B2_inv_for_aoi22d1 );

	wire A2_inv_for_aoi22d1;

	not MGM_BG_5( A2_inv_for_aoi22d1, A2 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, A2_inv_for_aoi22d1, B1_inv_for_aoi22d1 );

	wire ZN_row4;

	and MGM_BG_7( ZN_row4, A2_inv_for_aoi22d1, B2_inv_for_aoi22d1 );

	or MGM_BG_8( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi22d2_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_aoi22d2;

	not MGM_BG_0( A1_inv_for_aoi22d2, A1 );

	wire B1_inv_for_aoi22d2;

	not MGM_BG_1( B1_inv_for_aoi22d2, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_aoi22d2, B1_inv_for_aoi22d2 );

	wire B2_inv_for_aoi22d2;

	not MGM_BG_3( B2_inv_for_aoi22d2, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A1_inv_for_aoi22d2, B2_inv_for_aoi22d2 );

	wire A2_inv_for_aoi22d2;

	not MGM_BG_5( A2_inv_for_aoi22d2, A2 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, A2_inv_for_aoi22d2, B1_inv_for_aoi22d2 );

	wire ZN_row4;

	and MGM_BG_7( ZN_row4, A2_inv_for_aoi22d2, B2_inv_for_aoi22d2 );

	or MGM_BG_8( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi22d4_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_aoi22d4;

	not MGM_BG_0( A1_inv_for_aoi22d4, A1 );

	wire B1_inv_for_aoi22d4;

	not MGM_BG_1( B1_inv_for_aoi22d4, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_aoi22d4, B1_inv_for_aoi22d4 );

	wire B2_inv_for_aoi22d4;

	not MGM_BG_3( B2_inv_for_aoi22d4, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A1_inv_for_aoi22d4, B2_inv_for_aoi22d4 );

	wire A2_inv_for_aoi22d4;

	not MGM_BG_5( A2_inv_for_aoi22d4, A2 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, A2_inv_for_aoi22d4, B1_inv_for_aoi22d4 );

	wire ZN_row4;

	and MGM_BG_7( ZN_row4, A2_inv_for_aoi22d4, B2_inv_for_aoi22d4 );

	or MGM_BG_8( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi311d1_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoi311d1;

	not MGM_BG_0( A_inv_for_aoi311d1, A );

	wire B_inv_for_aoi311d1;

	not MGM_BG_1( B_inv_for_aoi311d1, B );

	wire C1_inv_for_aoi311d1;

	not MGM_BG_2( C1_inv_for_aoi311d1, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi311d1, B_inv_for_aoi311d1, C1_inv_for_aoi311d1 );

	wire C2_inv_for_aoi311d1;

	not MGM_BG_4( C2_inv_for_aoi311d1, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi311d1, B_inv_for_aoi311d1, C2_inv_for_aoi311d1 );

	wire C3_inv_for_aoi311d1;

	not MGM_BG_6( C3_inv_for_aoi311d1, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi311d1, B_inv_for_aoi311d1, C3_inv_for_aoi311d1 );

	or MGM_BG_8( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi311d2_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoi311d2;

	not MGM_BG_0( A_inv_for_aoi311d2, A );

	wire B_inv_for_aoi311d2;

	not MGM_BG_1( B_inv_for_aoi311d2, B );

	wire C1_inv_for_aoi311d2;

	not MGM_BG_2( C1_inv_for_aoi311d2, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi311d2, B_inv_for_aoi311d2, C1_inv_for_aoi311d2 );

	wire C2_inv_for_aoi311d2;

	not MGM_BG_4( C2_inv_for_aoi311d2, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi311d2, B_inv_for_aoi311d2, C2_inv_for_aoi311d2 );

	wire C3_inv_for_aoi311d2;

	not MGM_BG_6( C3_inv_for_aoi311d2, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi311d2, B_inv_for_aoi311d2, C3_inv_for_aoi311d2 );

	or MGM_BG_8( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi311d4_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoi311d4;

	not MGM_BG_0( A_inv_for_aoi311d4, A );

	wire B_inv_for_aoi311d4;

	not MGM_BG_1( B_inv_for_aoi311d4, B );

	wire C1_inv_for_aoi311d4;

	not MGM_BG_2( C1_inv_for_aoi311d4, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi311d4, B_inv_for_aoi311d4, C1_inv_for_aoi311d4 );

	wire C2_inv_for_aoi311d4;

	not MGM_BG_4( C2_inv_for_aoi311d4, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi311d4, B_inv_for_aoi311d4, C2_inv_for_aoi311d4 );

	wire C3_inv_for_aoi311d4;

	not MGM_BG_6( C3_inv_for_aoi311d4, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi311d4, B_inv_for_aoi311d4, C3_inv_for_aoi311d4 );

	or MGM_BG_8( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi31d1_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_aoi31d1;

	not MGM_BG_0( A_inv_for_aoi31d1, A );

	wire B1_inv_for_aoi31d1;

	not MGM_BG_1( B1_inv_for_aoi31d1, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoi31d1, B1_inv_for_aoi31d1 );

	wire B2_inv_for_aoi31d1;

	not MGM_BG_3( B2_inv_for_aoi31d1, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A_inv_for_aoi31d1, B2_inv_for_aoi31d1 );

	wire B3_inv_for_aoi31d1;

	not MGM_BG_5( B3_inv_for_aoi31d1, B3 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, A_inv_for_aoi31d1, B3_inv_for_aoi31d1 );

	or MGM_BG_7( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi31d2_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_aoi31d2;

	not MGM_BG_0( A_inv_for_aoi31d2, A );

	wire B1_inv_for_aoi31d2;

	not MGM_BG_1( B1_inv_for_aoi31d2, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoi31d2, B1_inv_for_aoi31d2 );

	wire B2_inv_for_aoi31d2;

	not MGM_BG_3( B2_inv_for_aoi31d2, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A_inv_for_aoi31d2, B2_inv_for_aoi31d2 );

	wire B3_inv_for_aoi31d2;

	not MGM_BG_5( B3_inv_for_aoi31d2, B3 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, A_inv_for_aoi31d2, B3_inv_for_aoi31d2 );

	or MGM_BG_7( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi31d4_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_aoi31d4;

	not MGM_BG_0( A_inv_for_aoi31d4, A );

	wire B1_inv_for_aoi31d4;

	not MGM_BG_1( B1_inv_for_aoi31d4, B1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoi31d4, B1_inv_for_aoi31d4 );

	wire B2_inv_for_aoi31d4;

	not MGM_BG_3( B2_inv_for_aoi31d4, B2 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, A_inv_for_aoi31d4, B2_inv_for_aoi31d4 );

	wire B3_inv_for_aoi31d4;

	not MGM_BG_5( B3_inv_for_aoi31d4, B3 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, A_inv_for_aoi31d4, B3_inv_for_aoi31d4 );

	or MGM_BG_7( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi321d1_func( ZN, A, B1, B2, C1, C2, C3 );
input A, B1, B2, C1, C2, C3;
output ZN;

	wire A_inv_for_aoi321d1;

	not MGM_BG_0( A_inv_for_aoi321d1, A );

	wire B1_inv_for_aoi321d1;

	not MGM_BG_1( B1_inv_for_aoi321d1, B1 );

	wire C1_inv_for_aoi321d1;

	not MGM_BG_2( C1_inv_for_aoi321d1, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi321d1, B1_inv_for_aoi321d1, C1_inv_for_aoi321d1 );

	wire C2_inv_for_aoi321d1;

	not MGM_BG_4( C2_inv_for_aoi321d1, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi321d1, B1_inv_for_aoi321d1, C2_inv_for_aoi321d1 );

	wire C3_inv_for_aoi321d1;

	not MGM_BG_6( C3_inv_for_aoi321d1, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi321d1, B1_inv_for_aoi321d1, C3_inv_for_aoi321d1 );

	wire B2_inv_for_aoi321d1;

	not MGM_BG_8( B2_inv_for_aoi321d1, B2 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A_inv_for_aoi321d1, B2_inv_for_aoi321d1, C1_inv_for_aoi321d1 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A_inv_for_aoi321d1, B2_inv_for_aoi321d1, C2_inv_for_aoi321d1 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A_inv_for_aoi321d1, B2_inv_for_aoi321d1, C3_inv_for_aoi321d1 );

	or MGM_BG_12( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi321d2_func( ZN, A, B1, B2, C1, C2, C3 );
input A, B1, B2, C1, C2, C3;
output ZN;

	wire A_inv_for_aoi321d2;

	not MGM_BG_0( A_inv_for_aoi321d2, A );

	wire B1_inv_for_aoi321d2;

	not MGM_BG_1( B1_inv_for_aoi321d2, B1 );

	wire C1_inv_for_aoi321d2;

	not MGM_BG_2( C1_inv_for_aoi321d2, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi321d2, B1_inv_for_aoi321d2, C1_inv_for_aoi321d2 );

	wire C2_inv_for_aoi321d2;

	not MGM_BG_4( C2_inv_for_aoi321d2, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi321d2, B1_inv_for_aoi321d2, C2_inv_for_aoi321d2 );

	wire C3_inv_for_aoi321d2;

	not MGM_BG_6( C3_inv_for_aoi321d2, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi321d2, B1_inv_for_aoi321d2, C3_inv_for_aoi321d2 );

	wire B2_inv_for_aoi321d2;

	not MGM_BG_8( B2_inv_for_aoi321d2, B2 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A_inv_for_aoi321d2, B2_inv_for_aoi321d2, C1_inv_for_aoi321d2 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A_inv_for_aoi321d2, B2_inv_for_aoi321d2, C2_inv_for_aoi321d2 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A_inv_for_aoi321d2, B2_inv_for_aoi321d2, C3_inv_for_aoi321d2 );

	or MGM_BG_12( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi321d4_func( ZN, A, B1, B2, C1, C2, C3 );
input A, B1, B2, C1, C2, C3;
output ZN;

	wire A_inv_for_aoi321d4;

	not MGM_BG_0( A_inv_for_aoi321d4, A );

	wire B1_inv_for_aoi321d4;

	not MGM_BG_1( B1_inv_for_aoi321d4, B1 );

	wire C1_inv_for_aoi321d4;

	not MGM_BG_2( C1_inv_for_aoi321d4, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A_inv_for_aoi321d4, B1_inv_for_aoi321d4, C1_inv_for_aoi321d4 );

	wire C2_inv_for_aoi321d4;

	not MGM_BG_4( C2_inv_for_aoi321d4, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_aoi321d4, B1_inv_for_aoi321d4, C2_inv_for_aoi321d4 );

	wire C3_inv_for_aoi321d4;

	not MGM_BG_6( C3_inv_for_aoi321d4, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A_inv_for_aoi321d4, B1_inv_for_aoi321d4, C3_inv_for_aoi321d4 );

	wire B2_inv_for_aoi321d4;

	not MGM_BG_8( B2_inv_for_aoi321d4, B2 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A_inv_for_aoi321d4, B2_inv_for_aoi321d4, C1_inv_for_aoi321d4 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A_inv_for_aoi321d4, B2_inv_for_aoi321d4, C2_inv_for_aoi321d4 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A_inv_for_aoi321d4, B2_inv_for_aoi321d4, C3_inv_for_aoi321d4 );

	or MGM_BG_12( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi322d1_func( ZN, A1, A2, B1, B2, C1, C2, C3 );
input A1, A2, B1, B2, C1, C2, C3;
output ZN;

	wire A1_inv_for_aoi322d1;

	not MGM_BG_0( A1_inv_for_aoi322d1, A1 );

	wire B1_inv_for_aoi322d1;

	not MGM_BG_1( B1_inv_for_aoi322d1, B1 );

	wire C1_inv_for_aoi322d1;

	not MGM_BG_2( C1_inv_for_aoi322d1, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A1_inv_for_aoi322d1, B1_inv_for_aoi322d1, C1_inv_for_aoi322d1 );

	wire C2_inv_for_aoi322d1;

	not MGM_BG_4( C2_inv_for_aoi322d1, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A1_inv_for_aoi322d1, B1_inv_for_aoi322d1, C2_inv_for_aoi322d1 );

	wire C3_inv_for_aoi322d1;

	not MGM_BG_6( C3_inv_for_aoi322d1, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A1_inv_for_aoi322d1, B1_inv_for_aoi322d1, C3_inv_for_aoi322d1 );

	wire B2_inv_for_aoi322d1;

	not MGM_BG_8( B2_inv_for_aoi322d1, B2 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A1_inv_for_aoi322d1, B2_inv_for_aoi322d1, C1_inv_for_aoi322d1 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A1_inv_for_aoi322d1, B2_inv_for_aoi322d1, C2_inv_for_aoi322d1 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A1_inv_for_aoi322d1, B2_inv_for_aoi322d1, C3_inv_for_aoi322d1 );

	wire A2_inv_for_aoi322d1;

	not MGM_BG_12( A2_inv_for_aoi322d1, A2 );

	wire ZN_row7;

	and MGM_BG_13( ZN_row7, A2_inv_for_aoi322d1, B1_inv_for_aoi322d1, C1_inv_for_aoi322d1 );

	wire ZN_row8;

	and MGM_BG_14( ZN_row8, A2_inv_for_aoi322d1, B1_inv_for_aoi322d1, C2_inv_for_aoi322d1 );

	wire ZN_row9;

	and MGM_BG_15( ZN_row9, A2_inv_for_aoi322d1, B1_inv_for_aoi322d1, C3_inv_for_aoi322d1 );

	wire ZN_row10;

	and MGM_BG_16( ZN_row10, A2_inv_for_aoi322d1, B2_inv_for_aoi322d1, C1_inv_for_aoi322d1 );

	wire ZN_row11;

	and MGM_BG_17( ZN_row11, A2_inv_for_aoi322d1, B2_inv_for_aoi322d1, C2_inv_for_aoi322d1 );

	wire ZN_row12;

	and MGM_BG_18( ZN_row12, A2_inv_for_aoi322d1, B2_inv_for_aoi322d1, C3_inv_for_aoi322d1 );

	or MGM_BG_19( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8, ZN_row9, ZN_row10, ZN_row11, ZN_row12 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi322d2_func( ZN, A1, A2, B1, B2, C1, C2, C3 );
input A1, A2, B1, B2, C1, C2, C3;
output ZN;

	wire A1_inv_for_aoi322d2;

	not MGM_BG_0( A1_inv_for_aoi322d2, A1 );

	wire B1_inv_for_aoi322d2;

	not MGM_BG_1( B1_inv_for_aoi322d2, B1 );

	wire C1_inv_for_aoi322d2;

	not MGM_BG_2( C1_inv_for_aoi322d2, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A1_inv_for_aoi322d2, B1_inv_for_aoi322d2, C1_inv_for_aoi322d2 );

	wire C2_inv_for_aoi322d2;

	not MGM_BG_4( C2_inv_for_aoi322d2, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A1_inv_for_aoi322d2, B1_inv_for_aoi322d2, C2_inv_for_aoi322d2 );

	wire C3_inv_for_aoi322d2;

	not MGM_BG_6( C3_inv_for_aoi322d2, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A1_inv_for_aoi322d2, B1_inv_for_aoi322d2, C3_inv_for_aoi322d2 );

	wire B2_inv_for_aoi322d2;

	not MGM_BG_8( B2_inv_for_aoi322d2, B2 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A1_inv_for_aoi322d2, B2_inv_for_aoi322d2, C1_inv_for_aoi322d2 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A1_inv_for_aoi322d2, B2_inv_for_aoi322d2, C2_inv_for_aoi322d2 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A1_inv_for_aoi322d2, B2_inv_for_aoi322d2, C3_inv_for_aoi322d2 );

	wire A2_inv_for_aoi322d2;

	not MGM_BG_12( A2_inv_for_aoi322d2, A2 );

	wire ZN_row7;

	and MGM_BG_13( ZN_row7, A2_inv_for_aoi322d2, B1_inv_for_aoi322d2, C1_inv_for_aoi322d2 );

	wire ZN_row8;

	and MGM_BG_14( ZN_row8, A2_inv_for_aoi322d2, B1_inv_for_aoi322d2, C2_inv_for_aoi322d2 );

	wire ZN_row9;

	and MGM_BG_15( ZN_row9, A2_inv_for_aoi322d2, B1_inv_for_aoi322d2, C3_inv_for_aoi322d2 );

	wire ZN_row10;

	and MGM_BG_16( ZN_row10, A2_inv_for_aoi322d2, B2_inv_for_aoi322d2, C1_inv_for_aoi322d2 );

	wire ZN_row11;

	and MGM_BG_17( ZN_row11, A2_inv_for_aoi322d2, B2_inv_for_aoi322d2, C2_inv_for_aoi322d2 );

	wire ZN_row12;

	and MGM_BG_18( ZN_row12, A2_inv_for_aoi322d2, B2_inv_for_aoi322d2, C3_inv_for_aoi322d2 );

	or MGM_BG_19( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8, ZN_row9, ZN_row10, ZN_row11, ZN_row12 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoi322d4_func( ZN, A1, A2, B1, B2, C1, C2, C3 );
input A1, A2, B1, B2, C1, C2, C3;
output ZN;

	wire A1_inv_for_aoi322d4;

	not MGM_BG_0( A1_inv_for_aoi322d4, A1 );

	wire B1_inv_for_aoi322d4;

	not MGM_BG_1( B1_inv_for_aoi322d4, B1 );

	wire C1_inv_for_aoi322d4;

	not MGM_BG_2( C1_inv_for_aoi322d4, C1 );

	wire ZN_row1;

	and MGM_BG_3( ZN_row1, A1_inv_for_aoi322d4, B1_inv_for_aoi322d4, C1_inv_for_aoi322d4 );

	wire C2_inv_for_aoi322d4;

	not MGM_BG_4( C2_inv_for_aoi322d4, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A1_inv_for_aoi322d4, B1_inv_for_aoi322d4, C2_inv_for_aoi322d4 );

	wire C3_inv_for_aoi322d4;

	not MGM_BG_6( C3_inv_for_aoi322d4, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, A1_inv_for_aoi322d4, B1_inv_for_aoi322d4, C3_inv_for_aoi322d4 );

	wire B2_inv_for_aoi322d4;

	not MGM_BG_8( B2_inv_for_aoi322d4, B2 );

	wire ZN_row4;

	and MGM_BG_9( ZN_row4, A1_inv_for_aoi322d4, B2_inv_for_aoi322d4, C1_inv_for_aoi322d4 );

	wire ZN_row5;

	and MGM_BG_10( ZN_row5, A1_inv_for_aoi322d4, B2_inv_for_aoi322d4, C2_inv_for_aoi322d4 );

	wire ZN_row6;

	and MGM_BG_11( ZN_row6, A1_inv_for_aoi322d4, B2_inv_for_aoi322d4, C3_inv_for_aoi322d4 );

	wire A2_inv_for_aoi322d4;

	not MGM_BG_12( A2_inv_for_aoi322d4, A2 );

	wire ZN_row7;

	and MGM_BG_13( ZN_row7, A2_inv_for_aoi322d4, B1_inv_for_aoi322d4, C1_inv_for_aoi322d4 );

	wire ZN_row8;

	and MGM_BG_14( ZN_row8, A2_inv_for_aoi322d4, B1_inv_for_aoi322d4, C2_inv_for_aoi322d4 );

	wire ZN_row9;

	and MGM_BG_15( ZN_row9, A2_inv_for_aoi322d4, B1_inv_for_aoi322d4, C3_inv_for_aoi322d4 );

	wire ZN_row10;

	and MGM_BG_16( ZN_row10, A2_inv_for_aoi322d4, B2_inv_for_aoi322d4, C1_inv_for_aoi322d4 );

	wire ZN_row11;

	and MGM_BG_17( ZN_row11, A2_inv_for_aoi322d4, B2_inv_for_aoi322d4, C2_inv_for_aoi322d4 );

	wire ZN_row12;

	and MGM_BG_18( ZN_row12, A2_inv_for_aoi322d4, B2_inv_for_aoi322d4, C3_inv_for_aoi322d4 );

	or MGM_BG_19( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4, ZN_row5, ZN_row6, ZN_row7, ZN_row8, ZN_row9, ZN_row10, ZN_row11, ZN_row12 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim211d1_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoim211d1;

	not MGM_BG_0( A_inv_for_aoim211d1, A );

	wire B_inv_for_aoim211d1;

	not MGM_BG_1( B_inv_for_aoim211d1, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoim211d1, B_inv_for_aoim211d1, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A_inv_for_aoim211d1, B_inv_for_aoim211d1, C2 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim211d2_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoim211d2;

	not MGM_BG_0( A_inv_for_aoim211d2, A );

	wire B_inv_for_aoim211d2;

	not MGM_BG_1( B_inv_for_aoim211d2, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoim211d2, B_inv_for_aoim211d2, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A_inv_for_aoim211d2, B_inv_for_aoim211d2, C2 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim211d4_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoim211d4;

	not MGM_BG_0( A_inv_for_aoim211d4, A );

	wire B_inv_for_aoim211d4;

	not MGM_BG_1( B_inv_for_aoim211d4, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoim211d4, B_inv_for_aoim211d4, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A_inv_for_aoim211d4, B_inv_for_aoim211d4, C2 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim21d1_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_aoim21d1;

	not MGM_BG_0( A_inv_for_aoim21d1, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim21d1, B1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim21d1, B2 );

	or MGM_BG_3( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim21d2_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_aoim21d2;

	not MGM_BG_0( A_inv_for_aoim21d2, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim21d2, B1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim21d2, B2 );

	or MGM_BG_3( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim21d4_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_aoim21d4;

	not MGM_BG_0( A_inv_for_aoim21d4, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim21d4, B1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim21d4, B2 );

	or MGM_BG_3( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim22d1_func( Z, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output Z;

	wire A1_inv_for_aoim22d1;

	not MGM_BG_0( A1_inv_for_aoim22d1, A1 );

	wire Z_row1;

	and MGM_BG_1( Z_row1, A1_inv_for_aoim22d1, B1 );

	wire Z_row2;

	and MGM_BG_2( Z_row2, A1_inv_for_aoim22d1, B2 );

	wire A2_inv_for_aoim22d1;

	not MGM_BG_3( A2_inv_for_aoim22d1, A2 );

	wire Z_row3;

	and MGM_BG_4( Z_row3, A2_inv_for_aoim22d1, B1 );

	wire Z_row4;

	and MGM_BG_5( Z_row4, A2_inv_for_aoim22d1, B2 );

	or MGM_BG_6( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim22d2_func( Z, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output Z;

	wire A1_inv_for_aoim22d2;

	not MGM_BG_0( A1_inv_for_aoim22d2, A1 );

	wire Z_row1;

	and MGM_BG_1( Z_row1, A1_inv_for_aoim22d2, B1 );

	wire Z_row2;

	and MGM_BG_2( Z_row2, A1_inv_for_aoim22d2, B2 );

	wire A2_inv_for_aoim22d2;

	not MGM_BG_3( A2_inv_for_aoim22d2, A2 );

	wire Z_row3;

	and MGM_BG_4( Z_row3, A2_inv_for_aoim22d2, B1 );

	wire Z_row4;

	and MGM_BG_5( Z_row4, A2_inv_for_aoim22d2, B2 );

	or MGM_BG_6( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim22d4_func( Z, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output Z;

	wire A1_inv_for_aoim22d4;

	not MGM_BG_0( A1_inv_for_aoim22d4, A1 );

	wire Z_row1;

	and MGM_BG_1( Z_row1, A1_inv_for_aoim22d4, B1 );

	wire Z_row2;

	and MGM_BG_2( Z_row2, A1_inv_for_aoim22d4, B2 );

	wire A2_inv_for_aoim22d4;

	not MGM_BG_3( A2_inv_for_aoim22d4, A2 );

	wire Z_row3;

	and MGM_BG_4( Z_row3, A2_inv_for_aoim22d4, B1 );

	wire Z_row4;

	and MGM_BG_5( Z_row4, A2_inv_for_aoim22d4, B2 );

	or MGM_BG_6( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim2m11d1_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoim2m11d1;

	not MGM_BG_0( A_inv_for_aoim2m11d1, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim2m11d1, B, C1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim2m11d1, B, C2 );

	or MGM_BG_3( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim2m11d2_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoim2m11d2;

	not MGM_BG_0( A_inv_for_aoim2m11d2, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim2m11d2, B, C1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim2m11d2, B, C2 );

	or MGM_BG_3( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim2m11d4_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aoim2m11d4;

	not MGM_BG_0( A_inv_for_aoim2m11d4, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim2m11d4, B, C1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim2m11d4, B, C2 );

	or MGM_BG_3( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim311d1_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoim311d1;

	not MGM_BG_0( A_inv_for_aoim311d1, A );

	wire B_inv_for_aoim311d1;

	not MGM_BG_1( B_inv_for_aoim311d1, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoim311d1, B_inv_for_aoim311d1, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A_inv_for_aoim311d1, B_inv_for_aoim311d1, C2 );

	wire ZN_row3;

	and MGM_BG_4( ZN_row3, A_inv_for_aoim311d1, B_inv_for_aoim311d1, C3 );

	or MGM_BG_5( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim311d2_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoim311d2;

	not MGM_BG_0( A_inv_for_aoim311d2, A );

	wire B_inv_for_aoim311d2;

	not MGM_BG_1( B_inv_for_aoim311d2, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoim311d2, B_inv_for_aoim311d2, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A_inv_for_aoim311d2, B_inv_for_aoim311d2, C2 );

	wire ZN_row3;

	and MGM_BG_4( ZN_row3, A_inv_for_aoim311d2, B_inv_for_aoim311d2, C3 );

	or MGM_BG_5( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim311d4_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoim311d4;

	not MGM_BG_0( A_inv_for_aoim311d4, A );

	wire B_inv_for_aoim311d4;

	not MGM_BG_1( B_inv_for_aoim311d4, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_aoim311d4, B_inv_for_aoim311d4, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A_inv_for_aoim311d4, B_inv_for_aoim311d4, C2 );

	wire ZN_row3;

	and MGM_BG_4( ZN_row3, A_inv_for_aoim311d4, B_inv_for_aoim311d4, C3 );

	or MGM_BG_5( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim31d1_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_aoim31d1;

	not MGM_BG_0( A_inv_for_aoim31d1, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim31d1, B1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim31d1, B2 );

	wire ZN_row3;

	and MGM_BG_3( ZN_row3, A_inv_for_aoim31d1, B3 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim31d2_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_aoim31d2;

	not MGM_BG_0( A_inv_for_aoim31d2, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim31d2, B1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim31d2, B2 );

	wire ZN_row3;

	and MGM_BG_3( ZN_row3, A_inv_for_aoim31d2, B3 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim31d4_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_aoim31d4;

	not MGM_BG_0( A_inv_for_aoim31d4, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim31d4, B1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim31d4, B2 );

	wire ZN_row3;

	and MGM_BG_3( ZN_row3, A_inv_for_aoim31d4, B3 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim3m11d1_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoim3m11d1;

	not MGM_BG_0( A_inv_for_aoim3m11d1, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim3m11d1, B, C1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim3m11d1, B, C2 );

	wire ZN_row3;

	and MGM_BG_3( ZN_row3, A_inv_for_aoim3m11d1, B, C3 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim3m11d2_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoim3m11d2;

	not MGM_BG_0( A_inv_for_aoim3m11d2, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim3m11d2, B, C1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim3m11d2, B, C2 );

	wire ZN_row3;

	and MGM_BG_3( ZN_row3, A_inv_for_aoim3m11d2, B, C3 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aoim3m11d4_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_aoim3m11d4;

	not MGM_BG_0( A_inv_for_aoim3m11d4, A );

	wire ZN_row1;

	and MGM_BG_1( ZN_row1, A_inv_for_aoim3m11d4, B, C1 );

	wire ZN_row2;

	and MGM_BG_2( ZN_row2, A_inv_for_aoim3m11d4, B, C2 );

	wire ZN_row3;

	and MGM_BG_3( ZN_row3, A_inv_for_aoim3m11d4, B, C3 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aon211d1_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aon211d1;

	not MGM_BG_0( A_inv_for_aon211d1, A );

	wire B_inv_for_aon211d1;

	not MGM_BG_1( B_inv_for_aon211d1, B );

	wire C1_inv_for_aon211d1;

	not MGM_BG_2( C1_inv_for_aon211d1, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B_inv_for_aon211d1, C1_inv_for_aon211d1 );

	wire C2_inv_for_aon211d1;

	not MGM_BG_4( C2_inv_for_aon211d1, C2 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, B_inv_for_aon211d1, C2_inv_for_aon211d1 );

	or MGM_BG_6( ZN, A_inv_for_aon211d1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aon211d2_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aon211d2;

	not MGM_BG_0( A_inv_for_aon211d2, A );

	wire B_inv_for_aon211d2;

	not MGM_BG_1( B_inv_for_aon211d2, B );

	wire C1_inv_for_aon211d2;

	not MGM_BG_2( C1_inv_for_aon211d2, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B_inv_for_aon211d2, C1_inv_for_aon211d2 );

	wire C2_inv_for_aon211d2;

	not MGM_BG_4( C2_inv_for_aon211d2, C2 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, B_inv_for_aon211d2, C2_inv_for_aon211d2 );

	or MGM_BG_6( ZN, A_inv_for_aon211d2, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aon211d4_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_aon211d4;

	not MGM_BG_0( A_inv_for_aon211d4, A );

	wire B_inv_for_aon211d4;

	not MGM_BG_1( B_inv_for_aon211d4, B );

	wire C1_inv_for_aon211d4;

	not MGM_BG_2( C1_inv_for_aon211d4, C1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B_inv_for_aon211d4, C1_inv_for_aon211d4 );

	wire C2_inv_for_aon211d4;

	not MGM_BG_4( C2_inv_for_aon211d4, C2 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, B_inv_for_aon211d4, C2_inv_for_aon211d4 );

	or MGM_BG_6( ZN, A_inv_for_aon211d4, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor211d1_func( Z, A, B, C1, C2 );
input A, B, C1, C2;
output Z;

	wire Z_row3;

	and MGM_BG_0( Z_row3, C1, C2 );

	or MGM_BG_1( Z, A, B, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor211d2_func( Z, A, B, C1, C2 );
input A, B, C1, C2;
output Z;

	wire Z_row3;

	and MGM_BG_0( Z_row3, C1, C2 );

	or MGM_BG_1( Z, A, B, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor211d4_func( Z, A, B, C1, C2 );
input A, B, C1, C2;
output Z;

	wire Z_row3;

	and MGM_BG_0( Z_row3, C1, C2 );

	or MGM_BG_1( Z, A, B, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor21d1_func( Z, A, B1, B2 );
input A, B1, B2;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2 );

	or MGM_BG_1( Z, A, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor21d2_func( Z, A, B1, B2 );
input A, B1, B2;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2 );

	or MGM_BG_1( Z, A, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor21d4_func( Z, A, B1, B2 );
input A, B1, B2;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2 );

	or MGM_BG_1( Z, A, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor221d1_func( Z, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2 );

	wire Z_row3;

	and MGM_BG_1( Z_row3, C1, C2 );

	or MGM_BG_2( Z, A, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor221d2_func( Z, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2 );

	wire Z_row3;

	and MGM_BG_1( Z_row3, C1, C2 );

	or MGM_BG_2( Z, A, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor221d4_func( Z, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2 );

	wire Z_row3;

	and MGM_BG_1( Z_row3, C1, C2 );

	or MGM_BG_2( Z, A, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor222d1_func( Z, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, B1, B2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, C1, C2 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor222d2_func( Z, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, B1, B2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, C1, C2 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor222d4_func( Z, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, B1, B2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, C1, C2 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor22d1_func( Z, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, B1, B2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor22d2_func( Z, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, B1, B2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor22d4_func( Z, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, B1, B2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor311d1_func( Z, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output Z;

	wire Z_row3;

	and MGM_BG_0( Z_row3, C1, C2, C3 );

	or MGM_BG_1( Z, A, B, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor311d2_func( Z, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output Z;

	wire Z_row3;

	and MGM_BG_0( Z_row3, C1, C2, C3 );

	or MGM_BG_1( Z, A, B, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor311d4_func( Z, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output Z;

	wire Z_row3;

	and MGM_BG_0( Z_row3, C1, C2, C3 );

	or MGM_BG_1( Z, A, B, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor31d1_func( Z, A, B1, B2, B3 );
input A, B1, B2, B3;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2, B3 );

	or MGM_BG_1( Z, A, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor31d2_func( Z, A, B1, B2, B3 );
input A, B1, B2, B3;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2, B3 );

	or MGM_BG_1( Z, A, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module aor31d4_func( Z, A, B1, B2, B3 );
input A, B1, B2, B3;
output Z;

	wire Z_row2;

	and MGM_BG_0( Z_row2, B1, B2, B3 );

	or MGM_BG_1( Z, A, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bh01d1_func( I );
inout I;

	wire MGM_WB_0;

	wire MGM_WB_1;

	assign MGM_WB_0 = 1'b0;

	assign MGM_WB_1 = 1'b1;

	bufif0 MGM_BG_0( I, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bufbd1_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bufbd2_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bufbd3_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bufbd4_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bufbd7_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bufbda_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bufbdf_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module bufbdk_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buffd1_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buffd2_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buffd3_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buffd4_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buffd7_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buffda_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buftd1_func( Z, EN, I );
input EN, I;
output Z;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_buftd1;

	not MGM_BG_0( EN_inv_for_buftd1, EN );

	and MGM_BG_1( MGM_WB_0, EN_inv_for_buftd1, I );

	buf MGM_BG_2( MGM_WB_1, EN );

	bufif0 MGM_BG_3( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buftd2_func( Z, EN, I );
input EN, I;
output Z;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_buftd2;

	not MGM_BG_0( EN_inv_for_buftd2, EN );

	and MGM_BG_1( MGM_WB_0, EN_inv_for_buftd2, I );

	buf MGM_BG_2( MGM_WB_1, EN );

	bufif0 MGM_BG_3( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buftd4_func( Z, EN, I );
input EN, I;
output Z;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_buftd4;

	not MGM_BG_0( EN_inv_for_buftd4, EN );

	and MGM_BG_1( MGM_WB_0, EN_inv_for_buftd4, I );

	buf MGM_BG_2( MGM_WB_1, EN );

	bufif0 MGM_BG_3( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buftd7_func( Z, EN, I );
input EN, I;
output Z;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_buftd7;

	not MGM_BG_0( EN_inv_for_buftd7, EN );

	and MGM_BG_1( MGM_WB_0, EN_inv_for_buftd7, I );

	buf MGM_BG_2( MGM_WB_1, EN );

	bufif0 MGM_BG_3( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module buftda_func( Z, EN, I );
input EN, I;
output Z;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_buftda;

	not MGM_BG_0( EN_inv_for_buftda, EN );

	and MGM_BG_1( MGM_WB_0, EN_inv_for_buftda, I );

	buf MGM_BG_2( MGM_WB_1, EN );

	bufif0 MGM_BG_3( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module cg01d0_func( CO, A, B, CI );
input A, B, CI;
output CO;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module cg01d1_func( CO, A, B, CI );
input A, B, CI;
output CO;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module cg01d2_func( CO, A, B, CI );
input A, B, CI;
output CO;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module cg01d4_func( CO, A, B, CI );
input A, B, CI;
output CO;

	wire CO_row1;

	and MGM_BG_0( CO_row1, A, B );

	wire CO_row2;

	and MGM_BG_1( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_2( CO_row3, B, CI );

	or MGM_BG_3( CO, CO_row1, CO_row2, CO_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module clk2d2_func( C, CN, CLK );
input CLK;
output C, CN;

	buf MGM_BG_0( C, CLK );

	not MGM_BG_1( CN, CLK );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module cload1_func( I );
input I;

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  n  ?  ?  :  ?  :  -;
  ?  0  r  0  ?  :  ?  :  0;
  ?  0  p  0  ?  :  0  :  0;
  1  0  ?  ?  ?  :  ?  :  0;
  0  ?  r  1  ?  :  ?  :  1;
  0  ?  p  1  ?  :  1  :  1;
  0  1  ?  ?  ?  :  ?  :  1;
  ?  ?  ?  ?  *  :  ?  :  x;
  0  0  ?  *  ?  :  ?  :  -;
  0  n  ?  ?  ?  :  ?  :  -;
  n  0  ?  ?  ?  :  ?  :  -;
  0  p  ?  ?  ?  :  ?  :  -;
                  
endtable
endprimitive


`celldefine
module decfq1_func( Q, CDN, CPN, D, ENN, notifier );
input CDN, CPN, D, ENN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire ENN_inv_for_decfq1;

	not MGM_BG_2( ENN_inv_for_decfq1, ENN );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_decfq1, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, ENN, IQ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module decfq2_func( Q, CDN, CPN, D, ENN, notifier );
input CDN, CPN, D, ENN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire ENN_inv_for_decfq2;

	not MGM_BG_2( ENN_inv_for_decfq2, ENN );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_decfq2, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, ENN, IQ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module decfq4_func( Q, CDN, CPN, D, ENN, notifier );
input CDN, CPN, D, ENN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire ENN_inv_for_decfq4;

	not MGM_BG_2( ENN_inv_for_decfq4, ENN );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_decfq4, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, ENN, IQ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module decrq1_func( Q, CDN, CP, D, ENN, notifier );
input CDN, CP, D, ENN, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire ENN_inv_for_decrq1;

	not MGM_BG_1( ENN_inv_for_decrq1, ENN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_decrq1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, ENN, IQ );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module decrq2_func( Q, CDN, CP, D, ENN, notifier );
input CDN, CP, D, ENN, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire ENN_inv_for_decrq2;

	not MGM_BG_1( ENN_inv_for_decrq2, ENN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_decrq2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, ENN, IQ );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module decrq4_func( Q, CDN, CP, D, ENN, notifier );
input CDN, CP, D, ENN, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire ENN_inv_for_decrq4;

	not MGM_BG_1( ENN_inv_for_decrq4, ENN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_decrq4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, ENN, IQ );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module denrq1_func( Q, CP, D, ENN, notifier );
input CP, D, ENN, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_denrq1;

	not MGM_BG_0( ENN_inv_for_denrq1, ENN );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, ENN_inv_for_denrq1, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, ENN, IQ );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module denrq2_func( Q, CP, D, ENN, notifier );
input CP, D, ENN, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_denrq2;

	not MGM_BG_0( ENN_inv_for_denrq2, ENN );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, ENN_inv_for_denrq2, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, ENN, IQ );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module denrq4_func( Q, CP, D, ENN, notifier );
input CP, D, ENN, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_denrq4;

	not MGM_BG_0( ENN_inv_for_denrq4, ENN );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, ENN_inv_for_denrq4, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, ENN, IQ );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module depfq1_func( Q, CPN, D, ENN, SDN, notifier );
input CPN, D, ENN, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_depfq1;

	not MGM_BG_2( ENN_inv_for_depfq1, ENN );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_depfq1, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, ENN, IQ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module depfq2_func( Q, CPN, D, ENN, SDN, notifier );
input CPN, D, ENN, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_depfq2;

	not MGM_BG_2( ENN_inv_for_depfq2, ENN );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_depfq2, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, ENN, IQ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module depfq4_func( Q, CPN, D, ENN, SDN, notifier );
input CPN, D, ENN, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_depfq4;

	not MGM_BG_2( ENN_inv_for_depfq4, ENN );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_depfq4, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, ENN, IQ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module deprq1_func( Q, CP, D, ENN, SDN, notifier );
input CP, D, ENN, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_deprq1;

	not MGM_BG_1( ENN_inv_for_deprq1, ENN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_deprq1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, ENN, IQ );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module deprq2_func( Q, CP, D, ENN, SDN, notifier );
input CP, D, ENN, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_deprq2;

	not MGM_BG_1( ENN_inv_for_deprq2, ENN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_deprq2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, ENN, IQ );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module deprq4_func( Q, CP, D, ENN, SDN, notifier );
input CP, D, ENN, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_deprq4;

	not MGM_BG_1( ENN_inv_for_deprq4, ENN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_deprq4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, ENN, IQ );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  n  ?  ?  :  ?  :  -;
  ?  0  r  0  ?  :  ?  :  0;
  ?  0  p  0  ?  :  0  :  0;
  1  0  ?  ?  ?  :  ?  :  0;
  0  ?  r  1  ?  :  ?  :  1;
  0  ?  p  1  ?  :  1  :  1;
  0  1  ?  ?  ?  :  ?  :  1;
  1  1  ?  ?  ?  :  ?  :  0;
  0  0  ?  *  ?  :  ?  :  -;
  ?  ?  ?  ?  *  :  ?  :  x;
  0  n  ?  ?  ?  :  ?  :  -;
  n  0  ?  ?  ?  :  ?  :  -;
  0  p  ?  ?  ?  :  ?  :  -;
                  
endtable
endprimitive


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  n  ?  ?  :  ?  :  -;
  ?  0  r  0  ?  :  ?  :  1;
  ?  0  p  0  ?  :  1  :  1;
  1  0  ?  ?  ?  :  ?  :  1;
  0  ?  r  1  ?  :  ?  :  0;
  0  ?  p  1  ?  :  0  :  0;
  0  1  ?  ?  ?  :  ?  :  0;
  1  1  ?  ?  ?  :  ?  :  0;
  0  0  ?  *  ?  :  ?  :  -;
  ?  ?  ?  ?  *  :  ?  :  x;
  0  n  ?  ?  ?  :  ?  :  -;
  n  0  ?  ?  ?  :  ?  :  -;
  0  p  ?  ?  ?  :  ?  :  -;
                  
endtable
endprimitive


`celldefine
module dfbfb1_func( Q, QN, CDN, CPN, D, SDN, notifier );
input CDN, CPN, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	not MGM_BG_2( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_3( Q, IQ );

	buf MGM_BG_4( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfbfb2_func( Q, QN, CDN, CPN, D, SDN, notifier );
input CDN, CPN, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	not MGM_BG_2( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_3( Q, IQ );

	buf MGM_BG_4( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfbfb4_func( Q, QN, CDN, CPN, D, SDN, notifier );
input CDN, CPN, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	not MGM_BG_2( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_3( Q, IQ );

	buf MGM_BG_4( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfbrb1_func( Q, QN, CDN, CP, D, SDN, notifier );
input CDN, CP, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfbrb2_func( Q, QN, CDN, CP, D, SDN, notifier );
input CDN, CP, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfbrb4_func( Q, QN, CDN, CP, D, SDN, notifier );
input CDN, CP, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  n  ?  ?  :  ?  :  -;
  ?  0  r  0  ?  :  ?  :  1;
  ?  0  p  0  ?  :  1  :  1;
  1  0  ?  ?  ?  :  ?  :  1;
  0  ?  r  1  ?  :  ?  :  0;
  0  ?  p  1  ?  :  0  :  0;
  0  1  ?  ?  ?  :  ?  :  0;
  ?  ?  ?  ?  *  :  ?  :  x;
  0  0  ?  *  ?  :  ?  :  -;
  0  n  ?  ?  ?  :  ?  :  -;
  n  0  ?  ?  ?  :  ?  :  -;
  0  p  ?  ?  ?  :  ?  :  -;
                  
endtable
endprimitive


`celldefine
module dfcfb1_func( Q, QN, CDN, CPN, D, notifier );
input CDN, CPN, D, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcfb2_func( Q, QN, CDN, CPN, D, notifier );
input CDN, CPN, D, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcfb4_func( Q, QN, CDN, CPN, D, notifier );
input CDN, CPN, D, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcfq1_func( Q, CDN, CPN, D, notifier );
input CDN, CPN, D, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcfq2_func( Q, CDN, CPN, D, notifier );
input CDN, CPN, D, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcfq4_func( Q, CDN, CPN, D, notifier );
input CDN, CPN, D, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrb1_func( Q, QN, CDN, CP, D, notifier );
input CDN, CP, D, notifier;
output Q, QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrb2_func( Q, QN, CDN, CP, D, notifier );
input CDN, CP, D, notifier;
output Q, QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrb4_func( Q, QN, CDN, CP, D, notifier );
input CDN, CP, D, notifier;
output Q, QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrn1_func( QN, CDN, CP, D, notifier );
input CDN, CP, D, notifier;
output QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrn2_func( QN, CDN, CP, D, notifier );
input CDN, CP, D, notifier;
output QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrn4_func( QN, CDN, CP, D, notifier );
input CDN, CP, D, notifier;
output QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrq1_func( Q, CDN, CP, D, notifier );
input CDN, CP, D, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrq2_func( Q, CDN, CP, D, notifier );
input CDN, CP, D, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfcrq4_func( CP, CDN, D, Q, notifier );
input CDN, CP, D, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnfb1_func( Q, QN, CPN, D, notifier );
input CPN, D, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnfb2_func( Q, QN, CPN, D, notifier );
input CPN, D, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnfb4_func( Q, QN, CPN, D, notifier );
input CPN, D, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrb1_func( Q, QN, CP, D, notifier );
input CP, D, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( Q, IQ );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrb2_func( Q, QN, CP, D, notifier );
input CP, D, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( Q, IQ );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrb4_func( Q, QN, CP, D, notifier );
input CP, D, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( Q, IQ );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrn1_func( QN, CP, D, notifier );
input CP, D, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrn2_func( QN, CP, D, notifier );
input CP, D, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrn4_func( QN, CP, D, notifier );
input CP, D, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrq1_func( Q, CP, D, notifier );
input CP, D, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrq2_func( Q, CP, D, notifier );
input CP, D, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfnrq4_func( Q, CP, D, notifier );
input CP, D, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_0( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfpfb1_func( Q, QN, CPN, D, SDN, notifier );
input CPN, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfpfb2_func( Q, QN, CPN, D, SDN, notifier );
input CPN, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfpfb4_func( Q, QN, CPN, D, SDN, notifier );
input CPN, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfprb1_func( Q, QN, CP, D, SDN, notifier );
input CP, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfprb2_func( Q, QN, CP, D, SDN, notifier );
input CP, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dfprb4_func( Q, QN, CP, D, SDN, notifier );
input CP, D, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl01d1_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl01d2_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl01d4_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl02d1_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl02d2_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl02d4_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl03d1_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl03d2_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl03d4_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl04d1_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl04d2_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module dl04d4_func( Z, I );
input I;
output Z;

	buf MGM_BG_0( Z, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclfsn1_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  1  0  ?   : ?   : 0;
  0  ?  ?   : ?   : -;
  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclfsn1_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclfsn1_statetable_NINT(NINT, CLK, EN, notifier);

	wire NINT_inv_for_gclfsn1;

	not MGM_BG_0( NINT_inv_for_gclfsn1, NINT );

	wire SE_inv_for_gclfsn1;

	not MGM_BG_1( SE_inv_for_gclfsn1, SE );

	wire GCLK_row2;

	and MGM_BG_2( GCLK_row2, NINT_inv_for_gclfsn1, SE_inv_for_gclfsn1 );

	or MGM_BG_3( GCLK, CLK, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclfsn2_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  1  0  ?   : ?   : 0;
  0  ?  ?   : ?   : -;
  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclfsn2_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclfsn2_statetable_NINT(NINT, CLK, EN, notifier);

	wire NINT_inv_for_gclfsn2;

	not MGM_BG_0( NINT_inv_for_gclfsn2, NINT );

	wire SE_inv_for_gclfsn2;

	not MGM_BG_1( SE_inv_for_gclfsn2, SE );

	wire GCLK_row2;

	and MGM_BG_2( GCLK_row2, NINT_inv_for_gclfsn2, SE_inv_for_gclfsn2 );

	or MGM_BG_3( GCLK, CLK, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclfsn4_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  1  0  ?   : ?   : 0;
  0  ?  ?   : ?   : -;
  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclfsn4_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclfsn4_statetable_NINT(NINT, CLK, EN, notifier);

	wire NINT_inv_for_gclfsn4;

	not MGM_BG_0( NINT_inv_for_gclfsn4, NINT );

	wire SE_inv_for_gclfsn4;

	not MGM_BG_1( SE_inv_for_gclfsn4, SE );

	wire GCLK_row2;

	and MGM_BG_2( GCLK_row2, NINT_inv_for_gclfsn4, SE_inv_for_gclfsn4 );

	or MGM_BG_3( GCLK, CLK, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclfsn7_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  1  0  ?   : ?   : 0;
  0  ?  ?   : ?   : -;
  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclfsn7_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclfsn7_statetable_NINT(NINT, CLK, EN, notifier);

	wire NINT_inv_for_gclfsn7;

	not MGM_BG_0( NINT_inv_for_gclfsn7, NINT );

	wire SE_inv_for_gclfsn7;

	not MGM_BG_1( SE_inv_for_gclfsn7, SE );

	wire GCLK_row2;

	and MGM_BG_2( GCLK_row2, NINT_inv_for_gclfsn7, SE_inv_for_gclfsn7 );

	or MGM_BG_3( GCLK, CLK, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclfsna_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  1  0  ?   : ?   : 0;
  0  ?  ?   : ?   : -;
  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclfsna_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclfsna_statetable_NINT(NINT, CLK, EN, notifier);

	wire NINT_inv_for_gclfsna;

	not MGM_BG_0( NINT_inv_for_gclfsna, NINT );

	wire SE_inv_for_gclfsna;

	not MGM_BG_1( SE_inv_for_gclfsna, SE );

	wire GCLK_row2;

	and MGM_BG_2( GCLK_row2, NINT_inv_for_gclfsna, SE_inv_for_gclfsna );

	or MGM_BG_3( GCLK, CLK, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclrsn1_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  0  0  ?   : ?   : 0;
  1  ?  ?   : ?   : -;
  0  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclrsn1_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclrsn1_statetable_NINT(NINT, CLK, EN, notifier);

	wire GCLK_row1;

	and MGM_BG_0( GCLK_row1, CLK, NINT );

	wire GCLK_row2;

	and MGM_BG_1( GCLK_row2, CLK, SE );

	or MGM_BG_2( GCLK, GCLK_row1, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclrsn2_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  0  0  ?   : ?   : 0;
  1  ?  ?   : ?   : -;
  0  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclrsn2_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclrsn2_statetable_NINT(NINT, CLK, EN, notifier);

	wire GCLK_row1;

	and MGM_BG_0( GCLK_row1, CLK, NINT );

	wire GCLK_row2;

	and MGM_BG_1( GCLK_row2, CLK, SE );

	or MGM_BG_2( GCLK, GCLK_row1, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclrsn4_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  0  0  ?   : ?   : 0;
  1  ?  ?   : ?   : -;
  0  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclrsn4_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclrsn4_statetable_NINT(NINT, CLK, EN, notifier);

	wire GCLK_row1;

	and MGM_BG_0( GCLK_row1, CLK, NINT );

	wire GCLK_row2;

	and MGM_BG_1( GCLK_row2, CLK, SE );

	or MGM_BG_2( GCLK, GCLK_row1, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclrsn7_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  0  0  ?   : ?   : 0;
  1  ?  ?   : ?   : -;
  0  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclrsn7_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclrsn7_statetable_NINT(NINT, CLK, EN, notifier);

	wire GCLK_row1;

	and MGM_BG_0( GCLK_row1, CLK, NINT );

	wire GCLK_row2;

	and MGM_BG_1( GCLK_row2, CLK, SE );

	or MGM_BG_2( GCLK, GCLK_row1, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive gclrsna_statetable_NINT(NINT, CLK, EN, notifier);
output NINT;
reg NINT;
input CLK, EN, notifier; 
table 
// CLK EN notifier : NINT : NINT
  0  0  ?   : ?   : 0;
  1  ?  ?   : ?   : -;
  0  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module gclrsna_func( GCLK, CLK, EN, SE, notifier );
input CLK, EN, SE, notifier;
output GCLK;

	gclrsna_statetable_NINT(NINT, CLK, EN, notifier);

	wire GCLK_row1;

	and MGM_BG_0( GCLK_row1, CLK, NINT );

	wire GCLK_row2;

	and MGM_BG_1( GCLK_row2, CLK, SE );

	or MGM_BG_2( GCLK, GCLK_row1, GCLK_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnfnn1_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	and MGM_BG_0( GCLK, CLK, EN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnfnn2_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	and MGM_BG_0( GCLK, CLK, EN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnfnn4_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	and MGM_BG_0( GCLK, CLK, EN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnfnn7_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	and MGM_BG_0( GCLK, CLK, EN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnfnna_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	and MGM_BG_0( GCLK, CLK, EN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnrnn1_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	wire EN_inv_for_gcnrnn1;

	not MGM_BG_0( EN_inv_for_gcnrnn1, EN );

	or MGM_BG_1( GCLK, CLK, EN_inv_for_gcnrnn1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnrnn2_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	wire EN_inv_for_gcnrnn2;

	not MGM_BG_0( EN_inv_for_gcnrnn2, EN );

	or MGM_BG_1( GCLK, CLK, EN_inv_for_gcnrnn2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnrnn4_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	wire EN_inv_for_gcnrnn4;

	not MGM_BG_0( EN_inv_for_gcnrnn4, EN );

	or MGM_BG_1( GCLK, CLK, EN_inv_for_gcnrnn4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnrnn7_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	wire EN_inv_for_gcnrnn7;

	not MGM_BG_0( EN_inv_for_gcnrnn7, EN );

	or MGM_BG_1( GCLK, CLK, EN_inv_for_gcnrnn7 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module gcnrnna_func( GCLK, CLK, EN );
input CLK, EN;
output GCLK;

	wire EN_inv_for_gcnrnna;

	not MGM_BG_0( EN_inv_for_gcnrnna, EN );

	or MGM_BG_1( GCLK, CLK, EN_inv_for_gcnrnna );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module inv0d0_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module inv0d1_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module inv0d2_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module inv0d4_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module inv0d7_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module inv0da_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invbd2_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invbd4_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invbd7_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invbda_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invbdf_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invbdk_func( ZN, I );
input I;
output ZN;

	not MGM_BG_0( ZN, I );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invtd1_func( ZN, EN, I );
input EN, I;
output ZN;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_invtd1;

	not MGM_BG_0( EN_inv_for_invtd1, EN );

	wire I_inv_for_invtd1;

	not MGM_BG_1( I_inv_for_invtd1, I );

	and MGM_BG_2( MGM_WB_0, EN_inv_for_invtd1, I_inv_for_invtd1 );

	buf MGM_BG_3( MGM_WB_1, EN );

	bufif0 MGM_BG_4( ZN, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invtd2_func( ZN, EN, I );
input EN, I;
output ZN;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_invtd2;

	not MGM_BG_0( EN_inv_for_invtd2, EN );

	wire I_inv_for_invtd2;

	not MGM_BG_1( I_inv_for_invtd2, I );

	and MGM_BG_2( MGM_WB_0, EN_inv_for_invtd2, I_inv_for_invtd2 );

	buf MGM_BG_3( MGM_WB_1, EN );

	bufif0 MGM_BG_4( ZN, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invtd4_func( ZN, EN, I );
input EN, I;
output ZN;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_invtd4;

	not MGM_BG_0( EN_inv_for_invtd4, EN );

	wire I_inv_for_invtd4;

	not MGM_BG_1( I_inv_for_invtd4, I );

	and MGM_BG_2( MGM_WB_0, EN_inv_for_invtd4, I_inv_for_invtd4 );

	buf MGM_BG_3( MGM_WB_1, EN );

	bufif0 MGM_BG_4( ZN, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invtd7_func( ZN, EN, I );
input EN, I;
output ZN;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_invtd7;

	not MGM_BG_0( EN_inv_for_invtd7, EN );

	wire I_inv_for_invtd7;

	not MGM_BG_1( I_inv_for_invtd7, I );

	and MGM_BG_2( MGM_WB_0, EN_inv_for_invtd7, I_inv_for_invtd7 );

	buf MGM_BG_3( MGM_WB_1, EN );

	bufif0 MGM_BG_4( ZN, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module invtda_func( ZN, EN, I );
input EN, I;
output ZN;

	wire MGM_WB_0;

	wire MGM_WB_1;

	wire EN_inv_for_invtda;

	not MGM_BG_0( EN_inv_for_invtda, EN );

	wire I_inv_for_invtda;

	not MGM_BG_1( I_inv_for_invtda, I );

	and MGM_BG_2( MGM_WB_0, EN_inv_for_invtda, I_inv_for_invtda );

	buf MGM_BG_3( MGM_WB_1, EN );

	bufif0 MGM_BG_4( ZN, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module jkbrb1_func( Q, QN, CDN, CP, J, KZ, SDN, notifier );
input CDN, CP, J, KZ, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, IQ, KZ );

	wire IQ_inv_for_jkbrb1;

	not MGM_BG_3( IQ_inv_for_jkbrb1, IQ );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, IQ_inv_for_jkbrb1, J );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, J, KZ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module jkbrb2_func( Q, QN, CDN, CP, J, KZ, SDN, notifier );
input CDN, CP, J, KZ, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, IQ, KZ );

	wire IQ_inv_for_jkbrb2;

	not MGM_BG_3( IQ_inv_for_jkbrb2, IQ );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, IQ_inv_for_jkbrb2, J );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, J, KZ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module jkbrb4_func( Q, QN, CDN, CP, J, KZ, SDN, notifier );
input CDN, CP, J, KZ, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, IQ, KZ );

	wire IQ_inv_for_jkbrb4;

	not MGM_BG_3( IQ_inv_for_jkbrb4, IQ );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, IQ_inv_for_jkbrb4, J );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, J, KZ );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_HN_IQ_LATCH_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  0  ?  ?  :  ?  :  -;
  ?  0  1  0  ?  :  ?  :  0;
  ?  0  ?  0  ?  :  0  :  0;
  1  0  ?  ?  ?  :  ?  :  0;
  0  ?  1  1  ?  :  ?  :  1;
  0  ?  ?  1  ?  :  1  :  1;
  0  1  ?  ?  ?  :  ?  :  1;
  1  1  ?  ?  ?  :  ?  :  1;
  ?  ?  ?  ?  *  :  ?  :  x;
                  
endtable
endprimitive


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_HN_IQN_LATCH_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  0  ?  ?  :  ?  :  -;
  ?  0  1  0  ?  :  ?  :  1;
  ?  0  ?  0  ?  :  1  :  1;
  1  0  ?  ?  ?  :  ?  :  1;
  0  ?  1  1  ?  :  ?  :  0;
  0  ?  ?  1  ?  :  0  :  0;
  0  1  ?  ?  ?  :  ?  :  0;
  1  1  ?  ?  ?  :  ?  :  1;
  ?  ?  ?  ?  *  :  ?  :  x;
                  
endtable
endprimitive


`celldefine
module labhb1_func( Q, QN, CDN, D, E, SDN, notifier );
input CDN, D, E, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_HN_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_HN_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module labhb2_func( Q, QN, CDN, D, E, SDN, notifier );
input CDN, D, E, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_HN_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_HN_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module labhb4_func( Q, QN, CDN, D, E, SDN, notifier );
input CDN, D, E, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_HN_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_HN_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  0  ?  ?  :  ?  :  -;
  ?  0  1  0  ?  :  ?  :  0;
  ?  0  ?  0  ?  :  0  :  0;
  1  0  ?  ?  ?  :  ?  :  0;
  0  ?  1  1  ?  :  ?  :  1;
  0  ?  ?  1  ?  :  1  :  1;
  0  1  ?  ?  ?  :  ?  :  1;
  ?  ?  ?  ?  *  :  ?  :  x;
                  
endtable
endprimitive


`celldefine
module lachq1_func( Q, CDN, D, E, notifier );
input CDN, D, E, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lachq2_func( Q, CDN, D, E, notifier );
input CDN, D, E, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lachq4_func( Q, CDN, D, E, notifier );
input CDN, D, E, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module laclq1_func( Q, CDN, D, EN, notifier );
input CDN, D, EN, notifier;
output Q;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_2( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module laclq2_func( Q, CDN, D, EN, notifier );
input CDN, D, EN, notifier;
output Q;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_2( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module laclq4_func( Q, CDN, D, EN, notifier );
input CDN, D, EN, notifier;
output Q;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_2( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  0  ?  ?  :  ?  :  -;
  ?  0  1  0  ?  :  ?  :  1;
  ?  0  ?  0  ?  :  1  :  1;
  1  0  ?  ?  ?  :  ?  :  1;
  0  ?  1  1  ?  :  ?  :  0;
  0  ?  ?  1  ?  :  0  :  0;
  0  1  ?  ?  ?  :  ?  :  0;
  ?  ?  ?  ?  *  :  ?  :  x;
                  
endtable
endprimitive


`celldefine
module lanhb1_func( Q, QN, D, E, notifier );
input D, E, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( Q, IQ );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanhb2_func( Q, QN, D, E, notifier );
input D, E, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( Q, IQ );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanhb4_func( Q, QN, D, E, notifier );
input D, E, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( Q, IQ );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanhn1_func( QN, D, E, notifier );
input D, E, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanhn2_func( QN, D, E, notifier );
input D, E, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanhn4_func( QN, D, E, notifier );
input D, E, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanhq1_func( Q, D, E, notifier );
input D, E, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanhq2_func( Q, D, E, notifier );
input D, E, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanhq4_func( Q, D, E, notifier );
input D, E, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, E, D, notifier );

	buf MGM_BG_0( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive lanht1_statetable_IQ(IQ, E, D, notifier);
output IQ;
reg IQ;
input E, D, notifier; 
table 
// E D notifier : IQ : IQ
  1  0  ?   : ?   : 0;
  1  1  ?   : ?   : 1;
  0  ?  ?   : ?   : -;

endtable
endprimitive


primitive lanht1_statetable_IQN(IQN, E, D, notifier);
output IQN;
reg IQN;
input E, D, notifier; 
table 
// E D notifier : IQN : IQN
  1  0  ?   : ?   : 1;
  1  1  ?   : ?   : 0;
  0  ?  ?   : ?   : -;

endtable
endprimitive


`celldefine
module lanht1_func( Z, D, E, OE, notifier );
input D, E, OE, notifier;
output Z;

	lanht1_statetable_IQ(IQ, E, D, notifier);

	lanht1_statetable_IQN(IQN, E, D, notifier);

	wire MGM_WB_0;

	wire MGM_WB_1;

	and MGM_BG_0( MGM_WB_0, IQ, OE );

	not MGM_BG_1( MGM_WB_1, OE );

	bufif0 MGM_BG_2( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive lanht2_statetable_IQ(IQ, E, D, notifier);
output IQ;
reg IQ;
input E, D, notifier; 
table 
// E D notifier : IQ : IQ
  1  0  ?   : ?   : 0;
  1  1  ?   : ?   : 1;
  0  ?  ?   : ?   : -;

endtable
endprimitive


primitive lanht2_statetable_IQN(IQN, E, D, notifier);
output IQN;
reg IQN;
input E, D, notifier; 
table 
// E D notifier : IQN : IQN
  1  0  ?   : ?   : 1;
  1  1  ?   : ?   : 0;
  0  ?  ?   : ?   : -;

endtable
endprimitive


`celldefine
module lanht2_func( Z, D, E, OE, notifier );
input D, E, OE, notifier;
output Z;

	lanht2_statetable_IQ(IQ, E, D, notifier);

	lanht2_statetable_IQN(IQN, E, D, notifier);

	wire MGM_WB_0;

	wire MGM_WB_1;

	and MGM_BG_0( MGM_WB_0, IQ, OE );

	not MGM_BG_1( MGM_WB_1, OE );

	bufif0 MGM_BG_2( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive lanht4_statetable_IQ(IQ, E, D, notifier);
output IQ;
reg IQ;
input E, D, notifier; 
table 
// E D notifier : IQ : IQ
  1  0  ?   : ?   : 0;
  1  1  ?   : ?   : 1;
  0  ?  ?   : ?   : -;

endtable
endprimitive


primitive lanht4_statetable_IQN(IQN, E, D, notifier);
output IQN;
reg IQN;
input E, D, notifier; 
table 
// E D notifier : IQN : IQN
  1  0  ?   : ?   : 1;
  1  1  ?   : ?   : 0;
  0  ?  ?   : ?   : -;

endtable
endprimitive


`celldefine
module lanht4_func( Z, D, E, OE, notifier );
input D, E, OE, notifier;
output Z;

	lanht4_statetable_IQ(IQ, E, D, notifier);

	lanht4_statetable_IQN(IQN, E, D, notifier);

	wire MGM_WB_0;

	wire MGM_WB_1;

	and MGM_BG_0( MGM_WB_0, IQ, OE );

	not MGM_BG_1( MGM_WB_1, OE );

	bufif0 MGM_BG_2( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanlb1_func( Q, QN, D, EN, notifier );
input D, EN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanlb2_func( Q, QN, D, EN, notifier );
input D, EN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanlb4_func( Q, QN, D, EN, notifier );
input D, EN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( Q, IQ );

	buf MGM_BG_2( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanln1_func( QN, D, EN, notifier );
input D, EN, notifier;
output QN;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanln2_func( QN, D, EN, notifier );
input D, EN, notifier;
output QN;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanln4_func( QN, D, EN, notifier );
input D, EN, notifier;
output QN;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanlq1_func( Q, D, EN, notifier );
input D, EN, notifier;
output Q;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanlq2_func( Q, D, EN, notifier );
input D, EN, notifier;
output Q;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module lanlq4_func( Q, D, EN, notifier );
input D, EN, notifier;
output Q;

	not MGM_BG_0( MGM_EN0, EN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, D, notifier );

	buf MGM_BG_1( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mffnrb1_func( Q, QN, CP, D, ENN, notifier );
input CP, D, ENN, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_mffnrb1;

	not MGM_BG_0( ENN_inv_for_mffnrb1, ENN );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, ENN_inv_for_mffnrb1, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, ENN, IQ );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mffnrb2_func( Q, QN, CP, D, ENN, notifier );
input CP, D, ENN, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_mffnrb2;

	not MGM_BG_0( ENN_inv_for_mffnrb2, ENN );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, ENN_inv_for_mffnrb2, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, ENN, IQ );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mffnrb4_func( Q, QN, CP, D, ENN, notifier );
input CP, D, ENN, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_mffnrb4;

	not MGM_BG_0( ENN_inv_for_mffnrb4, ENN );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, ENN_inv_for_mffnrb4, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, IQ );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, ENN, IQ );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mi02d0_func( S, ZN, I0, I1 );
input I0, I1, S;
output ZN;

	wire I0_inv_for_mi02d0;

	not MGM_BG_0( I0_inv_for_mi02d0, I0 );

	wire I1_inv_for_mi02d0;

	not MGM_BG_1( I1_inv_for_mi02d0, I1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, I0_inv_for_mi02d0, I1_inv_for_mi02d0 );

	wire S_inv_for_mi02d0;

	not MGM_BG_3( S_inv_for_mi02d0, S );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, I0_inv_for_mi02d0, S_inv_for_mi02d0 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, I1_inv_for_mi02d0, S );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mi02d1_func( S, ZN, I0, I1 );
input I0, I1, S;
output ZN;

	wire I0_inv_for_mi02d1;

	not MGM_BG_0( I0_inv_for_mi02d1, I0 );

	wire I1_inv_for_mi02d1;

	not MGM_BG_1( I1_inv_for_mi02d1, I1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, I0_inv_for_mi02d1, I1_inv_for_mi02d1 );

	wire S_inv_for_mi02d1;

	not MGM_BG_3( S_inv_for_mi02d1, S );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, I0_inv_for_mi02d1, S_inv_for_mi02d1 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, I1_inv_for_mi02d1, S );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mi02d2_func( S, ZN, I0, I1 );
input I0, I1, S;
output ZN;

	wire I0_inv_for_mi02d2;

	not MGM_BG_0( I0_inv_for_mi02d2, I0 );

	wire I1_inv_for_mi02d2;

	not MGM_BG_1( I1_inv_for_mi02d2, I1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, I0_inv_for_mi02d2, I1_inv_for_mi02d2 );

	wire S_inv_for_mi02d2;

	not MGM_BG_3( S_inv_for_mi02d2, S );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, I0_inv_for_mi02d2, S_inv_for_mi02d2 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, I1_inv_for_mi02d2, S );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mi02d4_func( S, ZN, I0, I1 );
input I0, I1, S;
output ZN;

	wire I0_inv_for_mi02d4;

	not MGM_BG_0( I0_inv_for_mi02d4, I0 );

	wire I1_inv_for_mi02d4;

	not MGM_BG_1( I1_inv_for_mi02d4, I1 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, I0_inv_for_mi02d4, I1_inv_for_mi02d4 );

	wire S_inv_for_mi02d4;

	not MGM_BG_3( S_inv_for_mi02d4, S );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, I0_inv_for_mi02d4, S_inv_for_mi02d4 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, I1_inv_for_mi02d4, S );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mx02d0_func( S, Z, I0, I1 );
input I0, I1, S;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, I0, I1 );

	wire S_inv_for_mx02d0;

	not MGM_BG_1( S_inv_for_mx02d0, S );

	wire Z_row2;

	and MGM_BG_2( Z_row2, S_inv_for_mx02d0, I0 );

	wire Z_row3;

	and MGM_BG_3( Z_row3, I1, S );

	or MGM_BG_4( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mx02d1_func( S, Z, I0, I1 );
input I0, I1, S;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, I0, I1 );

	wire S_inv_for_mx02d1;

	not MGM_BG_1( S_inv_for_mx02d1, S );

	wire Z_row2;

	and MGM_BG_2( Z_row2, S_inv_for_mx02d1, I0 );

	wire Z_row3;

	and MGM_BG_3( Z_row3, I1, S );

	or MGM_BG_4( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mx02d2_func( S, Z, I0, I1 );
input I0, I1, S;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, I0, I1 );

	wire S_inv_for_mx02d2;

	not MGM_BG_1( S_inv_for_mx02d2, S );

	wire Z_row2;

	and MGM_BG_2( Z_row2, S_inv_for_mx02d2, I0 );

	wire Z_row3;

	and MGM_BG_3( Z_row3, I1, S );

	or MGM_BG_4( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mx02d4_func( S, Z, I0, I1 );
input I0, I1, S;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, I0, I1 );

	wire S_inv_for_mx02d4;

	not MGM_BG_1( S_inv_for_mx02d4, S );

	wire Z_row2;

	and MGM_BG_2( Z_row2, S_inv_for_mx02d4, I0 );

	wire Z_row3;

	and MGM_BG_3( Z_row3, I1, S );

	or MGM_BG_4( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mx04d0_func( Z, I0, I1, I2, I3, S0, S1 );
input I0, I1, I2, I3, S0, S1;
output Z;

	wire S0_inv_for_mx04d0;

	not MGM_BG_0( S0_inv_for_mx04d0, S0 );

	wire S1_inv_for_mx04d0;

	not MGM_BG_1( S1_inv_for_mx04d0, S1 );

	wire Z_row1;

	and MGM_BG_2( Z_row1, S0_inv_for_mx04d0, S1_inv_for_mx04d0, I0 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, S1_inv_for_mx04d0, I1, S0 );

	wire Z_row3;

	and MGM_BG_4( Z_row3, S0_inv_for_mx04d0, I2, S1 );

	wire Z_row4;

	and MGM_BG_5( Z_row4, I3, S0, S1 );

	or MGM_BG_6( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mx04d1_func( Z, I0, I1, I2, I3, S0, S1 );
input I0, I1, I2, I3, S0, S1;
output Z;

	wire S0_inv_for_mx04d1;

	not MGM_BG_0( S0_inv_for_mx04d1, S0 );

	wire S1_inv_for_mx04d1;

	not MGM_BG_1( S1_inv_for_mx04d1, S1 );

	wire Z_row1;

	and MGM_BG_2( Z_row1, S0_inv_for_mx04d1, S1_inv_for_mx04d1, I0 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, S1_inv_for_mx04d1, I1, S0 );

	wire Z_row3;

	and MGM_BG_4( Z_row3, S0_inv_for_mx04d1, I2, S1 );

	wire Z_row4;

	and MGM_BG_5( Z_row4, I3, S0, S1 );

	or MGM_BG_6( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mx04d2_func( Z, I0, I1, I2, I3, S0, S1 );
input I0, I1, I2, I3, S0, S1;
output Z;

	wire S0_inv_for_mx04d2;

	not MGM_BG_0( S0_inv_for_mx04d2, S0 );

	wire S1_inv_for_mx04d2;

	not MGM_BG_1( S1_inv_for_mx04d2, S1 );

	wire Z_row1;

	and MGM_BG_2( Z_row1, S0_inv_for_mx04d2, S1_inv_for_mx04d2, I0 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, S1_inv_for_mx04d2, I1, S0 );

	wire Z_row3;

	and MGM_BG_4( Z_row3, S0_inv_for_mx04d2, I2, S1 );

	wire Z_row4;

	and MGM_BG_5( Z_row4, I3, S0, S1 );

	or MGM_BG_6( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module mx04d4_func( Z, I0, I1, I2, I3, S0, S1 );
input I0, I1, I2, I3, S0, S1;
output Z;

	wire S0_inv_for_mx04d4;

	not MGM_BG_0( S0_inv_for_mx04d4, S0 );

	wire S1_inv_for_mx04d4;

	not MGM_BG_1( S1_inv_for_mx04d4, S1 );

	wire Z_row1;

	and MGM_BG_2( Z_row1, S0_inv_for_mx04d4, S1_inv_for_mx04d4, I0 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, S1_inv_for_mx04d4, I1, S0 );

	wire Z_row3;

	and MGM_BG_4( Z_row3, S0_inv_for_mx04d4, I2, S1 );

	wire Z_row4;

	and MGM_BG_5( Z_row4, I3, S0, S1 );

	or MGM_BG_6( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd02d0_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nd02d0;

	not MGM_BG_0( A1_inv_for_nd02d0, A1 );

	wire A2_inv_for_nd02d0;

	not MGM_BG_1( A2_inv_for_nd02d0, A2 );

	or MGM_BG_2( ZN, A1_inv_for_nd02d0, A2_inv_for_nd02d0 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd02d1_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nd02d1;

	not MGM_BG_0( A1_inv_for_nd02d1, A1 );

	wire A2_inv_for_nd02d1;

	not MGM_BG_1( A2_inv_for_nd02d1, A2 );

	or MGM_BG_2( ZN, A1_inv_for_nd02d1, A2_inv_for_nd02d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd02d2_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nd02d2;

	not MGM_BG_0( A1_inv_for_nd02d2, A1 );

	wire A2_inv_for_nd02d2;

	not MGM_BG_1( A2_inv_for_nd02d2, A2 );

	or MGM_BG_2( ZN, A1_inv_for_nd02d2, A2_inv_for_nd02d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd02d4_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nd02d4;

	not MGM_BG_0( A1_inv_for_nd02d4, A1 );

	wire A2_inv_for_nd02d4;

	not MGM_BG_1( A2_inv_for_nd02d4, A2 );

	or MGM_BG_2( ZN, A1_inv_for_nd02d4, A2_inv_for_nd02d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd02d7_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nd02d7;

	not MGM_BG_0( A1_inv_for_nd02d7, A1 );

	wire A2_inv_for_nd02d7;

	not MGM_BG_1( A2_inv_for_nd02d7, A2 );

	or MGM_BG_2( ZN, A1_inv_for_nd02d7, A2_inv_for_nd02d7 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd02da_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nd02da;

	not MGM_BG_0( A1_inv_for_nd02da, A1 );

	wire A2_inv_for_nd02da;

	not MGM_BG_1( A2_inv_for_nd02da, A2 );

	or MGM_BG_2( ZN, A1_inv_for_nd02da, A2_inv_for_nd02da );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd03d0_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nd03d0;

	not MGM_BG_0( A1_inv_for_nd03d0, A1 );

	wire A2_inv_for_nd03d0;

	not MGM_BG_1( A2_inv_for_nd03d0, A2 );

	wire A3_inv_for_nd03d0;

	not MGM_BG_2( A3_inv_for_nd03d0, A3 );

	or MGM_BG_3( ZN, A1_inv_for_nd03d0, A2_inv_for_nd03d0, A3_inv_for_nd03d0 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd03d1_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nd03d1;

	not MGM_BG_0( A1_inv_for_nd03d1, A1 );

	wire A2_inv_for_nd03d1;

	not MGM_BG_1( A2_inv_for_nd03d1, A2 );

	wire A3_inv_for_nd03d1;

	not MGM_BG_2( A3_inv_for_nd03d1, A3 );

	or MGM_BG_3( ZN, A1_inv_for_nd03d1, A2_inv_for_nd03d1, A3_inv_for_nd03d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd03d2_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nd03d2;

	not MGM_BG_0( A1_inv_for_nd03d2, A1 );

	wire A2_inv_for_nd03d2;

	not MGM_BG_1( A2_inv_for_nd03d2, A2 );

	wire A3_inv_for_nd03d2;

	not MGM_BG_2( A3_inv_for_nd03d2, A3 );

	or MGM_BG_3( ZN, A1_inv_for_nd03d2, A2_inv_for_nd03d2, A3_inv_for_nd03d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd03d4_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nd03d4;

	not MGM_BG_0( A1_inv_for_nd03d4, A1 );

	wire A2_inv_for_nd03d4;

	not MGM_BG_1( A2_inv_for_nd03d4, A2 );

	wire A3_inv_for_nd03d4;

	not MGM_BG_2( A3_inv_for_nd03d4, A3 );

	or MGM_BG_3( ZN, A1_inv_for_nd03d4, A2_inv_for_nd03d4, A3_inv_for_nd03d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd03d7_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nd03d7;

	not MGM_BG_0( A1_inv_for_nd03d7, A1 );

	wire A2_inv_for_nd03d7;

	not MGM_BG_1( A2_inv_for_nd03d7, A2 );

	wire A3_inv_for_nd03d7;

	not MGM_BG_2( A3_inv_for_nd03d7, A3 );

	or MGM_BG_3( ZN, A1_inv_for_nd03d7, A2_inv_for_nd03d7, A3_inv_for_nd03d7 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd03da_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nd03da;

	not MGM_BG_0( A1_inv_for_nd03da, A1 );

	wire A2_inv_for_nd03da;

	not MGM_BG_1( A2_inv_for_nd03da, A2 );

	wire A3_inv_for_nd03da;

	not MGM_BG_2( A3_inv_for_nd03da, A3 );

	or MGM_BG_3( ZN, A1_inv_for_nd03da, A2_inv_for_nd03da, A3_inv_for_nd03da );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd04d0_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nd04d0;

	not MGM_BG_0( A1_inv_for_nd04d0, A1 );

	wire A2_inv_for_nd04d0;

	not MGM_BG_1( A2_inv_for_nd04d0, A2 );

	wire A3_inv_for_nd04d0;

	not MGM_BG_2( A3_inv_for_nd04d0, A3 );

	wire A4_inv_for_nd04d0;

	not MGM_BG_3( A4_inv_for_nd04d0, A4 );

	or MGM_BG_4( ZN, A1_inv_for_nd04d0, A2_inv_for_nd04d0, A3_inv_for_nd04d0, A4_inv_for_nd04d0 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd04d1_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nd04d1;

	not MGM_BG_0( A1_inv_for_nd04d1, A1 );

	wire A2_inv_for_nd04d1;

	not MGM_BG_1( A2_inv_for_nd04d1, A2 );

	wire A3_inv_for_nd04d1;

	not MGM_BG_2( A3_inv_for_nd04d1, A3 );

	wire A4_inv_for_nd04d1;

	not MGM_BG_3( A4_inv_for_nd04d1, A4 );

	or MGM_BG_4( ZN, A1_inv_for_nd04d1, A2_inv_for_nd04d1, A3_inv_for_nd04d1, A4_inv_for_nd04d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd04d2_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nd04d2;

	not MGM_BG_0( A1_inv_for_nd04d2, A1 );

	wire A2_inv_for_nd04d2;

	not MGM_BG_1( A2_inv_for_nd04d2, A2 );

	wire A3_inv_for_nd04d2;

	not MGM_BG_2( A3_inv_for_nd04d2, A3 );

	wire A4_inv_for_nd04d2;

	not MGM_BG_3( A4_inv_for_nd04d2, A4 );

	or MGM_BG_4( ZN, A1_inv_for_nd04d2, A2_inv_for_nd04d2, A3_inv_for_nd04d2, A4_inv_for_nd04d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd04d4_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nd04d4;

	not MGM_BG_0( A1_inv_for_nd04d4, A1 );

	wire A2_inv_for_nd04d4;

	not MGM_BG_1( A2_inv_for_nd04d4, A2 );

	wire A3_inv_for_nd04d4;

	not MGM_BG_2( A3_inv_for_nd04d4, A3 );

	wire A4_inv_for_nd04d4;

	not MGM_BG_3( A4_inv_for_nd04d4, A4 );

	or MGM_BG_4( ZN, A1_inv_for_nd04d4, A2_inv_for_nd04d4, A3_inv_for_nd04d4, A4_inv_for_nd04d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd04d7_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nd04d7;

	not MGM_BG_0( A1_inv_for_nd04d7, A1 );

	wire A2_inv_for_nd04d7;

	not MGM_BG_1( A2_inv_for_nd04d7, A2 );

	wire A3_inv_for_nd04d7;

	not MGM_BG_2( A3_inv_for_nd04d7, A3 );

	wire A4_inv_for_nd04d7;

	not MGM_BG_3( A4_inv_for_nd04d7, A4 );

	or MGM_BG_4( ZN, A1_inv_for_nd04d7, A2_inv_for_nd04d7, A3_inv_for_nd04d7, A4_inv_for_nd04d7 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd04da_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nd04da;

	not MGM_BG_0( A1_inv_for_nd04da, A1 );

	wire A2_inv_for_nd04da;

	not MGM_BG_1( A2_inv_for_nd04da, A2 );

	wire A3_inv_for_nd04da;

	not MGM_BG_2( A3_inv_for_nd04da, A3 );

	wire A4_inv_for_nd04da;

	not MGM_BG_3( A4_inv_for_nd04da, A4 );

	or MGM_BG_4( ZN, A1_inv_for_nd04da, A2_inv_for_nd04da, A3_inv_for_nd04da, A4_inv_for_nd04da );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd12d0_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A2_inv_for_nd12d0;

	not MGM_BG_0( A2_inv_for_nd12d0, A2 );

	or MGM_BG_1( ZN, A1, A2_inv_for_nd12d0 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd12d1_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A2_inv_for_nd12d1;

	not MGM_BG_0( A2_inv_for_nd12d1, A2 );

	or MGM_BG_1( ZN, A1, A2_inv_for_nd12d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd12d2_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A2_inv_for_nd12d2;

	not MGM_BG_0( A2_inv_for_nd12d2, A2 );

	or MGM_BG_1( ZN, A1, A2_inv_for_nd12d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd12d4_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A2_inv_for_nd12d4;

	not MGM_BG_0( A2_inv_for_nd12d4, A2 );

	or MGM_BG_1( ZN, A1, A2_inv_for_nd12d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd13d1_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A2_inv_for_nd13d1;

	not MGM_BG_0( A2_inv_for_nd13d1, A2 );

	wire A3_inv_for_nd13d1;

	not MGM_BG_1( A3_inv_for_nd13d1, A3 );

	or MGM_BG_2( ZN, A1, A2_inv_for_nd13d1, A3_inv_for_nd13d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd13d2_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A2_inv_for_nd13d2;

	not MGM_BG_0( A2_inv_for_nd13d2, A2 );

	wire A3_inv_for_nd13d2;

	not MGM_BG_1( A3_inv_for_nd13d2, A3 );

	or MGM_BG_2( ZN, A1, A2_inv_for_nd13d2, A3_inv_for_nd13d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd13d4_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A2_inv_for_nd13d4;

	not MGM_BG_0( A2_inv_for_nd13d4, A2 );

	wire A3_inv_for_nd13d4;

	not MGM_BG_1( A3_inv_for_nd13d4, A3 );

	or MGM_BG_2( ZN, A1, A2_inv_for_nd13d4, A3_inv_for_nd13d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd23d1_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A3_inv_for_nd23d1;

	not MGM_BG_0( A3_inv_for_nd23d1, A3 );

	or MGM_BG_1( ZN, A1, A2, A3_inv_for_nd23d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd23d2_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A3_inv_for_nd23d2;

	not MGM_BG_0( A3_inv_for_nd23d2, A3 );

	or MGM_BG_1( ZN, A1, A2, A3_inv_for_nd23d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nd23d4_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A3_inv_for_nd23d4;

	not MGM_BG_0( A3_inv_for_nd23d4, A3 );

	or MGM_BG_1( ZN, A1, A2, A3_inv_for_nd23d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr02d0_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nr02d0;

	not MGM_BG_0( A1_inv_for_nr02d0, A1 );

	wire A2_inv_for_nr02d0;

	not MGM_BG_1( A2_inv_for_nr02d0, A2 );

	and MGM_BG_2( ZN, A1_inv_for_nr02d0, A2_inv_for_nr02d0 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr02d1_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nr02d1;

	not MGM_BG_0( A1_inv_for_nr02d1, A1 );

	wire A2_inv_for_nr02d1;

	not MGM_BG_1( A2_inv_for_nr02d1, A2 );

	and MGM_BG_2( ZN, A1_inv_for_nr02d1, A2_inv_for_nr02d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr02d2_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nr02d2;

	not MGM_BG_0( A1_inv_for_nr02d2, A1 );

	wire A2_inv_for_nr02d2;

	not MGM_BG_1( A2_inv_for_nr02d2, A2 );

	and MGM_BG_2( ZN, A1_inv_for_nr02d2, A2_inv_for_nr02d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr02d4_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nr02d4;

	not MGM_BG_0( A1_inv_for_nr02d4, A1 );

	wire A2_inv_for_nr02d4;

	not MGM_BG_1( A2_inv_for_nr02d4, A2 );

	and MGM_BG_2( ZN, A1_inv_for_nr02d4, A2_inv_for_nr02d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr02d7_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nr02d7;

	not MGM_BG_0( A1_inv_for_nr02d7, A1 );

	wire A2_inv_for_nr02d7;

	not MGM_BG_1( A2_inv_for_nr02d7, A2 );

	and MGM_BG_2( ZN, A1_inv_for_nr02d7, A2_inv_for_nr02d7 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr02da_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire A1_inv_for_nr02da;

	not MGM_BG_0( A1_inv_for_nr02da, A1 );

	wire A2_inv_for_nr02da;

	not MGM_BG_1( A2_inv_for_nr02da, A2 );

	and MGM_BG_2( ZN, A1_inv_for_nr02da, A2_inv_for_nr02da );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr03d0_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nr03d0;

	not MGM_BG_0( A1_inv_for_nr03d0, A1 );

	wire A2_inv_for_nr03d0;

	not MGM_BG_1( A2_inv_for_nr03d0, A2 );

	wire A3_inv_for_nr03d0;

	not MGM_BG_2( A3_inv_for_nr03d0, A3 );

	and MGM_BG_3( ZN, A1_inv_for_nr03d0, A2_inv_for_nr03d0, A3_inv_for_nr03d0 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr03d1_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nr03d1;

	not MGM_BG_0( A1_inv_for_nr03d1, A1 );

	wire A2_inv_for_nr03d1;

	not MGM_BG_1( A2_inv_for_nr03d1, A2 );

	wire A3_inv_for_nr03d1;

	not MGM_BG_2( A3_inv_for_nr03d1, A3 );

	and MGM_BG_3( ZN, A1_inv_for_nr03d1, A2_inv_for_nr03d1, A3_inv_for_nr03d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr03d2_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nr03d2;

	not MGM_BG_0( A1_inv_for_nr03d2, A1 );

	wire A2_inv_for_nr03d2;

	not MGM_BG_1( A2_inv_for_nr03d2, A2 );

	wire A3_inv_for_nr03d2;

	not MGM_BG_2( A3_inv_for_nr03d2, A3 );

	and MGM_BG_3( ZN, A1_inv_for_nr03d2, A2_inv_for_nr03d2, A3_inv_for_nr03d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr03d4_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nr03d4;

	not MGM_BG_0( A1_inv_for_nr03d4, A1 );

	wire A2_inv_for_nr03d4;

	not MGM_BG_1( A2_inv_for_nr03d4, A2 );

	wire A3_inv_for_nr03d4;

	not MGM_BG_2( A3_inv_for_nr03d4, A3 );

	and MGM_BG_3( ZN, A1_inv_for_nr03d4, A2_inv_for_nr03d4, A3_inv_for_nr03d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr03d7_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nr03d7;

	not MGM_BG_0( A1_inv_for_nr03d7, A1 );

	wire A2_inv_for_nr03d7;

	not MGM_BG_1( A2_inv_for_nr03d7, A2 );

	wire A3_inv_for_nr03d7;

	not MGM_BG_2( A3_inv_for_nr03d7, A3 );

	and MGM_BG_3( ZN, A1_inv_for_nr03d7, A2_inv_for_nr03d7, A3_inv_for_nr03d7 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr03da_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A1_inv_for_nr03da;

	not MGM_BG_0( A1_inv_for_nr03da, A1 );

	wire A2_inv_for_nr03da;

	not MGM_BG_1( A2_inv_for_nr03da, A2 );

	wire A3_inv_for_nr03da;

	not MGM_BG_2( A3_inv_for_nr03da, A3 );

	and MGM_BG_3( ZN, A1_inv_for_nr03da, A2_inv_for_nr03da, A3_inv_for_nr03da );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr04d0_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nr04d0;

	not MGM_BG_0( A1_inv_for_nr04d0, A1 );

	wire A2_inv_for_nr04d0;

	not MGM_BG_1( A2_inv_for_nr04d0, A2 );

	wire A3_inv_for_nr04d0;

	not MGM_BG_2( A3_inv_for_nr04d0, A3 );

	wire A4_inv_for_nr04d0;

	not MGM_BG_3( A4_inv_for_nr04d0, A4 );

	and MGM_BG_4( ZN, A1_inv_for_nr04d0, A2_inv_for_nr04d0, A3_inv_for_nr04d0, A4_inv_for_nr04d0 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr04d1_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nr04d1;

	not MGM_BG_0( A1_inv_for_nr04d1, A1 );

	wire A2_inv_for_nr04d1;

	not MGM_BG_1( A2_inv_for_nr04d1, A2 );

	wire A3_inv_for_nr04d1;

	not MGM_BG_2( A3_inv_for_nr04d1, A3 );

	wire A4_inv_for_nr04d1;

	not MGM_BG_3( A4_inv_for_nr04d1, A4 );

	and MGM_BG_4( ZN, A1_inv_for_nr04d1, A2_inv_for_nr04d1, A3_inv_for_nr04d1, A4_inv_for_nr04d1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr04d2_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nr04d2;

	not MGM_BG_0( A1_inv_for_nr04d2, A1 );

	wire A2_inv_for_nr04d2;

	not MGM_BG_1( A2_inv_for_nr04d2, A2 );

	wire A3_inv_for_nr04d2;

	not MGM_BG_2( A3_inv_for_nr04d2, A3 );

	wire A4_inv_for_nr04d2;

	not MGM_BG_3( A4_inv_for_nr04d2, A4 );

	and MGM_BG_4( ZN, A1_inv_for_nr04d2, A2_inv_for_nr04d2, A3_inv_for_nr04d2, A4_inv_for_nr04d2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr04d4_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nr04d4;

	not MGM_BG_0( A1_inv_for_nr04d4, A1 );

	wire A2_inv_for_nr04d4;

	not MGM_BG_1( A2_inv_for_nr04d4, A2 );

	wire A3_inv_for_nr04d4;

	not MGM_BG_2( A3_inv_for_nr04d4, A3 );

	wire A4_inv_for_nr04d4;

	not MGM_BG_3( A4_inv_for_nr04d4, A4 );

	and MGM_BG_4( ZN, A1_inv_for_nr04d4, A2_inv_for_nr04d4, A3_inv_for_nr04d4, A4_inv_for_nr04d4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr04d7_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nr04d7;

	not MGM_BG_0( A1_inv_for_nr04d7, A1 );

	wire A2_inv_for_nr04d7;

	not MGM_BG_1( A2_inv_for_nr04d7, A2 );

	wire A3_inv_for_nr04d7;

	not MGM_BG_2( A3_inv_for_nr04d7, A3 );

	wire A4_inv_for_nr04d7;

	not MGM_BG_3( A4_inv_for_nr04d7, A4 );

	and MGM_BG_4( ZN, A1_inv_for_nr04d7, A2_inv_for_nr04d7, A3_inv_for_nr04d7, A4_inv_for_nr04d7 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr04da_func( ZN, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output ZN;

	wire A1_inv_for_nr04da;

	not MGM_BG_0( A1_inv_for_nr04da, A1 );

	wire A2_inv_for_nr04da;

	not MGM_BG_1( A2_inv_for_nr04da, A2 );

	wire A3_inv_for_nr04da;

	not MGM_BG_2( A3_inv_for_nr04da, A3 );

	wire A4_inv_for_nr04da;

	not MGM_BG_3( A4_inv_for_nr04da, A4 );

	and MGM_BG_4( ZN, A1_inv_for_nr04da, A2_inv_for_nr04da, A3_inv_for_nr04da, A4_inv_for_nr04da );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr13d1_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A2_inv_for_nr13d1;

	not MGM_BG_0( A2_inv_for_nr13d1, A2 );

	wire A3_inv_for_nr13d1;

	not MGM_BG_1( A3_inv_for_nr13d1, A3 );

	and MGM_BG_2( ZN, A2_inv_for_nr13d1, A3_inv_for_nr13d1, A1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr13d2_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A2_inv_for_nr13d2;

	not MGM_BG_0( A2_inv_for_nr13d2, A2 );

	wire A3_inv_for_nr13d2;

	not MGM_BG_1( A3_inv_for_nr13d2, A3 );

	and MGM_BG_2( ZN, A2_inv_for_nr13d2, A3_inv_for_nr13d2, A1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr13d4_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A2_inv_for_nr13d4;

	not MGM_BG_0( A2_inv_for_nr13d4, A2 );

	wire A3_inv_for_nr13d4;

	not MGM_BG_1( A3_inv_for_nr13d4, A3 );

	and MGM_BG_2( ZN, A2_inv_for_nr13d4, A3_inv_for_nr13d4, A1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr23d1_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A3_inv_for_nr23d1;

	not MGM_BG_0( A3_inv_for_nr23d1, A3 );

	and MGM_BG_1( ZN, A3_inv_for_nr23d1, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr23d2_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A3_inv_for_nr23d2;

	not MGM_BG_0( A3_inv_for_nr23d2, A3 );

	and MGM_BG_1( ZN, A3_inv_for_nr23d2, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module nr23d4_func( ZN, A1, A2, A3 );
input A1, A2, A3;
output ZN;

	wire A3_inv_for_nr23d4;

	not MGM_BG_0( A3_inv_for_nr23d4, A3 );

	and MGM_BG_1( ZN, A3_inv_for_nr23d4, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai211d1_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oai211d1;

	not MGM_BG_0( A_inv_for_oai211d1, A );

	wire B_inv_for_oai211d1;

	not MGM_BG_1( B_inv_for_oai211d1, B );

	wire C1_inv_for_oai211d1;

	not MGM_BG_2( C1_inv_for_oai211d1, C1 );

	wire C2_inv_for_oai211d1;

	not MGM_BG_3( C2_inv_for_oai211d1, C2 );

	wire ZN_row3;

	and MGM_BG_4( ZN_row3, C1_inv_for_oai211d1, C2_inv_for_oai211d1 );

	or MGM_BG_5( ZN, A_inv_for_oai211d1, B_inv_for_oai211d1, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai211d2_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oai211d2;

	not MGM_BG_0( A_inv_for_oai211d2, A );

	wire B_inv_for_oai211d2;

	not MGM_BG_1( B_inv_for_oai211d2, B );

	wire C1_inv_for_oai211d2;

	not MGM_BG_2( C1_inv_for_oai211d2, C1 );

	wire C2_inv_for_oai211d2;

	not MGM_BG_3( C2_inv_for_oai211d2, C2 );

	wire ZN_row3;

	and MGM_BG_4( ZN_row3, C1_inv_for_oai211d2, C2_inv_for_oai211d2 );

	or MGM_BG_5( ZN, A_inv_for_oai211d2, B_inv_for_oai211d2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai211d4_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oai211d4;

	not MGM_BG_0( A_inv_for_oai211d4, A );

	wire B_inv_for_oai211d4;

	not MGM_BG_1( B_inv_for_oai211d4, B );

	wire C1_inv_for_oai211d4;

	not MGM_BG_2( C1_inv_for_oai211d4, C1 );

	wire C2_inv_for_oai211d4;

	not MGM_BG_3( C2_inv_for_oai211d4, C2 );

	wire ZN_row3;

	and MGM_BG_4( ZN_row3, C1_inv_for_oai211d4, C2_inv_for_oai211d4 );

	or MGM_BG_5( ZN, A_inv_for_oai211d4, B_inv_for_oai211d4, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai21d1_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_oai21d1;

	not MGM_BG_0( A_inv_for_oai21d1, A );

	wire B1_inv_for_oai21d1;

	not MGM_BG_1( B1_inv_for_oai21d1, B1 );

	wire B2_inv_for_oai21d1;

	not MGM_BG_2( B2_inv_for_oai21d1, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai21d1, B2_inv_for_oai21d1 );

	or MGM_BG_4( ZN, A_inv_for_oai21d1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai21d2_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_oai21d2;

	not MGM_BG_0( A_inv_for_oai21d2, A );

	wire B1_inv_for_oai21d2;

	not MGM_BG_1( B1_inv_for_oai21d2, B1 );

	wire B2_inv_for_oai21d2;

	not MGM_BG_2( B2_inv_for_oai21d2, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai21d2, B2_inv_for_oai21d2 );

	or MGM_BG_4( ZN, A_inv_for_oai21d2, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai21d4_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_oai21d4;

	not MGM_BG_0( A_inv_for_oai21d4, A );

	wire B1_inv_for_oai21d4;

	not MGM_BG_1( B1_inv_for_oai21d4, B1 );

	wire B2_inv_for_oai21d4;

	not MGM_BG_2( B2_inv_for_oai21d4, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai21d4, B2_inv_for_oai21d4 );

	or MGM_BG_4( ZN, A_inv_for_oai21d4, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai221d1_func( ZN, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output ZN;

	wire A_inv_for_oai221d1;

	not MGM_BG_0( A_inv_for_oai221d1, A );

	wire B1_inv_for_oai221d1;

	not MGM_BG_1( B1_inv_for_oai221d1, B1 );

	wire B2_inv_for_oai221d1;

	not MGM_BG_2( B2_inv_for_oai221d1, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai221d1, B2_inv_for_oai221d1 );

	wire C1_inv_for_oai221d1;

	not MGM_BG_4( C1_inv_for_oai221d1, C1 );

	wire C2_inv_for_oai221d1;

	not MGM_BG_5( C2_inv_for_oai221d1, C2 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, C1_inv_for_oai221d1, C2_inv_for_oai221d1 );

	or MGM_BG_7( ZN, A_inv_for_oai221d1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai221d2_func( ZN, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output ZN;

	wire A_inv_for_oai221d2;

	not MGM_BG_0( A_inv_for_oai221d2, A );

	wire B1_inv_for_oai221d2;

	not MGM_BG_1( B1_inv_for_oai221d2, B1 );

	wire B2_inv_for_oai221d2;

	not MGM_BG_2( B2_inv_for_oai221d2, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai221d2, B2_inv_for_oai221d2 );

	wire C1_inv_for_oai221d2;

	not MGM_BG_4( C1_inv_for_oai221d2, C1 );

	wire C2_inv_for_oai221d2;

	not MGM_BG_5( C2_inv_for_oai221d2, C2 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, C1_inv_for_oai221d2, C2_inv_for_oai221d2 );

	or MGM_BG_7( ZN, A_inv_for_oai221d2, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai221d4_func( ZN, A, B1, B2, C1, C2 );
input A, B1, B2, C1, C2;
output ZN;

	wire A_inv_for_oai221d4;

	not MGM_BG_0( A_inv_for_oai221d4, A );

	wire B1_inv_for_oai221d4;

	not MGM_BG_1( B1_inv_for_oai221d4, B1 );

	wire B2_inv_for_oai221d4;

	not MGM_BG_2( B2_inv_for_oai221d4, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai221d4, B2_inv_for_oai221d4 );

	wire C1_inv_for_oai221d4;

	not MGM_BG_4( C1_inv_for_oai221d4, C1 );

	wire C2_inv_for_oai221d4;

	not MGM_BG_5( C2_inv_for_oai221d4, C2 );

	wire ZN_row3;

	and MGM_BG_6( ZN_row3, C1_inv_for_oai221d4, C2_inv_for_oai221d4 );

	or MGM_BG_7( ZN, A_inv_for_oai221d4, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai2222d1_func( ZN, A1, A2, B1, B2, C1, C2, D1, D2 );
input A1, A2, B1, B2, C1, C2, D1, D2;
output ZN;

	wire A1_inv_for_oai2222d1;

	not MGM_BG_0( A1_inv_for_oai2222d1, A1 );

	wire A2_inv_for_oai2222d1;

	not MGM_BG_1( A2_inv_for_oai2222d1, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai2222d1, A2_inv_for_oai2222d1 );

	wire B1_inv_for_oai2222d1;

	not MGM_BG_3( B1_inv_for_oai2222d1, B1 );

	wire B2_inv_for_oai2222d1;

	not MGM_BG_4( B2_inv_for_oai2222d1, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai2222d1, B2_inv_for_oai2222d1 );

	wire C1_inv_for_oai2222d1;

	not MGM_BG_6( C1_inv_for_oai2222d1, C1 );

	wire C2_inv_for_oai2222d1;

	not MGM_BG_7( C2_inv_for_oai2222d1, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, C1_inv_for_oai2222d1, C2_inv_for_oai2222d1 );

	wire D1_inv_for_oai2222d1;

	not MGM_BG_9( D1_inv_for_oai2222d1, D1 );

	wire D2_inv_for_oai2222d1;

	not MGM_BG_10( D2_inv_for_oai2222d1, D2 );

	wire ZN_row4;

	and MGM_BG_11( ZN_row4, D1_inv_for_oai2222d1, D2_inv_for_oai2222d1 );

	or MGM_BG_12( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai2222d2_func( ZN, A1, A2, B1, B2, C1, C2, D1, D2 );
input A1, A2, B1, B2, C1, C2, D1, D2;
output ZN;

	wire A1_inv_for_oai2222d2;

	not MGM_BG_0( A1_inv_for_oai2222d2, A1 );

	wire A2_inv_for_oai2222d2;

	not MGM_BG_1( A2_inv_for_oai2222d2, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai2222d2, A2_inv_for_oai2222d2 );

	wire B1_inv_for_oai2222d2;

	not MGM_BG_3( B1_inv_for_oai2222d2, B1 );

	wire B2_inv_for_oai2222d2;

	not MGM_BG_4( B2_inv_for_oai2222d2, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai2222d2, B2_inv_for_oai2222d2 );

	wire C1_inv_for_oai2222d2;

	not MGM_BG_6( C1_inv_for_oai2222d2, C1 );

	wire C2_inv_for_oai2222d2;

	not MGM_BG_7( C2_inv_for_oai2222d2, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, C1_inv_for_oai2222d2, C2_inv_for_oai2222d2 );

	wire D1_inv_for_oai2222d2;

	not MGM_BG_9( D1_inv_for_oai2222d2, D1 );

	wire D2_inv_for_oai2222d2;

	not MGM_BG_10( D2_inv_for_oai2222d2, D2 );

	wire ZN_row4;

	and MGM_BG_11( ZN_row4, D1_inv_for_oai2222d2, D2_inv_for_oai2222d2 );

	or MGM_BG_12( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai2222d4_func( ZN, A1, A2, B1, B2, C1, C2, D1, D2 );
input A1, A2, B1, B2, C1, C2, D1, D2;
output ZN;

	wire A1_inv_for_oai2222d4;

	not MGM_BG_0( A1_inv_for_oai2222d4, A1 );

	wire A2_inv_for_oai2222d4;

	not MGM_BG_1( A2_inv_for_oai2222d4, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai2222d4, A2_inv_for_oai2222d4 );

	wire B1_inv_for_oai2222d4;

	not MGM_BG_3( B1_inv_for_oai2222d4, B1 );

	wire B2_inv_for_oai2222d4;

	not MGM_BG_4( B2_inv_for_oai2222d4, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai2222d4, B2_inv_for_oai2222d4 );

	wire C1_inv_for_oai2222d4;

	not MGM_BG_6( C1_inv_for_oai2222d4, C1 );

	wire C2_inv_for_oai2222d4;

	not MGM_BG_7( C2_inv_for_oai2222d4, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, C1_inv_for_oai2222d4, C2_inv_for_oai2222d4 );

	wire D1_inv_for_oai2222d4;

	not MGM_BG_9( D1_inv_for_oai2222d4, D1 );

	wire D2_inv_for_oai2222d4;

	not MGM_BG_10( D2_inv_for_oai2222d4, D2 );

	wire ZN_row4;

	and MGM_BG_11( ZN_row4, D1_inv_for_oai2222d4, D2_inv_for_oai2222d4 );

	or MGM_BG_12( ZN, ZN_row1, ZN_row2, ZN_row3, ZN_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai222d1_func( ZN, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output ZN;

	wire A1_inv_for_oai222d1;

	not MGM_BG_0( A1_inv_for_oai222d1, A1 );

	wire A2_inv_for_oai222d1;

	not MGM_BG_1( A2_inv_for_oai222d1, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai222d1, A2_inv_for_oai222d1 );

	wire B1_inv_for_oai222d1;

	not MGM_BG_3( B1_inv_for_oai222d1, B1 );

	wire B2_inv_for_oai222d1;

	not MGM_BG_4( B2_inv_for_oai222d1, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai222d1, B2_inv_for_oai222d1 );

	wire C1_inv_for_oai222d1;

	not MGM_BG_6( C1_inv_for_oai222d1, C1 );

	wire C2_inv_for_oai222d1;

	not MGM_BG_7( C2_inv_for_oai222d1, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, C1_inv_for_oai222d1, C2_inv_for_oai222d1 );

	or MGM_BG_9( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai222d2_func( ZN, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output ZN;

	wire A1_inv_for_oai222d2;

	not MGM_BG_0( A1_inv_for_oai222d2, A1 );

	wire A2_inv_for_oai222d2;

	not MGM_BG_1( A2_inv_for_oai222d2, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai222d2, A2_inv_for_oai222d2 );

	wire B1_inv_for_oai222d2;

	not MGM_BG_3( B1_inv_for_oai222d2, B1 );

	wire B2_inv_for_oai222d2;

	not MGM_BG_4( B2_inv_for_oai222d2, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai222d2, B2_inv_for_oai222d2 );

	wire C1_inv_for_oai222d2;

	not MGM_BG_6( C1_inv_for_oai222d2, C1 );

	wire C2_inv_for_oai222d2;

	not MGM_BG_7( C2_inv_for_oai222d2, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, C1_inv_for_oai222d2, C2_inv_for_oai222d2 );

	or MGM_BG_9( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai222d4_func( ZN, A1, A2, B1, B2, C1, C2 );
input A1, A2, B1, B2, C1, C2;
output ZN;

	wire A1_inv_for_oai222d4;

	not MGM_BG_0( A1_inv_for_oai222d4, A1 );

	wire A2_inv_for_oai222d4;

	not MGM_BG_1( A2_inv_for_oai222d4, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai222d4, A2_inv_for_oai222d4 );

	wire B1_inv_for_oai222d4;

	not MGM_BG_3( B1_inv_for_oai222d4, B1 );

	wire B2_inv_for_oai222d4;

	not MGM_BG_4( B2_inv_for_oai222d4, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai222d4, B2_inv_for_oai222d4 );

	wire C1_inv_for_oai222d4;

	not MGM_BG_6( C1_inv_for_oai222d4, C1 );

	wire C2_inv_for_oai222d4;

	not MGM_BG_7( C2_inv_for_oai222d4, C2 );

	wire ZN_row3;

	and MGM_BG_8( ZN_row3, C1_inv_for_oai222d4, C2_inv_for_oai222d4 );

	or MGM_BG_9( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai22d1_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_oai22d1;

	not MGM_BG_0( A1_inv_for_oai22d1, A1 );

	wire A2_inv_for_oai22d1;

	not MGM_BG_1( A2_inv_for_oai22d1, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai22d1, A2_inv_for_oai22d1 );

	wire B1_inv_for_oai22d1;

	not MGM_BG_3( B1_inv_for_oai22d1, B1 );

	wire B2_inv_for_oai22d1;

	not MGM_BG_4( B2_inv_for_oai22d1, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai22d1, B2_inv_for_oai22d1 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai22d2_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_oai22d2;

	not MGM_BG_0( A1_inv_for_oai22d2, A1 );

	wire A2_inv_for_oai22d2;

	not MGM_BG_1( A2_inv_for_oai22d2, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai22d2, A2_inv_for_oai22d2 );

	wire B1_inv_for_oai22d2;

	not MGM_BG_3( B1_inv_for_oai22d2, B1 );

	wire B2_inv_for_oai22d2;

	not MGM_BG_4( B2_inv_for_oai22d2, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai22d2, B2_inv_for_oai22d2 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai22d4_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_oai22d4;

	not MGM_BG_0( A1_inv_for_oai22d4, A1 );

	wire A2_inv_for_oai22d4;

	not MGM_BG_1( A2_inv_for_oai22d4, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai22d4, A2_inv_for_oai22d4 );

	wire B1_inv_for_oai22d4;

	not MGM_BG_3( B1_inv_for_oai22d4, B1 );

	wire B2_inv_for_oai22d4;

	not MGM_BG_4( B2_inv_for_oai22d4, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai22d4, B2_inv_for_oai22d4 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai311d1_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oai311d1;

	not MGM_BG_0( A_inv_for_oai311d1, A );

	wire B_inv_for_oai311d1;

	not MGM_BG_1( B_inv_for_oai311d1, B );

	wire C1_inv_for_oai311d1;

	not MGM_BG_2( C1_inv_for_oai311d1, C1 );

	wire C2_inv_for_oai311d1;

	not MGM_BG_3( C2_inv_for_oai311d1, C2 );

	wire C3_inv_for_oai311d1;

	not MGM_BG_4( C3_inv_for_oai311d1, C3 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, C1_inv_for_oai311d1, C2_inv_for_oai311d1, C3_inv_for_oai311d1 );

	or MGM_BG_6( ZN, A_inv_for_oai311d1, B_inv_for_oai311d1, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai311d2_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oai311d2;

	not MGM_BG_0( A_inv_for_oai311d2, A );

	wire B_inv_for_oai311d2;

	not MGM_BG_1( B_inv_for_oai311d2, B );

	wire C1_inv_for_oai311d2;

	not MGM_BG_2( C1_inv_for_oai311d2, C1 );

	wire C2_inv_for_oai311d2;

	not MGM_BG_3( C2_inv_for_oai311d2, C2 );

	wire C3_inv_for_oai311d2;

	not MGM_BG_4( C3_inv_for_oai311d2, C3 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, C1_inv_for_oai311d2, C2_inv_for_oai311d2, C3_inv_for_oai311d2 );

	or MGM_BG_6( ZN, A_inv_for_oai311d2, B_inv_for_oai311d2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai311d4_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oai311d4;

	not MGM_BG_0( A_inv_for_oai311d4, A );

	wire B_inv_for_oai311d4;

	not MGM_BG_1( B_inv_for_oai311d4, B );

	wire C1_inv_for_oai311d4;

	not MGM_BG_2( C1_inv_for_oai311d4, C1 );

	wire C2_inv_for_oai311d4;

	not MGM_BG_3( C2_inv_for_oai311d4, C2 );

	wire C3_inv_for_oai311d4;

	not MGM_BG_4( C3_inv_for_oai311d4, C3 );

	wire ZN_row3;

	and MGM_BG_5( ZN_row3, C1_inv_for_oai311d4, C2_inv_for_oai311d4, C3_inv_for_oai311d4 );

	or MGM_BG_6( ZN, A_inv_for_oai311d4, B_inv_for_oai311d4, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai31d1_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_oai31d1;

	not MGM_BG_0( A_inv_for_oai31d1, A );

	wire B1_inv_for_oai31d1;

	not MGM_BG_1( B1_inv_for_oai31d1, B1 );

	wire B2_inv_for_oai31d1;

	not MGM_BG_2( B2_inv_for_oai31d1, B2 );

	wire B3_inv_for_oai31d1;

	not MGM_BG_3( B3_inv_for_oai31d1, B3 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, B1_inv_for_oai31d1, B2_inv_for_oai31d1, B3_inv_for_oai31d1 );

	or MGM_BG_5( ZN, A_inv_for_oai31d1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai31d2_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_oai31d2;

	not MGM_BG_0( A_inv_for_oai31d2, A );

	wire B1_inv_for_oai31d2;

	not MGM_BG_1( B1_inv_for_oai31d2, B1 );

	wire B2_inv_for_oai31d2;

	not MGM_BG_2( B2_inv_for_oai31d2, B2 );

	wire B3_inv_for_oai31d2;

	not MGM_BG_3( B3_inv_for_oai31d2, B3 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, B1_inv_for_oai31d2, B2_inv_for_oai31d2, B3_inv_for_oai31d2 );

	or MGM_BG_5( ZN, A_inv_for_oai31d2, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai31d4_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_oai31d4;

	not MGM_BG_0( A_inv_for_oai31d4, A );

	wire B1_inv_for_oai31d4;

	not MGM_BG_1( B1_inv_for_oai31d4, B1 );

	wire B2_inv_for_oai31d4;

	not MGM_BG_2( B2_inv_for_oai31d4, B2 );

	wire B3_inv_for_oai31d4;

	not MGM_BG_3( B3_inv_for_oai31d4, B3 );

	wire ZN_row2;

	and MGM_BG_4( ZN_row2, B1_inv_for_oai31d4, B2_inv_for_oai31d4, B3_inv_for_oai31d4 );

	or MGM_BG_5( ZN, A_inv_for_oai31d4, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai321d1_func( ZN, A, B1, B2, C1, C2, C3 );
input A, B1, B2, C1, C2, C3;
output ZN;

	wire A_inv_for_oai321d1;

	not MGM_BG_0( A_inv_for_oai321d1, A );

	wire B1_inv_for_oai321d1;

	not MGM_BG_1( B1_inv_for_oai321d1, B1 );

	wire B2_inv_for_oai321d1;

	not MGM_BG_2( B2_inv_for_oai321d1, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai321d1, B2_inv_for_oai321d1 );

	wire C1_inv_for_oai321d1;

	not MGM_BG_4( C1_inv_for_oai321d1, C1 );

	wire C2_inv_for_oai321d1;

	not MGM_BG_5( C2_inv_for_oai321d1, C2 );

	wire C3_inv_for_oai321d1;

	not MGM_BG_6( C3_inv_for_oai321d1, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, C1_inv_for_oai321d1, C2_inv_for_oai321d1, C3_inv_for_oai321d1 );

	or MGM_BG_8( ZN, A_inv_for_oai321d1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai321d2_func( ZN, A, B1, B2, C1, C2, C3 );
input A, B1, B2, C1, C2, C3;
output ZN;

	wire A_inv_for_oai321d2;

	not MGM_BG_0( A_inv_for_oai321d2, A );

	wire B1_inv_for_oai321d2;

	not MGM_BG_1( B1_inv_for_oai321d2, B1 );

	wire B2_inv_for_oai321d2;

	not MGM_BG_2( B2_inv_for_oai321d2, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai321d2, B2_inv_for_oai321d2 );

	wire C1_inv_for_oai321d2;

	not MGM_BG_4( C1_inv_for_oai321d2, C1 );

	wire C2_inv_for_oai321d2;

	not MGM_BG_5( C2_inv_for_oai321d2, C2 );

	wire C3_inv_for_oai321d2;

	not MGM_BG_6( C3_inv_for_oai321d2, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, C1_inv_for_oai321d2, C2_inv_for_oai321d2, C3_inv_for_oai321d2 );

	or MGM_BG_8( ZN, A_inv_for_oai321d2, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai321d4_func( ZN, A, B1, B2, C1, C2, C3 );
input A, B1, B2, C1, C2, C3;
output ZN;

	wire A_inv_for_oai321d4;

	not MGM_BG_0( A_inv_for_oai321d4, A );

	wire B1_inv_for_oai321d4;

	not MGM_BG_1( B1_inv_for_oai321d4, B1 );

	wire B2_inv_for_oai321d4;

	not MGM_BG_2( B2_inv_for_oai321d4, B2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1_inv_for_oai321d4, B2_inv_for_oai321d4 );

	wire C1_inv_for_oai321d4;

	not MGM_BG_4( C1_inv_for_oai321d4, C1 );

	wire C2_inv_for_oai321d4;

	not MGM_BG_5( C2_inv_for_oai321d4, C2 );

	wire C3_inv_for_oai321d4;

	not MGM_BG_6( C3_inv_for_oai321d4, C3 );

	wire ZN_row3;

	and MGM_BG_7( ZN_row3, C1_inv_for_oai321d4, C2_inv_for_oai321d4, C3_inv_for_oai321d4 );

	or MGM_BG_8( ZN, A_inv_for_oai321d4, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai322d1_func( ZN, A1, A2, B1, B2, C1, C2, C3 );
input A1, A2, B1, B2, C1, C2, C3;
output ZN;

	wire A1_inv_for_oai322d1;

	not MGM_BG_0( A1_inv_for_oai322d1, A1 );

	wire A2_inv_for_oai322d1;

	not MGM_BG_1( A2_inv_for_oai322d1, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai322d1, A2_inv_for_oai322d1 );

	wire B1_inv_for_oai322d1;

	not MGM_BG_3( B1_inv_for_oai322d1, B1 );

	wire B2_inv_for_oai322d1;

	not MGM_BG_4( B2_inv_for_oai322d1, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai322d1, B2_inv_for_oai322d1 );

	wire C1_inv_for_oai322d1;

	not MGM_BG_6( C1_inv_for_oai322d1, C1 );

	wire C2_inv_for_oai322d1;

	not MGM_BG_7( C2_inv_for_oai322d1, C2 );

	wire C3_inv_for_oai322d1;

	not MGM_BG_8( C3_inv_for_oai322d1, C3 );

	wire ZN_row3;

	and MGM_BG_9( ZN_row3, C1_inv_for_oai322d1, C2_inv_for_oai322d1, C3_inv_for_oai322d1 );

	or MGM_BG_10( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai322d2_func( ZN, A1, A2, B1, B2, C1, C2, C3 );
input A1, A2, B1, B2, C1, C2, C3;
output ZN;

	wire A1_inv_for_oai322d2;

	not MGM_BG_0( A1_inv_for_oai322d2, A1 );

	wire A2_inv_for_oai322d2;

	not MGM_BG_1( A2_inv_for_oai322d2, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai322d2, A2_inv_for_oai322d2 );

	wire B1_inv_for_oai322d2;

	not MGM_BG_3( B1_inv_for_oai322d2, B1 );

	wire B2_inv_for_oai322d2;

	not MGM_BG_4( B2_inv_for_oai322d2, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai322d2, B2_inv_for_oai322d2 );

	wire C1_inv_for_oai322d2;

	not MGM_BG_6( C1_inv_for_oai322d2, C1 );

	wire C2_inv_for_oai322d2;

	not MGM_BG_7( C2_inv_for_oai322d2, C2 );

	wire C3_inv_for_oai322d2;

	not MGM_BG_8( C3_inv_for_oai322d2, C3 );

	wire ZN_row3;

	and MGM_BG_9( ZN_row3, C1_inv_for_oai322d2, C2_inv_for_oai322d2, C3_inv_for_oai322d2 );

	or MGM_BG_10( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oai322d4_func( ZN, A1, A2, B1, B2, C1, C2, C3 );
input A1, A2, B1, B2, C1, C2, C3;
output ZN;

	wire A1_inv_for_oai322d4;

	not MGM_BG_0( A1_inv_for_oai322d4, A1 );

	wire A2_inv_for_oai322d4;

	not MGM_BG_1( A2_inv_for_oai322d4, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oai322d4, A2_inv_for_oai322d4 );

	wire B1_inv_for_oai322d4;

	not MGM_BG_3( B1_inv_for_oai322d4, B1 );

	wire B2_inv_for_oai322d4;

	not MGM_BG_4( B2_inv_for_oai322d4, B2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, B1_inv_for_oai322d4, B2_inv_for_oai322d4 );

	wire C1_inv_for_oai322d4;

	not MGM_BG_6( C1_inv_for_oai322d4, C1 );

	wire C2_inv_for_oai322d4;

	not MGM_BG_7( C2_inv_for_oai322d4, C2 );

	wire C3_inv_for_oai322d4;

	not MGM_BG_8( C3_inv_for_oai322d4, C3 );

	wire ZN_row3;

	and MGM_BG_9( ZN_row3, C1_inv_for_oai322d4, C2_inv_for_oai322d4, C3_inv_for_oai322d4 );

	or MGM_BG_10( ZN, ZN_row1, ZN_row2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim211d1_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oaim211d1;

	not MGM_BG_0( A_inv_for_oaim211d1, A );

	wire B_inv_for_oaim211d1;

	not MGM_BG_1( B_inv_for_oaim211d1, B );

	wire ZN_row3;

	and MGM_BG_2( ZN_row3, C1, C2 );

	or MGM_BG_3( ZN, A_inv_for_oaim211d1, B_inv_for_oaim211d1, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim211d2_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oaim211d2;

	not MGM_BG_0( A_inv_for_oaim211d2, A );

	wire B_inv_for_oaim211d2;

	not MGM_BG_1( B_inv_for_oaim211d2, B );

	wire ZN_row3;

	and MGM_BG_2( ZN_row3, C1, C2 );

	or MGM_BG_3( ZN, A_inv_for_oaim211d2, B_inv_for_oaim211d2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim211d4_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oaim211d4;

	not MGM_BG_0( A_inv_for_oaim211d4, A );

	wire B_inv_for_oaim211d4;

	not MGM_BG_1( B_inv_for_oaim211d4, B );

	wire ZN_row3;

	and MGM_BG_2( ZN_row3, C1, C2 );

	or MGM_BG_3( ZN, A_inv_for_oaim211d4, B_inv_for_oaim211d4, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim21d1_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_oaim21d1;

	not MGM_BG_0( A_inv_for_oaim21d1, A );

	wire ZN_row2;

	and MGM_BG_1( ZN_row2, B1, B2 );

	or MGM_BG_2( ZN, A_inv_for_oaim21d1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim21d2_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_oaim21d2;

	not MGM_BG_0( A_inv_for_oaim21d2, A );

	wire ZN_row2;

	and MGM_BG_1( ZN_row2, B1, B2 );

	or MGM_BG_2( ZN, A_inv_for_oaim21d2, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim21d4_func( ZN, A, B1, B2 );
input A, B1, B2;
output ZN;

	wire A_inv_for_oaim21d4;

	not MGM_BG_0( A_inv_for_oaim21d4, A );

	wire ZN_row2;

	and MGM_BG_1( ZN_row2, B1, B2 );

	or MGM_BG_2( ZN, A_inv_for_oaim21d4, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim22d1_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_oaim22d1;

	not MGM_BG_0( A1_inv_for_oaim22d1, A1 );

	wire A2_inv_for_oaim22d1;

	not MGM_BG_1( A2_inv_for_oaim22d1, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oaim22d1, A2_inv_for_oaim22d1 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1, B2 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim22d2_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_oaim22d2;

	not MGM_BG_0( A1_inv_for_oaim22d2, A1 );

	wire A2_inv_for_oaim22d2;

	not MGM_BG_1( A2_inv_for_oaim22d2, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oaim22d2, A2_inv_for_oaim22d2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1, B2 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim22d4_func( ZN, A1, A2, B1, B2 );
input A1, A2, B1, B2;
output ZN;

	wire A1_inv_for_oaim22d4;

	not MGM_BG_0( A1_inv_for_oaim22d4, A1 );

	wire A2_inv_for_oaim22d4;

	not MGM_BG_1( A2_inv_for_oaim22d4, A2 );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A1_inv_for_oaim22d4, A2_inv_for_oaim22d4 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, B1, B2 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim2m11d1_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oaim2m11d1;

	not MGM_BG_0( A_inv_for_oaim2m11d1, A );

	wire ZN_row3;

	and MGM_BG_1( ZN_row3, C1, C2 );

	or MGM_BG_2( ZN, A_inv_for_oaim2m11d1, B, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim2m11d2_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oaim2m11d2;

	not MGM_BG_0( A_inv_for_oaim2m11d2, A );

	wire ZN_row3;

	and MGM_BG_1( ZN_row3, C1, C2 );

	or MGM_BG_2( ZN, A_inv_for_oaim2m11d2, B, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim2m11d4_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oaim2m11d4;

	not MGM_BG_0( A_inv_for_oaim2m11d4, A );

	wire ZN_row3;

	and MGM_BG_1( ZN_row3, C1, C2 );

	or MGM_BG_2( ZN, A_inv_for_oaim2m11d4, B, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim311d1_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oaim311d1;

	not MGM_BG_0( A_inv_for_oaim311d1, A );

	wire B_inv_for_oaim311d1;

	not MGM_BG_1( B_inv_for_oaim311d1, B );

	wire ZN_row3;

	and MGM_BG_2( ZN_row3, C1, C2, C3 );

	or MGM_BG_3( ZN, A_inv_for_oaim311d1, B_inv_for_oaim311d1, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim311d2_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oaim311d2;

	not MGM_BG_0( A_inv_for_oaim311d2, A );

	wire B_inv_for_oaim311d2;

	not MGM_BG_1( B_inv_for_oaim311d2, B );

	wire ZN_row3;

	and MGM_BG_2( ZN_row3, C1, C2, C3 );

	or MGM_BG_3( ZN, A_inv_for_oaim311d2, B_inv_for_oaim311d2, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim311d4_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oaim311d4;

	not MGM_BG_0( A_inv_for_oaim311d4, A );

	wire B_inv_for_oaim311d4;

	not MGM_BG_1( B_inv_for_oaim311d4, B );

	wire ZN_row3;

	and MGM_BG_2( ZN_row3, C1, C2, C3 );

	or MGM_BG_3( ZN, A_inv_for_oaim311d4, B_inv_for_oaim311d4, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim31d1_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_oaim31d1;

	not MGM_BG_0( A_inv_for_oaim31d1, A );

	wire ZN_row2;

	and MGM_BG_1( ZN_row2, B1, B2, B3 );

	or MGM_BG_2( ZN, A_inv_for_oaim31d1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim31d2_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_oaim31d2;

	not MGM_BG_0( A_inv_for_oaim31d2, A );

	wire ZN_row2;

	and MGM_BG_1( ZN_row2, B1, B2, B3 );

	or MGM_BG_2( ZN, A_inv_for_oaim31d2, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim31d4_func( ZN, A, B1, B2, B3 );
input A, B1, B2, B3;
output ZN;

	wire A_inv_for_oaim31d4;

	not MGM_BG_0( A_inv_for_oaim31d4, A );

	wire ZN_row2;

	and MGM_BG_1( ZN_row2, B1, B2, B3 );

	or MGM_BG_2( ZN, A_inv_for_oaim31d4, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim3m11d1_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oaim3m11d1;

	not MGM_BG_0( A_inv_for_oaim3m11d1, A );

	wire ZN_row3;

	and MGM_BG_1( ZN_row3, C1, C2, C3 );

	or MGM_BG_2( ZN, A_inv_for_oaim3m11d1, B, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim3m11d2_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oaim3m11d2;

	not MGM_BG_0( A_inv_for_oaim3m11d2, A );

	wire ZN_row3;

	and MGM_BG_1( ZN_row3, C1, C2, C3 );

	or MGM_BG_2( ZN, A_inv_for_oaim3m11d2, B, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oaim3m11d4_func( ZN, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output ZN;

	wire A_inv_for_oaim3m11d4;

	not MGM_BG_0( A_inv_for_oaim3m11d4, A );

	wire ZN_row3;

	and MGM_BG_1( ZN_row3, C1, C2, C3 );

	or MGM_BG_2( ZN, A_inv_for_oaim3m11d4, B, ZN_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oan211d1_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oan211d1;

	not MGM_BG_0( A_inv_for_oan211d1, A );

	wire B_inv_for_oan211d1;

	not MGM_BG_1( B_inv_for_oan211d1, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_oan211d1, B_inv_for_oan211d1 );

	wire C1_inv_for_oan211d1;

	not MGM_BG_3( C1_inv_for_oan211d1, C1 );

	wire C2_inv_for_oan211d1;

	not MGM_BG_4( C2_inv_for_oan211d1, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_oan211d1, C1_inv_for_oan211d1, C2_inv_for_oan211d1 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oan211d2_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oan211d2;

	not MGM_BG_0( A_inv_for_oan211d2, A );

	wire B_inv_for_oan211d2;

	not MGM_BG_1( B_inv_for_oan211d2, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_oan211d2, B_inv_for_oan211d2 );

	wire C1_inv_for_oan211d2;

	not MGM_BG_3( C1_inv_for_oan211d2, C1 );

	wire C2_inv_for_oan211d2;

	not MGM_BG_4( C2_inv_for_oan211d2, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_oan211d2, C1_inv_for_oan211d2, C2_inv_for_oan211d2 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module oan211d4_func( ZN, A, B, C1, C2 );
input A, B, C1, C2;
output ZN;

	wire A_inv_for_oan211d4;

	not MGM_BG_0( A_inv_for_oan211d4, A );

	wire B_inv_for_oan211d4;

	not MGM_BG_1( B_inv_for_oan211d4, B );

	wire ZN_row1;

	and MGM_BG_2( ZN_row1, A_inv_for_oan211d4, B_inv_for_oan211d4 );

	wire C1_inv_for_oan211d4;

	not MGM_BG_3( C1_inv_for_oan211d4, C1 );

	wire C2_inv_for_oan211d4;

	not MGM_BG_4( C2_inv_for_oan211d4, C2 );

	wire ZN_row2;

	and MGM_BG_5( ZN_row2, A_inv_for_oan211d4, C1_inv_for_oan211d4, C2_inv_for_oan211d4 );

	or MGM_BG_6( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or02d0_func( Z, A1, A2 );
input A1, A2;
output Z;

	or MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or02d1_func( Z, A1, A2 );
input A1, A2;
output Z;

	or MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or02d2_func( Z, A1, A2 );
input A1, A2;
output Z;

	or MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or02d4_func( Z, A1, A2 );
input A1, A2;
output Z;

	or MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or02d7_func( Z, A1, A2 );
input A1, A2;
output Z;

	or MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or02da_func( Z, A1, A2 );
input A1, A2;
output Z;

	or MGM_BG_0( Z, A1, A2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or03d0_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	or MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or03d1_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	or MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or03d2_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	or MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or03d4_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	or MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or03d7_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	or MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or03da_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	or MGM_BG_0( Z, A1, A2, A3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or04d0_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	or MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or04d1_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	or MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or04d2_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	or MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or04d4_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	or MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or04d7_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	or MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module or04da_func( Z, A1, A2, A3, A4 );
input A1, A2, A3, A4;
output Z;

	or MGM_BG_0( Z, A1, A2, A3, A4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora211d1_func( Z, A, B, C1, C2 );
input A, B, C1, C2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B, C1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B, C2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora211d2_func( Z, A, B, C1, C2 );
input A, B, C1, C2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B, C1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B, C2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora211d4_func( Z, A, B, C1, C2 );
input A, B, C1, C2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B, C1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B, C2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora21d1_func( Z, A, B1, B2 );
input A, B1, B2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora21d2_func( Z, A, B1, B2 );
input A, B1, B2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora21d4_func( Z, A, B1, B2 );
input A, B1, B2;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B2 );

	or MGM_BG_2( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora311d1_func( Z, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B, C1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B, C2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, A, B, C3 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora311d2_func( Z, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B, C1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B, C2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, A, B, C3 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora311d4_func( Z, A, B, C1, C2, C3 );
input A, B, C1, C2, C3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B, C1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B, C2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, A, B, C3 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora31d1_func( Z, A, B1, B2, B3 );
input A, B1, B2, B3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, A, B3 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora31d2_func( Z, A, B1, B2, B3 );
input A, B1, B2, B3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, A, B3 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ora31d4_func( Z, A, B1, B2, B3 );
input A, B1, B2, B3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A, B1 );

	wire Z_row2;

	and MGM_BG_1( Z_row2, A, B2 );

	wire Z_row3;

	and MGM_BG_2( Z_row3, A, B3 );

	or MGM_BG_3( Z, Z_row1, Z_row2, Z_row3 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdbfb1_func( Q, QN, CDN, CPN, D, SC, SD, SDN, notifier );
input CDN, CPN, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	not MGM_BG_2( MGM_C0, CDN );

	wire SC_inv_for_sdbfb1;

	not MGM_BG_3( SC_inv_for_sdbfb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, SC_inv_for_sdbfb1, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC, SD );

	or MGM_BG_7( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_8( Q, IQ );

	buf MGM_BG_9( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdbfb2_func( Q, QN, CDN, CPN, D, SC, SD, SDN, notifier );
input CDN, CPN, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	not MGM_BG_2( MGM_C0, CDN );

	wire SC_inv_for_sdbfb2;

	not MGM_BG_3( SC_inv_for_sdbfb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, SC_inv_for_sdbfb2, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC, SD );

	or MGM_BG_7( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_8( Q, IQ );

	buf MGM_BG_9( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdbfb4_func( Q, QN, CDN, CPN, D, SC, SD, SDN, notifier );
input CDN, CPN, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	not MGM_BG_2( MGM_C0, CDN );

	wire SC_inv_for_sdbfb4;

	not MGM_BG_3( SC_inv_for_sdbfb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, SC_inv_for_sdbfb4, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC, SD );

	or MGM_BG_7( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_8( Q, IQ );

	buf MGM_BG_9( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdbrb1_func( Q, QN, CDN, CP, D, SC, SD, SDN, notifier );
input CDN, CP, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdbrb1;

	not MGM_BG_2( SC_inv_for_sdbrb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdbrb1, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdbrb2_func( Q, QN, CDN, CP, D, SC, SD, SDN, notifier );
input CDN, CP, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdbrb2;

	not MGM_BG_2( SC_inv_for_sdbrb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdbrb2, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdbrb4_func( Q, QN, CDN, CP, D, SC, SD, SDN, notifier );
input CDN, CP, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdbrb4;

	not MGM_BG_2( SC_inv_for_sdbrb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdbrb4, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcfb1_func( Q, QN, CDN, CPN, D, SC, SD, notifier );
input CDN, CPN, D, SC, SD, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdcfb1;

	not MGM_BG_2( SC_inv_for_sdcfb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdcfb1, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcfb2_func( Q, QN, CDN, CPN, D, SC, SD, notifier );
input CDN, CPN, D, SC, SD, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdcfb2;

	not MGM_BG_2( SC_inv_for_sdcfb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdcfb2, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcfb4_func( Q, QN, CDN, CPN, D, SC, SD, notifier );
input CDN, CPN, D, SC, SD, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdcfb4;

	not MGM_BG_2( SC_inv_for_sdcfb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdcfb4, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcfq1_func( Q, CDN, CPN, D, SC, SD, notifier );
input CDN, CPN, D, SC, SD, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdcfq1;

	not MGM_BG_2( SC_inv_for_sdcfq1, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdcfq1, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcfq2_func( Q, CDN, CPN, D, SC, SD, notifier );
input CDN, CPN, D, SC, SD, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdcfq2;

	not MGM_BG_2( SC_inv_for_sdcfq2, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdcfq2, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcfq4_func( Q, CDN, CPN, D, SC, SD, notifier );
input CDN, CPN, D, SC, SD, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_sdcfq4;

	not MGM_BG_2( SC_inv_for_sdcfq4, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdcfq4, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrb1_func( Q, QN, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrb1;

	not MGM_BG_1( SC_inv_for_sdcrb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrb1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrb2_func( Q, QN, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrb2;

	not MGM_BG_1( SC_inv_for_sdcrb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrb2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrb4_func( Q, QN, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrb4;

	not MGM_BG_1( SC_inv_for_sdcrb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrb4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrn1_func( QN, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrn1;

	not MGM_BG_1( SC_inv_for_sdcrn1, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrn1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrn2_func( QN, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrn2;

	not MGM_BG_1( SC_inv_for_sdcrn2, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrn2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrn4_func( QN, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output QN;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrn4;

	not MGM_BG_1( SC_inv_for_sdcrn4, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrn4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrq1_func( Q, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrq1;

	not MGM_BG_1( SC_inv_for_sdcrq1, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrq1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrq2_func( Q, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrq2;

	not MGM_BG_1( SC_inv_for_sdcrq2, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrq2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdcrq4_func( Q, CDN, CP, D, SC, SD, notifier );
input CDN, CP, D, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire SC_inv_for_sdcrq4;

	not MGM_BG_1( SC_inv_for_sdcrq4, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdcrq4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnfb1_func( Q, QN, CPN, D, SC, SD, notifier );
input CPN, D, SC, SD, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnfb1;

	not MGM_BG_1( SC_inv_for_sdnfb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdnfb1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnfb2_func( Q, QN, CPN, D, SC, SD, notifier );
input CPN, D, SC, SD, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnfb2;

	not MGM_BG_1( SC_inv_for_sdnfb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdnfb2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnfb4_func( Q, QN, CPN, D, SC, SD, notifier );
input CPN, D, SC, SD, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnfb4;

	not MGM_BG_1( SC_inv_for_sdnfb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdnfb4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrb1_func( Q, QN, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrb1;

	not MGM_BG_0( SC_inv_for_sdnrb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrb1, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrb2_func( Q, QN, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrb2;

	not MGM_BG_0( SC_inv_for_sdnrb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrb2, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrb4_func( Q, QN, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrb4;

	not MGM_BG_0( SC_inv_for_sdnrb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrb4, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

	buf MGM_BG_6( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrn1_func( QN, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrn1;

	not MGM_BG_0( SC_inv_for_sdnrn1, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrn1, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrn2_func( QN, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrn2;

	not MGM_BG_0( SC_inv_for_sdnrn2, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrn2, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrn4_func( QN, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrn4;

	not MGM_BG_0( SC_inv_for_sdnrn4, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrn4, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrq1_func( Q, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrq1;

	not MGM_BG_0( SC_inv_for_sdnrq1, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrq1, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrq2_func( Q, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrq2;

	not MGM_BG_0( SC_inv_for_sdnrq2, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrq2, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdnrq4_func( Q, CP, D, SC, SD, notifier );
input CP, D, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire SC_inv_for_sdnrq4;

	not MGM_BG_0( SC_inv_for_sdnrq4, SC );

	wire MGM_D0_row1;

	and MGM_BG_1( MGM_D0_row1, SC_inv_for_sdnrq4, D );

	wire MGM_D0_row2;

	and MGM_BG_2( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_3( MGM_D0_row3, SC, SD );

	or MGM_BG_4( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_5( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdpfb1_func( Q, QN, CPN, D, SC, SD, SDN, notifier );
input CPN, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire SC_inv_for_sdpfb1;

	not MGM_BG_2( SC_inv_for_sdpfb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdpfb1, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdpfb2_func( Q, QN, CPN, D, SC, SD, SDN, notifier );
input CPN, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire SC_inv_for_sdpfb2;

	not MGM_BG_2( SC_inv_for_sdpfb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdpfb2, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdpfb4_func( Q, QN, CPN, D, SC, SD, SDN, notifier );
input CPN, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire SC_inv_for_sdpfb4;

	not MGM_BG_2( SC_inv_for_sdpfb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_sdpfb4, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC, SD );

	or MGM_BG_6( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_7( Q, IQ );

	buf MGM_BG_8( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdprb1_func( Q, QN, CP, D, SC, SD, SDN, notifier );
input CP, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire SC_inv_for_sdprb1;

	not MGM_BG_1( SC_inv_for_sdprb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdprb1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdprb2_func( Q, QN, CP, D, SC, SD, SDN, notifier );
input CP, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire SC_inv_for_sdprb2;

	not MGM_BG_1( SC_inv_for_sdprb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdprb2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sdprb4_func( Q, QN, CP, D, SC, SD, SDN, notifier );
input CP, D, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire SC_inv_for_sdprb4;

	not MGM_BG_1( SC_inv_for_sdprb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, SC_inv_for_sdprb4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC, SD );

	or MGM_BG_5( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_6( Q, IQ );

	buf MGM_BG_7( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module secfq1_func( Q, CDN, CPN, D, ENN, SC, SD, notifier );
input CDN, CPN, D, ENN, SC, SD, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire ENN_inv_for_secfq1;

	not MGM_BG_2( ENN_inv_for_secfq1, ENN );

	wire SC_inv_for_secfq1;

	not MGM_BG_3( SC_inv_for_secfq1, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, ENN_inv_for_secfq1, SC_inv_for_secfq1, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, ENN_inv_for_secfq1, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC_inv_for_secfq1, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_secfq1, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module secfq2_func( Q, CDN, CPN, D, ENN, SC, SD, notifier );
input CDN, CPN, D, ENN, SC, SD, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire ENN_inv_for_secfq2;

	not MGM_BG_2( ENN_inv_for_secfq2, ENN );

	wire SC_inv_for_secfq2;

	not MGM_BG_3( SC_inv_for_secfq2, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, ENN_inv_for_secfq2, SC_inv_for_secfq2, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, ENN_inv_for_secfq2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC_inv_for_secfq2, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_secfq2, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module secfq4_func( Q, CDN, CPN, D, ENN, SC, SD, notifier );
input CDN, CPN, D, ENN, SC, SD, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	supply0 MGM_P0;

	not MGM_BG_1( MGM_C0, CDN );

	wire ENN_inv_for_secfq4;

	not MGM_BG_2( ENN_inv_for_secfq4, ENN );

	wire SC_inv_for_secfq4;

	not MGM_BG_3( SC_inv_for_secfq4, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, ENN_inv_for_secfq4, SC_inv_for_secfq4, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, ENN_inv_for_secfq4, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC_inv_for_secfq4, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_secfq4, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module secrq1_func( Q, CDN, CP, D, ENN, SC, SD, notifier );
input CDN, CP, D, ENN, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire ENN_inv_for_secrq1;

	not MGM_BG_1( ENN_inv_for_secrq1, ENN );

	wire SC_inv_for_secrq1;

	not MGM_BG_2( SC_inv_for_secrq1, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_secrq1, SC_inv_for_secrq1, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, ENN_inv_for_secrq1, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC_inv_for_secrq1, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_6( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_7( MGM_D0_row5, SC_inv_for_secrq1, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_8( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_9( MGM_D0_row7, SC, SD );

	or MGM_BG_10( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_11( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module secrq2_func( Q, CDN, CP, D, ENN, SC, SD, notifier );
input CDN, CP, D, ENN, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire ENN_inv_for_secrq2;

	not MGM_BG_1( ENN_inv_for_secrq2, ENN );

	wire SC_inv_for_secrq2;

	not MGM_BG_2( SC_inv_for_secrq2, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_secrq2, SC_inv_for_secrq2, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, ENN_inv_for_secrq2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC_inv_for_secrq2, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_6( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_7( MGM_D0_row5, SC_inv_for_secrq2, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_8( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_9( MGM_D0_row7, SC, SD );

	or MGM_BG_10( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_11( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module secrq4_func( Q, CDN, CP, D, ENN, SC, SD, notifier );
input CDN, CP, D, ENN, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	not MGM_BG_0( MGM_C0, CDN );

	wire ENN_inv_for_secrq4;

	not MGM_BG_1( ENN_inv_for_secrq4, ENN );

	wire SC_inv_for_secrq4;

	not MGM_BG_2( SC_inv_for_secrq4, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_secrq4, SC_inv_for_secrq4, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, ENN_inv_for_secrq4, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC_inv_for_secrq4, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_6( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_7( MGM_D0_row5, SC_inv_for_secrq4, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_8( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_9( MGM_D0_row7, SC, SD );

	or MGM_BG_10( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_11( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module senrb1_func( Q, QN, D, SD, CP, ENN, SC, notifier );
input CP, D, ENN, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_senrb1;

	not MGM_BG_0( ENN_inv_for_senrb1, ENN );

	wire SC_inv_for_senrb1;

	not MGM_BG_1( SC_inv_for_senrb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_senrb1, SC_inv_for_senrb1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, ENN_inv_for_senrb1, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC_inv_for_senrb1, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_5( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_6( MGM_D0_row5, SC_inv_for_senrb1, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_7( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_8( MGM_D0_row7, SC, SD );

	or MGM_BG_9( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_10( Q, IQ );

	buf MGM_BG_11( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module senrb2_func( Q, QN, D, SD, CP, ENN, SC, notifier );
input CP, D, ENN, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_senrb2;

	not MGM_BG_0( ENN_inv_for_senrb2, ENN );

	wire SC_inv_for_senrb2;

	not MGM_BG_1( SC_inv_for_senrb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_senrb2, SC_inv_for_senrb2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, ENN_inv_for_senrb2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC_inv_for_senrb2, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_5( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_6( MGM_D0_row5, SC_inv_for_senrb2, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_7( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_8( MGM_D0_row7, SC, SD );

	or MGM_BG_9( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_10( Q, IQ );

	buf MGM_BG_11( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module senrb4_func( Q, QN, D, SD, CP, ENN, SC, notifier );
input CP, D, ENN, SC, SD, notifier;
output Q, QN;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_senrb4;

	not MGM_BG_0( ENN_inv_for_senrb4, ENN );

	wire SC_inv_for_senrb4;

	not MGM_BG_1( SC_inv_for_senrb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_senrb4, SC_inv_for_senrb4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, ENN_inv_for_senrb4, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC_inv_for_senrb4, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_5( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_6( MGM_D0_row5, SC_inv_for_senrb4, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_7( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_8( MGM_D0_row7, SC, SD );

	or MGM_BG_9( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_10( Q, IQ );

	buf MGM_BG_11( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module senrq1_func( Q, CP, D, ENN, SC, SD, notifier );
input CP, D, ENN, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_senrq1;

	not MGM_BG_0( ENN_inv_for_senrq1, ENN );

	wire SC_inv_for_senrq1;

	not MGM_BG_1( SC_inv_for_senrq1, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_senrq1, SC_inv_for_senrq1, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, ENN_inv_for_senrq1, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC_inv_for_senrq1, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_5( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_6( MGM_D0_row5, SC_inv_for_senrq1, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_7( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_8( MGM_D0_row7, SC, SD );

	or MGM_BG_9( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_10( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module senrq2_func( Q, CP, D, ENN, SC, SD, notifier );
input CP, D, ENN, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_senrq2;

	not MGM_BG_0( ENN_inv_for_senrq2, ENN );

	wire SC_inv_for_senrq2;

	not MGM_BG_1( SC_inv_for_senrq2, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_senrq2, SC_inv_for_senrq2, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, ENN_inv_for_senrq2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC_inv_for_senrq2, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_5( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_6( MGM_D0_row5, SC_inv_for_senrq2, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_7( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_8( MGM_D0_row7, SC, SD );

	or MGM_BG_9( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_10( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module senrq4_func( Q, CP, D, ENN, SC, SD, notifier );
input CP, D, ENN, SC, SD, notifier;
output Q;

	supply0 MGM_P0;

	supply0 MGM_C0;

	wire ENN_inv_for_senrq4;

	not MGM_BG_0( ENN_inv_for_senrq4, ENN );

	wire SC_inv_for_senrq4;

	not MGM_BG_1( SC_inv_for_senrq4, SC );

	wire MGM_D0_row1;

	and MGM_BG_2( MGM_D0_row1, ENN_inv_for_senrq4, SC_inv_for_senrq4, D );

	wire MGM_D0_row2;

	and MGM_BG_3( MGM_D0_row2, ENN_inv_for_senrq4, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_4( MGM_D0_row3, SC_inv_for_senrq4, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_5( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_6( MGM_D0_row5, SC_inv_for_senrq4, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_7( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_8( MGM_D0_row7, SC, SD );

	or MGM_BG_9( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_10( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sepfq1_func( Q, CPN, D, ENN, SC, SD, SDN, notifier );
input CPN, D, ENN, SC, SD, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_sepfq1;

	not MGM_BG_2( ENN_inv_for_sepfq1, ENN );

	wire SC_inv_for_sepfq1;

	not MGM_BG_3( SC_inv_for_sepfq1, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, ENN_inv_for_sepfq1, SC_inv_for_sepfq1, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, ENN_inv_for_sepfq1, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC_inv_for_sepfq1, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_sepfq1, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sepfq2_func( Q, CPN, D, ENN, SC, SD, SDN, notifier );
input CPN, D, ENN, SC, SD, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_sepfq2;

	not MGM_BG_2( ENN_inv_for_sepfq2, ENN );

	wire SC_inv_for_sepfq2;

	not MGM_BG_3( SC_inv_for_sepfq2, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, ENN_inv_for_sepfq2, SC_inv_for_sepfq2, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, ENN_inv_for_sepfq2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC_inv_for_sepfq2, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_sepfq2, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module sepfq4_func( Q, CPN, D, ENN, SC, SD, SDN, notifier );
input CPN, D, ENN, SC, SD, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_CLK0, CPN );

	not MGM_BG_1( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_sepfq4;

	not MGM_BG_2( ENN_inv_for_sepfq4, ENN );

	wire SC_inv_for_sepfq4;

	not MGM_BG_3( SC_inv_for_sepfq4, SC );

	wire MGM_D0_row1;

	and MGM_BG_4( MGM_D0_row1, ENN_inv_for_sepfq4, SC_inv_for_sepfq4, D );

	wire MGM_D0_row2;

	and MGM_BG_5( MGM_D0_row2, ENN_inv_for_sepfq4, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, SC_inv_for_sepfq4, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_sepfq4, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, MGM_CLK0, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module seprq1_func( Q, CP, D, ENN, SC, SD, SDN, notifier );
input CP, D, ENN, SC, SD, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_seprq1;

	not MGM_BG_1( ENN_inv_for_seprq1, ENN );

	wire SC_inv_for_seprq1;

	not MGM_BG_2( SC_inv_for_seprq1, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_seprq1, SC_inv_for_seprq1, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, ENN_inv_for_seprq1, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC_inv_for_seprq1, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_6( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_7( MGM_D0_row5, SC_inv_for_seprq1, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_8( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_9( MGM_D0_row7, SC, SD );

	or MGM_BG_10( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_11( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module seprq2_func( Q, CP, D, ENN, SC, SD, SDN, notifier );
input CP, D, ENN, SC, SD, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_seprq2;

	not MGM_BG_1( ENN_inv_for_seprq2, ENN );

	wire SC_inv_for_seprq2;

	not MGM_BG_2( SC_inv_for_seprq2, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_seprq2, SC_inv_for_seprq2, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, ENN_inv_for_seprq2, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC_inv_for_seprq2, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_6( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_7( MGM_D0_row5, SC_inv_for_seprq2, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_8( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_9( MGM_D0_row7, SC, SD );

	or MGM_BG_10( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_11( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module seprq4_func( Q, CP, D, ENN, SC, SD, SDN, notifier );
input CP, D, ENN, SC, SD, SDN, notifier;
output Q;

	not MGM_BG_0( MGM_P0, SDN );

	supply0 MGM_C0;

	wire ENN_inv_for_seprq4;

	not MGM_BG_1( ENN_inv_for_seprq4, ENN );

	wire SC_inv_for_seprq4;

	not MGM_BG_2( SC_inv_for_seprq4, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, ENN_inv_for_seprq4, SC_inv_for_seprq4, D );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, ENN_inv_for_seprq4, D, SD );

	wire MGM_D0_row3;

	and MGM_BG_5( MGM_D0_row3, SC_inv_for_seprq4, D, IQ );

	wire MGM_D0_row4;

	and MGM_BG_6( MGM_D0_row4, D, IQ, SD );

	wire MGM_D0_row5;

	and MGM_BG_7( MGM_D0_row5, SC_inv_for_seprq4, ENN, IQ );

	wire MGM_D0_row6;

	and MGM_BG_8( MGM_D0_row6, ENN, IQ, SD );

	wire MGM_D0_row7;

	and MGM_BG_9( MGM_D0_row7, SC, SD );

	or MGM_BG_10( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_N_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_11( Q, IQ );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module skbrb1_func( Q, QN, CP, CDN, J, KZ, SC, SD, SDN, notifier );
input CDN, CP, J, KZ, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_skbrb1;

	not MGM_BG_2( SC_inv_for_skbrb1, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_skbrb1, IQ, KZ );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, IQ, KZ, SD );

	wire IQ_inv_for_skbrb1;

	not MGM_BG_5( IQ_inv_for_skbrb1, IQ );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, IQ_inv_for_skbrb1, SC_inv_for_skbrb1, J );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, IQ_inv_for_skbrb1, J, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_skbrb1, J, KZ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, J, KZ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

	buf MGM_BG_13( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module skbrb2_func( Q, QN, CP, CDN, J, KZ, SC, SD, SDN, notifier );
input CDN, CP, J, KZ, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_skbrb2;

	not MGM_BG_2( SC_inv_for_skbrb2, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_skbrb2, IQ, KZ );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, IQ, KZ, SD );

	wire IQ_inv_for_skbrb2;

	not MGM_BG_5( IQ_inv_for_skbrb2, IQ );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, IQ_inv_for_skbrb2, SC_inv_for_skbrb2, J );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, IQ_inv_for_skbrb2, J, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_skbrb2, J, KZ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, J, KZ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

	buf MGM_BG_13( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module skbrb4_func( Q, QN, CP, CDN, J, KZ, SC, SD, SDN, notifier );
input CDN, CP, J, KZ, SC, SD, SDN, notifier;
output Q, QN;

	not MGM_BG_0( MGM_P0, SDN );

	not MGM_BG_1( MGM_C0, CDN );

	wire SC_inv_for_skbrb4;

	not MGM_BG_2( SC_inv_for_skbrb4, SC );

	wire MGM_D0_row1;

	and MGM_BG_3( MGM_D0_row1, SC_inv_for_skbrb4, IQ, KZ );

	wire MGM_D0_row2;

	and MGM_BG_4( MGM_D0_row2, IQ, KZ, SD );

	wire IQ_inv_for_skbrb4;

	not MGM_BG_5( IQ_inv_for_skbrb4, IQ );

	wire MGM_D0_row3;

	and MGM_BG_6( MGM_D0_row3, IQ_inv_for_skbrb4, SC_inv_for_skbrb4, J );

	wire MGM_D0_row4;

	and MGM_BG_7( MGM_D0_row4, IQ_inv_for_skbrb4, J, SD );

	wire MGM_D0_row5;

	and MGM_BG_8( MGM_D0_row5, SC_inv_for_skbrb4, J, KZ );

	wire MGM_D0_row6;

	and MGM_BG_9( MGM_D0_row6, J, KZ, SD );

	wire MGM_D0_row7;

	and MGM_BG_10( MGM_D0_row7, SC, SD );

	or MGM_BG_11( MGM_D0, MGM_D0_row1, MGM_D0_row2, MGM_D0_row3, MGM_D0_row4, MGM_D0_row5, MGM_D0_row6, MGM_D0_row7 );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_FF_UDP( IQ, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_FF_UDP( IQN, MGM_C0, MGM_P0, CP, MGM_D0, notifier );

	buf MGM_BG_12( Q, IQ );

	buf MGM_BG_13( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slbhb1_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, SDN, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, CDN, SDN, notifier; 
table 
// D E SC SD CDN SDN notifier : Q_reg : Q_reg
  ?  1  ?  ?  0  0  ?   : ?   : 1;
  ?  0  ?  ?  0  0  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?   : ?   : 0;
  ?  0  ?  ?  0  1  ?   : ?   : 0;
  ?  1  ?  ?  1  0  ?   : ?   : 1;
  ?  0  ?  ?  1  0  ?   : ?   : 1;
  ?  1  1  0  1  1  ?   : ?   : 0;
  ?  1  1  1  1  1  ?   : ?   : 1;
  0  1  0  ?  1  1  ?   : ?   : 0;
  1  1  0  ?  1  1  ?   : ?   : 1;
  ?  0  ?  ?  1  1  ?   : 0   : -;
  ?  0  ?  ?  1  1  ?   : 1   : -;

endtable
endprimitive


primitive slbhb1_statetable_QN_reg(QN_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);
output QN_reg;
reg QN_reg;
input D, E, SC, SD, CDN, SDN, Q_reg, notifier; 
table 
// D E SC SD CDN SDN Q_reg notifier : QN_reg : QN_reg
  ?  1  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?  ?   : ?   : 1;
  ?  0  ?  ?  0  1  ?  ?   : ?   : 1;
  ?  1  ?  ?  1  0  ?  ?   : ?   : 0;
  ?  0  ?  ?  1  0  ?  ?   : ?   : 0;
  ?  1  1  0  1  1  ?  ?   : ?   : 1;
  ?  1  1  1  1  1  ?  ?   : ?   : 0;
  0  1  0  ?  1  1  ?  ?   : ?   : 1;
  1  1  0  ?  1  1  ?  ?   : ?   : 0;
  ?  0  ?  ?  1  1  0  ?   : ?   : -;
  ?  0  ?  ?  1  1  1  ?   : ?   : -;

endtable
endprimitive


primitive slbhb1_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, CDN, SDN, Q_reg, notifier; 
table 
// D E SC SD CDN SDN Q_reg notifier : SO_reg : SO_reg
  ?  1  ?  ?  0  0  ?  ?   : ?   : -;
  ?  0  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?  ?   : ?   : -;
  ?  0  ?  ?  0  1  ?  ?   : ?   : 0;
  ?  1  ?  ?  1  0  ?  ?   : ?   : -;
  ?  0  ?  ?  1  0  ?  ?   : ?   : 1;
  ?  1  1  0  1  1  ?  ?   : ?   : -;
  ?  1  1  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  1  1  ?  ?   : ?   : -;
  1  1  0  ?  1  1  ?  ?   : ?   : -;
  ?  0  ?  ?  1  1  0  ?   : ?   : 0;
  ?  0  ?  ?  1  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slbhb1_func( SO, Q, QN, CDN, D, E, SC, SD, SDN, notifier );
input CDN, D, E, SC, SD, SDN, notifier;
output Q, QN, SO;

	slbhb1_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, SDN, notifier);

	slbhb1_statetable_QN_reg(QN_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);

	slbhb1_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( QN, QN_reg );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slbhb2_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, SDN, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, CDN, SDN, notifier; 
table 
// D E SC SD CDN SDN notifier : Q_reg : Q_reg
  ?  1  ?  ?  0  0  ?   : ?   : 1;
  ?  0  ?  ?  0  0  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?   : ?   : 0;
  ?  0  ?  ?  0  1  ?   : ?   : 0;
  ?  1  ?  ?  1  0  ?   : ?   : 1;
  ?  0  ?  ?  1  0  ?   : ?   : 1;
  ?  1  1  0  1  1  ?   : ?   : 0;
  ?  1  1  1  1  1  ?   : ?   : 1;
  0  1  0  ?  1  1  ?   : ?   : 0;
  1  1  0  ?  1  1  ?   : ?   : 1;
  ?  0  ?  ?  1  1  ?   : 0   : -;
  ?  0  ?  ?  1  1  ?   : 1   : -;

endtable
endprimitive


primitive slbhb2_statetable_QN_reg(QN_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);
output QN_reg;
reg QN_reg;
input D, E, SC, SD, CDN, SDN, Q_reg, notifier; 
table 
// D E SC SD CDN SDN Q_reg notifier : QN_reg : QN_reg
  ?  1  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?  ?   : ?   : 1;
  ?  0  ?  ?  0  1  ?  ?   : ?   : 1;
  ?  1  ?  ?  1  0  ?  ?   : ?   : 0;
  ?  0  ?  ?  1  0  ?  ?   : ?   : 0;
  ?  1  1  0  1  1  ?  ?   : ?   : 1;
  ?  1  1  1  1  1  ?  ?   : ?   : 0;
  0  1  0  ?  1  1  ?  ?   : ?   : 1;
  1  1  0  ?  1  1  ?  ?   : ?   : 0;
  ?  0  ?  ?  1  1  0  ?   : ?   : -;
  ?  0  ?  ?  1  1  1  ?   : ?   : -;

endtable
endprimitive


primitive slbhb2_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, CDN, SDN, Q_reg, notifier; 
table 
// D E SC SD CDN SDN Q_reg notifier : SO_reg : SO_reg
  ?  1  ?  ?  0  0  ?  ?   : ?   : -;
  ?  0  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?  ?   : ?   : -;
  ?  0  ?  ?  0  1  ?  ?   : ?   : 0;
  ?  1  ?  ?  1  0  ?  ?   : ?   : -;
  ?  0  ?  ?  1  0  ?  ?   : ?   : 1;
  ?  1  1  0  1  1  ?  ?   : ?   : -;
  ?  1  1  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  1  1  ?  ?   : ?   : -;
  1  1  0  ?  1  1  ?  ?   : ?   : -;
  ?  0  ?  ?  1  1  0  ?   : ?   : 0;
  ?  0  ?  ?  1  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slbhb2_func( SO, Q, QN, CDN, D, E, SC, SD, SDN, notifier );
input CDN, D, E, SC, SD, SDN, notifier;
output Q, QN, SO;

	slbhb2_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, SDN, notifier);

	slbhb2_statetable_QN_reg(QN_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);

	slbhb2_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( QN, QN_reg );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slbhb4_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, SDN, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, CDN, SDN, notifier; 
table 
// D E SC SD CDN SDN notifier : Q_reg : Q_reg
  ?  1  ?  ?  0  0  ?   : ?   : 1;
  ?  0  ?  ?  0  0  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?   : ?   : 0;
  ?  0  ?  ?  0  1  ?   : ?   : 0;
  ?  1  ?  ?  1  0  ?   : ?   : 1;
  ?  0  ?  ?  1  0  ?   : ?   : 1;
  ?  1  1  0  1  1  ?   : ?   : 0;
  ?  1  1  1  1  1  ?   : ?   : 1;
  0  1  0  ?  1  1  ?   : ?   : 0;
  1  1  0  ?  1  1  ?   : ?   : 1;
  ?  0  ?  ?  1  1  ?   : 0   : -;
  ?  0  ?  ?  1  1  ?   : 1   : -;

endtable
endprimitive


primitive slbhb4_statetable_QN_reg(QN_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);
output QN_reg;
reg QN_reg;
input D, E, SC, SD, CDN, SDN, Q_reg, notifier; 
table 
// D E SC SD CDN SDN Q_reg notifier : QN_reg : QN_reg
  ?  1  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?  ?   : ?   : 1;
  ?  0  ?  ?  0  1  ?  ?   : ?   : 1;
  ?  1  ?  ?  1  0  ?  ?   : ?   : 0;
  ?  0  ?  ?  1  0  ?  ?   : ?   : 0;
  ?  1  1  0  1  1  ?  ?   : ?   : 1;
  ?  1  1  1  1  1  ?  ?   : ?   : 0;
  0  1  0  ?  1  1  ?  ?   : ?   : 1;
  1  1  0  ?  1  1  ?  ?   : ?   : 0;
  ?  0  ?  ?  1  1  0  ?   : ?   : -;
  ?  0  ?  ?  1  1  1  ?   : ?   : -;

endtable
endprimitive


primitive slbhb4_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, CDN, SDN, Q_reg, notifier; 
table 
// D E SC SD CDN SDN Q_reg notifier : SO_reg : SO_reg
  ?  1  ?  ?  0  0  ?  ?   : ?   : -;
  ?  0  ?  ?  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  0  1  ?  ?   : ?   : -;
  ?  0  ?  ?  0  1  ?  ?   : ?   : 0;
  ?  1  ?  ?  1  0  ?  ?   : ?   : -;
  ?  0  ?  ?  1  0  ?  ?   : ?   : 1;
  ?  1  1  0  1  1  ?  ?   : ?   : -;
  ?  1  1  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  1  1  ?  ?   : ?   : -;
  1  1  0  ?  1  1  ?  ?   : ?   : -;
  ?  0  ?  ?  1  1  0  ?   : ?   : 0;
  ?  0  ?  ?  1  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slbhb4_func( SO, Q, QN, CDN, D, E, SC, SD, SDN, notifier );
input CDN, D, E, SC, SD, SDN, notifier;
output Q, QN, SO;

	slbhb4_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, SDN, notifier);

	slbhb4_statetable_QN_reg(QN_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);

	slbhb4_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, SDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( QN, QN_reg );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slchq1_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, CDN, notifier; 
table 
// D E SC SD CDN notifier : Q_reg : Q_reg
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  1  1  0  1  ?   : ?   : 0;
  ?  1  1  1  1  ?   : ?   : 1;
  0  1  0  ?  1  ?   : ?   : 0;
  1  1  0  ?  1  ?   : ?   : 1;
  ?  0  ?  ?  1  ?   : 0   : -;
  ?  0  ?  ?  1  ?   : 1   : -;

endtable
endprimitive


primitive slchq1_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, CDN, Q_reg, notifier; 
table 
// D E SC SD CDN Q_reg notifier : SO_reg : SO_reg
  ?  1  ?  ?  0  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?  ?   : ?   : 0;
  ?  1  1  0  1  ?  ?   : ?   : -;
  ?  1  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  1  ?  ?   : ?   : -;
  1  1  0  ?  1  ?  ?   : ?   : -;
  ?  0  ?  ?  1  0  ?   : ?   : 0;
  ?  0  ?  ?  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slchq1_func( SO, Q, CDN, D, E, SC, SD, notifier );
input CDN, D, E, SC, SD, notifier;
output Q, SO;

	slchq1_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, notifier);

	slchq1_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slchq2_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, CDN, notifier; 
table 
// D E SC SD CDN notifier : Q_reg : Q_reg
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  1  1  0  1  ?   : ?   : 0;
  ?  1  1  1  1  ?   : ?   : 1;
  0  1  0  ?  1  ?   : ?   : 0;
  1  1  0  ?  1  ?   : ?   : 1;
  ?  0  ?  ?  1  ?   : 0   : -;
  ?  0  ?  ?  1  ?   : 1   : -;

endtable
endprimitive


primitive slchq2_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, CDN, Q_reg, notifier; 
table 
// D E SC SD CDN Q_reg notifier : SO_reg : SO_reg
  ?  1  ?  ?  0  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?  ?   : ?   : 0;
  ?  1  1  0  1  ?  ?   : ?   : -;
  ?  1  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  1  ?  ?   : ?   : -;
  1  1  0  ?  1  ?  ?   : ?   : -;
  ?  0  ?  ?  1  0  ?   : ?   : 0;
  ?  0  ?  ?  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slchq2_func( SO, Q, CDN, D, E, SC, SD, notifier );
input CDN, D, E, SC, SD, notifier;
output Q, SO;

	slchq2_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, notifier);

	slchq2_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slchq4_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, CDN, notifier; 
table 
// D E SC SD CDN notifier : Q_reg : Q_reg
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  1  1  0  1  ?   : ?   : 0;
  ?  1  1  1  1  ?   : ?   : 1;
  0  1  0  ?  1  ?   : ?   : 0;
  1  1  0  ?  1  ?   : ?   : 1;
  ?  0  ?  ?  1  ?   : 0   : -;
  ?  0  ?  ?  1  ?   : 1   : -;

endtable
endprimitive


primitive slchq4_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, CDN, Q_reg, notifier; 
table 
// D E SC SD CDN Q_reg notifier : SO_reg : SO_reg
  ?  1  ?  ?  0  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?  ?   : ?   : 0;
  ?  1  1  0  1  ?  ?   : ?   : -;
  ?  1  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  1  ?  ?   : ?   : -;
  1  1  0  ?  1  ?  ?   : ?   : -;
  ?  0  ?  ?  1  0  ?   : ?   : 0;
  ?  0  ?  ?  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slchq4_func( SO, Q, CDN, D, E, SC, SD, notifier );
input CDN, D, E, SC, SD, notifier;
output Q, SO;

	slchq4_statetable_Q_reg(Q_reg, D, E, SC, SD, CDN, notifier);

	slchq4_statetable_SO_reg(SO_reg, D, E, SC, SD, CDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slclq1_statetable_Q_reg(Q_reg, D, EN, SC, SD, CDN, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, CDN, notifier; 
table 
// D EN SC SD CDN notifier : Q_reg : Q_reg
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  0  1  0  1  ?   : ?   : 0;
  ?  0  1  1  1  ?   : ?   : 1;
  0  0  0  ?  1  ?   : ?   : 0;
  1  0  0  ?  1  ?   : ?   : 1;
  ?  1  ?  ?  1  ?   : 0   : -;
  ?  1  ?  ?  1  ?   : 1   : -;

endtable
endprimitive


primitive slclq1_statetable_SO_reg(SO_reg, D, EN, SC, SD, CDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, CDN, Q_reg, notifier; 
table 
// D EN SC SD CDN Q_reg notifier : SO_reg : SO_reg
  ?  0  ?  ?  0  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?  ?   : ?   : 0;
  ?  0  1  0  1  ?  ?   : ?   : -;
  ?  0  1  1  1  ?  ?   : ?   : -;
  0  0  0  ?  1  ?  ?   : ?   : -;
  1  0  0  ?  1  ?  ?   : ?   : -;
  ?  1  ?  ?  1  0  ?   : ?   : 0;
  ?  1  ?  ?  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slclq1_func( SO, Q, CDN, D, EN, SC, SD, notifier );
input CDN, D, EN, SC, SD, notifier;
output Q, SO;

	slclq1_statetable_Q_reg(Q_reg, D, EN, SC, SD, CDN, notifier);

	slclq1_statetable_SO_reg(SO_reg, D, EN, SC, SD, CDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slclq2_statetable_Q_reg(Q_reg, D, EN, SC, SD, CDN, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, CDN, notifier; 
table 
// D EN SC SD CDN notifier : Q_reg : Q_reg
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  0  1  0  1  ?   : ?   : 0;
  ?  0  1  1  1  ?   : ?   : 1;
  0  0  0  ?  1  ?   : ?   : 0;
  1  0  0  ?  1  ?   : ?   : 1;
  ?  1  ?  ?  1  ?   : 0   : -;
  ?  1  ?  ?  1  ?   : 1   : -;

endtable
endprimitive


primitive slclq2_statetable_SO_reg(SO_reg, D, EN, SC, SD, CDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, CDN, Q_reg, notifier; 
table 
// D EN SC SD CDN Q_reg notifier : SO_reg : SO_reg
  ?  0  ?  ?  0  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?  ?   : ?   : 0;
  ?  0  1  0  1  ?  ?   : ?   : -;
  ?  0  1  1  1  ?  ?   : ?   : -;
  0  0  0  ?  1  ?  ?   : ?   : -;
  1  0  0  ?  1  ?  ?   : ?   : -;
  ?  1  ?  ?  1  0  ?   : ?   : 0;
  ?  1  ?  ?  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slclq2_func( SO, Q, CDN, D, EN, SC, SD, notifier );
input CDN, D, EN, SC, SD, notifier;
output Q, SO;

	slclq2_statetable_Q_reg(Q_reg, D, EN, SC, SD, CDN, notifier);

	slclq2_statetable_SO_reg(SO_reg, D, EN, SC, SD, CDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slclq4_statetable_Q_reg(Q_reg, D, EN, SC, SD, CDN, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, CDN, notifier; 
table 
// D EN SC SD CDN notifier : Q_reg : Q_reg
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  0  1  0  1  ?   : ?   : 0;
  ?  0  1  1  1  ?   : ?   : 1;
  0  0  0  ?  1  ?   : ?   : 0;
  1  0  0  ?  1  ?   : ?   : 1;
  ?  1  ?  ?  1  ?   : 0   : -;
  ?  1  ?  ?  1  ?   : 1   : -;

endtable
endprimitive


primitive slclq4_statetable_SO_reg(SO_reg, D, EN, SC, SD, CDN, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, CDN, Q_reg, notifier; 
table 
// D EN SC SD CDN Q_reg notifier : SO_reg : SO_reg
  ?  0  ?  ?  0  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?  ?   : ?   : 0;
  ?  0  1  0  1  ?  ?   : ?   : -;
  ?  0  1  1  1  ?  ?   : ?   : -;
  0  0  0  ?  1  ?  ?   : ?   : -;
  1  0  0  ?  1  ?  ?   : ?   : -;
  ?  1  ?  ?  1  0  ?   : ?   : 0;
  ?  1  ?  ?  1  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slclq4_func( SO, Q, CDN, D, EN, SC, SD, notifier );
input CDN, D, EN, SC, SD, notifier;
output Q, SO;

	slclq4_statetable_Q_reg(Q_reg, D, EN, SC, SD, CDN, notifier);

	slclq4_statetable_SO_reg(SO_reg, D, EN, SC, SD, CDN, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhb1_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Q_reg : Q_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhb1_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Q_reg, notifier; 
table 
// D E SC SD Q_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnhb1_func( SO, Q, QN, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output Q, QN, SO;

	slnhb1_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);

	slnhb1_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	not MGM_BG_1( QN, Q );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhb2_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Q_reg : Q_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhb2_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Q_reg, notifier; 
table 
// D E SC SD Q_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnhb2_func( SO, Q, QN, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output Q, QN, SO;

	slnhb2_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);

	slnhb2_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	not MGM_BG_1( QN, Q );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhb4_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Q_reg : Q_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhb4_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Q_reg, notifier; 
table 
// D E SC SD Q_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnhb4_func( SO, Q, QN, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output Q, QN, SO;

	slnhb4_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);

	slnhb4_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	not MGM_BG_1( QN, Q );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhn1_statetable_QN_reg(QN_reg, D, E, SC, SD, notifier);
output QN_reg;
reg QN_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : QN_reg : QN_reg
  ?  1  1  0  ?   : ?   : 1;
  ?  1  1  1  ?   : ?   : 0;
  0  1  0  ?  ?   : ?   : 1;
  1  1  0  ?  ?   : ?   : 0;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhn1_statetable_SO_reg(SO_reg, D, E, SC, SD, QN_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, QN_reg, notifier; 
table 
// D E SC SD QN_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 1;
  ?  0  ?  ?  1  ?   : ?   : 0;

endtable
endprimitive


`celldefine
module slnhn1_func( SO, QN, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output QN, SO;

	slnhn1_statetable_QN_reg(QN_reg, D, E, SC, SD, notifier);

	slnhn1_statetable_SO_reg(SO_reg, D, E, SC, SD, QN_reg, notifier);

	buf MGM_BG_0( QN, QN_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhn2_statetable_QN_reg(QN_reg, D, E, SC, SD, notifier);
output QN_reg;
reg QN_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : QN_reg : QN_reg
  ?  1  1  0  ?   : ?   : 1;
  ?  1  1  1  ?   : ?   : 0;
  0  1  0  ?  ?   : ?   : 1;
  1  1  0  ?  ?   : ?   : 0;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhn2_statetable_SO_reg(SO_reg, D, E, SC, SD, QN_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, QN_reg, notifier; 
table 
// D E SC SD QN_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 1;
  ?  0  ?  ?  1  ?   : ?   : 0;

endtable
endprimitive


`celldefine
module slnhn2_func( SO, QN, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output QN, SO;

	slnhn2_statetable_QN_reg(QN_reg, D, E, SC, SD, notifier);

	slnhn2_statetable_SO_reg(SO_reg, D, E, SC, SD, QN_reg, notifier);

	buf MGM_BG_0( QN, QN_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhn4_statetable_QN_reg(QN_reg, D, E, SC, SD, notifier);
output QN_reg;
reg QN_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : QN_reg : QN_reg
  ?  1  1  0  ?   : ?   : 1;
  ?  1  1  1  ?   : ?   : 0;
  0  1  0  ?  ?   : ?   : 1;
  1  1  0  ?  ?   : ?   : 0;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhn4_statetable_SO_reg(SO_reg, D, E, SC, SD, QN_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, QN_reg, notifier; 
table 
// D E SC SD QN_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 1;
  ?  0  ?  ?  1  ?   : ?   : 0;

endtable
endprimitive


`celldefine
module slnhn4_func( SO, QN, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output QN, SO;

	slnhn4_statetable_QN_reg(QN_reg, D, E, SC, SD, notifier);

	slnhn4_statetable_SO_reg(SO_reg, D, E, SC, SD, QN_reg, notifier);

	buf MGM_BG_0( QN, QN_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhq1_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Q_reg : Q_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhq1_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Q_reg, notifier; 
table 
// D E SC SD Q_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnhq1_func( SO, Q, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output Q, SO;

	slnhq1_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);

	slnhq1_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhq2_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Q_reg : Q_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhq2_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Q_reg, notifier; 
table 
// D E SC SD Q_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnhq2_func( SO, Q, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output Q, SO;

	slnhq2_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);

	slnhq2_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnhq4_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Q_reg : Q_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnhq4_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Q_reg, notifier; 
table 
// D E SC SD Q_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnhq4_func( SO, Q, D, E, SC, SD, notifier );
input D, E, SC, SD, notifier;
output Q, SO;

	slnhq4_statetable_Q_reg(Q_reg, D, E, SC, SD, notifier);

	slnhq4_statetable_SO_reg(SO_reg, D, E, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnht1_statetable_Z_reg(Z_reg, D, E, SC, SD, notifier);
output Z_reg;
reg Z_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Z_reg : Z_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnht1_statetable_SO_reg(SO_reg, D, E, SC, SD, Z_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Z_reg, notifier; 
table 
// D E SC SD Z_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnht1_func( SO, Z, D, E, OE, SC, SD, notifier );
input D, E, OE, SC, SD, notifier;
output SO, Z;

	slnht1_statetable_Z_reg(Z_reg, D, E, SC, SD, notifier);

	slnht1_statetable_SO_reg(SO_reg, D, E, SC, SD, Z_reg, notifier);

	buf MGM_BG_0( SO, SO_reg );

	wire MGM_WB_0;

	wire MGM_WB_1;

	and MGM_BG_1( MGM_WB_0, OE, Z_reg );

	not MGM_BG_2( MGM_WB_1, OE );

	bufif0 MGM_BG_3( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnht2_statetable_Z_reg(Z_reg, D, E, SC, SD, notifier);
output Z_reg;
reg Z_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Z_reg : Z_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnht2_statetable_SO_reg(SO_reg, D, E, SC, SD, Z_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Z_reg, notifier; 
table 
// D E SC SD Z_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnht2_func( SO, Z, D, E, OE, SC, SD, notifier );
input D, E, OE, SC, SD, notifier;
output SO, Z;

	slnht2_statetable_Z_reg(Z_reg, D, E, SC, SD, notifier);

	slnht2_statetable_SO_reg(SO_reg, D, E, SC, SD, Z_reg, notifier);

	buf MGM_BG_0( SO, SO_reg );

	wire MGM_WB_0;

	wire MGM_WB_1;

	and MGM_BG_1( MGM_WB_0, OE, Z_reg );

	not MGM_BG_2( MGM_WB_1, OE );

	bufif0 MGM_BG_3( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnht4_statetable_Z_reg(Z_reg, D, E, SC, SD, notifier);
output Z_reg;
reg Z_reg;
input D, E, SC, SD, notifier; 
table 
// D E SC SD notifier : Z_reg : Z_reg
  ?  1  1  0  ?   : ?   : 0;
  ?  1  1  1  ?   : ?   : 1;
  0  1  0  ?  ?   : ?   : 0;
  1  1  0  ?  ?   : ?   : 1;
  ?  0  ?  ?  ?   : 0   : -;
  ?  0  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnht4_statetable_SO_reg(SO_reg, D, E, SC, SD, Z_reg, notifier);
output SO_reg;
reg SO_reg;
input D, E, SC, SD, Z_reg, notifier; 
table 
// D E SC SD Z_reg notifier : SO_reg : SO_reg
  ?  1  1  0  ?  ?   : ?   : -;
  ?  1  1  1  ?  ?   : ?   : -;
  0  1  0  ?  ?  ?   : ?   : -;
  1  1  0  ?  ?  ?   : ?   : -;
  ?  0  ?  ?  0  ?   : ?   : 0;
  ?  0  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnht4_func( SO, Z, D, E, OE, SC, SD, notifier );
input D, E, OE, SC, SD, notifier;
output SO, Z;

	slnht4_statetable_Z_reg(Z_reg, D, E, SC, SD, notifier);

	slnht4_statetable_SO_reg(SO_reg, D, E, SC, SD, Z_reg, notifier);

	buf MGM_BG_0( SO, SO_reg );

	wire MGM_WB_0;

	wire MGM_WB_1;

	and MGM_BG_1( MGM_WB_0, OE, Z_reg );

	not MGM_BG_2( MGM_WB_1, OE );

	bufif0 MGM_BG_3( Z, MGM_WB_0,MGM_WB_1 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnlb1_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : Q_reg : Q_reg
  ?  0  1  0  ?   : ?   : 0;
  ?  0  1  1  ?   : ?   : 1;
  0  0  0  ?  ?   : ?   : 0;
  1  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnlb1_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, Q_reg, notifier; 
table 
// D EN SC SD Q_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnlb1_func( SO, Q, QN, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output Q, QN, SO;

	slnlb1_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);

	slnlb1_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	not MGM_BG_1( QN, Q );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnlb2_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : Q_reg : Q_reg
  ?  0  1  0  ?   : ?   : 0;
  ?  0  1  1  ?   : ?   : 1;
  0  0  0  ?  ?   : ?   : 0;
  1  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnlb2_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, Q_reg, notifier; 
table 
// D EN SC SD Q_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnlb2_func( SO, Q, QN, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output Q, QN, SO;

	slnlb2_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);

	slnlb2_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	not MGM_BG_1( QN, Q );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnlb4_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : Q_reg : Q_reg
  ?  0  1  0  ?   : ?   : 0;
  ?  0  1  1  ?   : ?   : 1;
  0  0  0  ?  ?   : ?   : 0;
  1  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnlb4_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, Q_reg, notifier; 
table 
// D EN SC SD Q_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnlb4_func( SO, Q, QN, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output Q, QN, SO;

	slnlb4_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);

	slnlb4_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	not MGM_BG_1( QN, Q );

	buf MGM_BG_2( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnln1_statetable_QN_reg(QN_reg, D, EN, SC, SD, notifier);
output QN_reg;
reg QN_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : QN_reg : QN_reg
  ?  0  1  0  ?   : ?   : 1;
  ?  0  1  1  ?   : ?   : 0;
  0  0  0  ?  ?   : ?   : 1;
  1  0  0  ?  ?   : ?   : 0;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnln1_statetable_SO_reg(SO_reg, D, EN, SC, SD, QN_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, QN_reg, notifier; 
table 
// D EN SC SD QN_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 1;
  ?  1  ?  ?  1  ?   : ?   : 0;

endtable
endprimitive


`celldefine
module slnln1_func( SO, QN, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output QN, SO;

	slnln1_statetable_QN_reg(QN_reg, D, EN, SC, SD, notifier);

	slnln1_statetable_SO_reg(SO_reg, D, EN, SC, SD, QN_reg, notifier);

	buf MGM_BG_0( QN, QN_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnln2_statetable_QN_reg(QN_reg, D, EN, SC, SD, notifier);
output QN_reg;
reg QN_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : QN_reg : QN_reg
  ?  0  1  0  ?   : ?   : 1;
  ?  0  1  1  ?   : ?   : 0;
  0  0  0  ?  ?   : ?   : 1;
  1  0  0  ?  ?   : ?   : 0;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnln2_statetable_SO_reg(SO_reg, D, EN, SC, SD, QN_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, QN_reg, notifier; 
table 
// D EN SC SD QN_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 1;
  ?  1  ?  ?  1  ?   : ?   : 0;

endtable
endprimitive


`celldefine
module slnln2_func( SO, QN, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output QN, SO;

	slnln2_statetable_QN_reg(QN_reg, D, EN, SC, SD, notifier);

	slnln2_statetable_SO_reg(SO_reg, D, EN, SC, SD, QN_reg, notifier);

	buf MGM_BG_0( QN, QN_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnln4_statetable_QN_reg(QN_reg, D, EN, SC, SD, notifier);
output QN_reg;
reg QN_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : QN_reg : QN_reg
  ?  0  1  0  ?   : ?   : 1;
  ?  0  1  1  ?   : ?   : 0;
  0  0  0  ?  ?   : ?   : 1;
  1  0  0  ?  ?   : ?   : 0;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnln4_statetable_SO_reg(SO_reg, D, EN, SC, SD, QN_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, QN_reg, notifier; 
table 
// D EN SC SD QN_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 1;
  ?  1  ?  ?  1  ?   : ?   : 0;

endtable
endprimitive


`celldefine
module slnln4_func( SO, QN, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output QN, SO;

	slnln4_statetable_QN_reg(QN_reg, D, EN, SC, SD, notifier);

	slnln4_statetable_SO_reg(SO_reg, D, EN, SC, SD, QN_reg, notifier);

	buf MGM_BG_0( QN, QN_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnlq1_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : Q_reg : Q_reg
  ?  0  1  0  ?   : ?   : 0;
  ?  0  1  1  ?   : ?   : 1;
  0  0  0  ?  ?   : ?   : 0;
  1  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnlq1_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, Q_reg, notifier; 
table 
// D EN SC SD Q_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnlq1_func( SO, Q, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output Q, SO;

	slnlq1_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);

	slnlq1_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnlq2_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : Q_reg : Q_reg
  ?  0  1  0  ?   : ?   : 0;
  ?  0  1  1  ?   : ?   : 1;
  0  0  0  ?  ?   : ?   : 0;
  1  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnlq2_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, Q_reg, notifier; 
table 
// D EN SC SD Q_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnlq2_func( SO, Q, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output Q, SO;

	slnlq2_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);

	slnlq2_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive slnlq4_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);
output Q_reg;
reg Q_reg;
input D, EN, SC, SD, notifier; 
table 
// D EN SC SD notifier : Q_reg : Q_reg
  ?  0  1  0  ?   : ?   : 0;
  ?  0  1  1  ?   : ?   : 1;
  0  0  0  ?  ?   : ?   : 0;
  1  0  0  ?  ?   : ?   : 1;
  ?  1  ?  ?  ?   : 0   : -;
  ?  1  ?  ?  ?   : 1   : -;

endtable
endprimitive


primitive slnlq4_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);
output SO_reg;
reg SO_reg;
input D, EN, SC, SD, Q_reg, notifier; 
table 
// D EN SC SD Q_reg notifier : SO_reg : SO_reg
  ?  0  1  0  ?  ?   : ?   : -;
  ?  0  1  1  ?  ?   : ?   : -;
  0  0  0  ?  ?  ?   : ?   : -;
  1  0  0  ?  ?  ?   : ?   : -;
  ?  1  ?  ?  0  ?   : ?   : 0;
  ?  1  ?  ?  1  ?   : ?   : 1;

endtable
endprimitive


`celldefine
module slnlq4_func( SO, Q, D, EN, SC, SD, notifier );
input D, EN, SC, SD, notifier;
output Q, SO;

	slnlq4_statetable_Q_reg(Q_reg, D, EN, SC, SD, notifier);

	slnlq4_statetable_SO_reg(SO_reg, D, EN, SC, SD, Q_reg, notifier);

	buf MGM_BG_0( Q, Q_reg );

	buf MGM_BG_1( SO, SO_reg );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_LATCH_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  0  ?  ?  :  ?  :  -;
  ?  0  1  0  ?  :  ?  :  0;
  ?  0  ?  0  ?  :  0  :  0;
  1  0  ?  ?  ?  :  ?  :  0;
  0  ?  1  1  ?  :  ?  :  1;
  0  ?  ?  1  ?  :  1  :  1;
  0  1  ?  ?  ?  :  ?  :  1;
  1  1  ?  ?  ?  :  ?  :  0;
  ?  ?  ?  ?  *  :  ?  :  x;
                  
endtable
endprimitive


primitive UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_LATCH_UDP( Q, C, P, CK, D, N );
output Q;
reg Q;
input C, P, CK, D, N; 
table 
//C  P  CK  D  N   : Q : Q 
  0  0  0  ?  ?  :  ?  :  -;
  ?  0  1  0  ?  :  ?  :  1;
  ?  0  ?  0  ?  :  1  :  1;
  1  0  ?  ?  ?  :  ?  :  1;
  0  ?  1  1  ?  :  ?  :  0;
  0  ?  ?  1  ?  :  0  :  0;
  0  1  ?  ?  ?  :  ?  :  0;
  1  1  ?  ?  ?  :  ?  :  0;
  ?  ?  ?  ?  *  :  ?  :  x;
                  
endtable
endprimitive


`celldefine
module srlab1_func( Q, QN, RN, SN, notifier );
input RN, SN, notifier;
output Q, QN;

	supply0 MGM_EN0;

	not MGM_BG_0( MGM_P0, SN );

	not MGM_BG_1( MGM_C0, RN );

	supply0 MGM_D0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, MGM_D0, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module srlab2_func( Q, QN, RN, SN, notifier );
input RN, SN, notifier;
output Q, QN;

	supply0 MGM_EN0;

	not MGM_BG_0( MGM_P0, SN );

	not MGM_BG_1( MGM_C0, RN );

	supply0 MGM_D0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, MGM_D0, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module srlab4_func( Q, QN, RN, SN, notifier );
input RN, SN, notifier;
output Q, QN;

	supply0 MGM_EN0;

	not MGM_BG_0( MGM_P0, SN );

	not MGM_BG_1( MGM_C0, RN );

	supply0 MGM_D0;

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQ_LATCH_UDP( IQ, MGM_C0, MGM_P0, MGM_EN0, MGM_D0, notifier );

	UDP_ff_1p32v_m40c_tsl18fs120_MGM_LN_IQN_LATCH_UDP( IQN, MGM_C0, MGM_P0, MGM_EN0, MGM_D0, notifier );

	buf MGM_BG_2( Q, IQ );

	buf MGM_BG_3( QN, IQN );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module su01d0_func( CO, S, A, B, CI );
input A, B, CI;
output CO, S;

	wire B_inv_for_su01d0;

	not MGM_BG_0( B_inv_for_su01d0, B );

	wire CO_row1;

	and MGM_BG_1( CO_row1, B_inv_for_su01d0, A );

	wire CO_row2;

	and MGM_BG_2( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_3( CO_row3, B_inv_for_su01d0, CI );

	or MGM_BG_4( CO, CO_row1, CO_row2, CO_row3 );

	wire CI_inv_for_su01d0;

	not MGM_BG_5( CI_inv_for_su01d0, CI );

	wire S_row1;

	and MGM_BG_6( S_row1, CI_inv_for_su01d0, A, B );

	wire S_row2;

	and MGM_BG_7( S_row2, B_inv_for_su01d0, A, CI );

	wire A_inv_for_su01d0;

	not MGM_BG_8( A_inv_for_su01d0, A );

	wire S_row3;

	and MGM_BG_9( S_row3, A_inv_for_su01d0, B, CI );

	wire S_row4;

	and MGM_BG_10( S_row4, A_inv_for_su01d0, B_inv_for_su01d0, CI_inv_for_su01d0 );

	or MGM_BG_11( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module su01d1_func( CO, S, A, B, CI );
input A, B, CI;
output CO, S;

	wire B_inv_for_su01d1;

	not MGM_BG_0( B_inv_for_su01d1, B );

	wire CO_row1;

	and MGM_BG_1( CO_row1, B_inv_for_su01d1, A );

	wire CO_row2;

	and MGM_BG_2( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_3( CO_row3, B_inv_for_su01d1, CI );

	or MGM_BG_4( CO, CO_row1, CO_row2, CO_row3 );

	wire CI_inv_for_su01d1;

	not MGM_BG_5( CI_inv_for_su01d1, CI );

	wire S_row1;

	and MGM_BG_6( S_row1, CI_inv_for_su01d1, A, B );

	wire S_row2;

	and MGM_BG_7( S_row2, B_inv_for_su01d1, A, CI );

	wire A_inv_for_su01d1;

	not MGM_BG_8( A_inv_for_su01d1, A );

	wire S_row3;

	and MGM_BG_9( S_row3, A_inv_for_su01d1, B, CI );

	wire S_row4;

	and MGM_BG_10( S_row4, A_inv_for_su01d1, B_inv_for_su01d1, CI_inv_for_su01d1 );

	or MGM_BG_11( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module su01d2_func( CO, S, A, B, CI );
input A, B, CI;
output CO, S;

	wire B_inv_for_su01d2;

	not MGM_BG_0( B_inv_for_su01d2, B );

	wire CO_row1;

	and MGM_BG_1( CO_row1, B_inv_for_su01d2, A );

	wire CO_row2;

	and MGM_BG_2( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_3( CO_row3, B_inv_for_su01d2, CI );

	or MGM_BG_4( CO, CO_row1, CO_row2, CO_row3 );

	wire CI_inv_for_su01d2;

	not MGM_BG_5( CI_inv_for_su01d2, CI );

	wire S_row1;

	and MGM_BG_6( S_row1, CI_inv_for_su01d2, A, B );

	wire S_row2;

	and MGM_BG_7( S_row2, B_inv_for_su01d2, A, CI );

	wire A_inv_for_su01d2;

	not MGM_BG_8( A_inv_for_su01d2, A );

	wire S_row3;

	and MGM_BG_9( S_row3, A_inv_for_su01d2, B, CI );

	wire S_row4;

	and MGM_BG_10( S_row4, A_inv_for_su01d2, B_inv_for_su01d2, CI_inv_for_su01d2 );

	or MGM_BG_11( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module su01d4_func( CO, S, A, B, CI );
input A, B, CI;
output CO, S;

	wire B_inv_for_su01d4;

	not MGM_BG_0( B_inv_for_su01d4, B );

	wire CO_row1;

	and MGM_BG_1( CO_row1, B_inv_for_su01d4, A );

	wire CO_row2;

	and MGM_BG_2( CO_row2, A, CI );

	wire CO_row3;

	and MGM_BG_3( CO_row3, B_inv_for_su01d4, CI );

	or MGM_BG_4( CO, CO_row1, CO_row2, CO_row3 );

	wire CI_inv_for_su01d4;

	not MGM_BG_5( CI_inv_for_su01d4, CI );

	wire S_row1;

	and MGM_BG_6( S_row1, CI_inv_for_su01d4, A, B );

	wire S_row2;

	and MGM_BG_7( S_row2, B_inv_for_su01d4, A, CI );

	wire A_inv_for_su01d4;

	not MGM_BG_8( A_inv_for_su01d4, A );

	wire S_row3;

	and MGM_BG_9( S_row3, A_inv_for_su01d4, B, CI );

	wire S_row4;

	and MGM_BG_10( S_row4, A_inv_for_su01d4, B_inv_for_su01d4, CI_inv_for_su01d4 );

	or MGM_BG_11( S, S_row1, S_row2, S_row3, S_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module tiehi_func( Z );
output Z;

	assign Z = 1'b1;

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module tielo_func( Z );
output Z;

	assign Z = 1'b0;

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xn02d1_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire ZN_row1;

	and MGM_BG_0( ZN_row1, A1, A2 );

	wire A1_inv_for_xn02d1;

	not MGM_BG_1( A1_inv_for_xn02d1, A1 );

	wire A2_inv_for_xn02d1;

	not MGM_BG_2( A2_inv_for_xn02d1, A2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A1_inv_for_xn02d1, A2_inv_for_xn02d1 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xn02d2_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire ZN_row1;

	and MGM_BG_0( ZN_row1, A1, A2 );

	wire A1_inv_for_xn02d2;

	not MGM_BG_1( A1_inv_for_xn02d2, A1 );

	wire A2_inv_for_xn02d2;

	not MGM_BG_2( A2_inv_for_xn02d2, A2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A1_inv_for_xn02d2, A2_inv_for_xn02d2 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xn02d4_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire ZN_row1;

	and MGM_BG_0( ZN_row1, A1, A2 );

	wire A1_inv_for_xn02d4;

	not MGM_BG_1( A1_inv_for_xn02d4, A1 );

	wire A2_inv_for_xn02d4;

	not MGM_BG_2( A2_inv_for_xn02d4, A2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A1_inv_for_xn02d4, A2_inv_for_xn02d4 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xn02d7_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire ZN_row1;

	and MGM_BG_0( ZN_row1, A1, A2 );

	wire A1_inv_for_xn02d7;

	not MGM_BG_1( A1_inv_for_xn02d7, A1 );

	wire A2_inv_for_xn02d7;

	not MGM_BG_2( A2_inv_for_xn02d7, A2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A1_inv_for_xn02d7, A2_inv_for_xn02d7 );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xn02da_func( ZN, A1, A2 );
input A1, A2;
output ZN;

	wire ZN_row1;

	and MGM_BG_0( ZN_row1, A1, A2 );

	wire A1_inv_for_xn02da;

	not MGM_BG_1( A1_inv_for_xn02da, A1 );

	wire A2_inv_for_xn02da;

	not MGM_BG_2( A2_inv_for_xn02da, A2 );

	wire ZN_row2;

	and MGM_BG_3( ZN_row2, A1_inv_for_xn02da, A2_inv_for_xn02da );

	or MGM_BG_4( ZN, ZN_row1, ZN_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr02d1_func( Z, A1, A2 );
input A1, A2;
output Z;

	wire A2_inv_for_xr02d1;

	not MGM_BG_0( A2_inv_for_xr02d1, A2 );

	wire Z_row1;

	and MGM_BG_1( Z_row1, A2_inv_for_xr02d1, A1 );

	wire A1_inv_for_xr02d1;

	not MGM_BG_2( A1_inv_for_xr02d1, A1 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A1_inv_for_xr02d1, A2 );

	or MGM_BG_4( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr02d2_func( Z, A1, A2 );
input A1, A2;
output Z;

	wire A2_inv_for_xr02d2;

	not MGM_BG_0( A2_inv_for_xr02d2, A2 );

	wire Z_row1;

	and MGM_BG_1( Z_row1, A2_inv_for_xr02d2, A1 );

	wire A1_inv_for_xr02d2;

	not MGM_BG_2( A1_inv_for_xr02d2, A1 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A1_inv_for_xr02d2, A2 );

	or MGM_BG_4( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr02d4_func( Z, A1, A2 );
input A1, A2;
output Z;

	wire A2_inv_for_xr02d4;

	not MGM_BG_0( A2_inv_for_xr02d4, A2 );

	wire Z_row1;

	and MGM_BG_1( Z_row1, A2_inv_for_xr02d4, A1 );

	wire A1_inv_for_xr02d4;

	not MGM_BG_2( A1_inv_for_xr02d4, A1 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A1_inv_for_xr02d4, A2 );

	or MGM_BG_4( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr02d7_func( Z, A1, A2 );
input A1, A2;
output Z;

	wire A2_inv_for_xr02d7;

	not MGM_BG_0( A2_inv_for_xr02d7, A2 );

	wire Z_row1;

	and MGM_BG_1( Z_row1, A2_inv_for_xr02d7, A1 );

	wire A1_inv_for_xr02d7;

	not MGM_BG_2( A1_inv_for_xr02d7, A1 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A1_inv_for_xr02d7, A2 );

	or MGM_BG_4( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr02da_func( Z, A1, A2 );
input A1, A2;
output Z;

	wire A2_inv_for_xr02da;

	not MGM_BG_0( A2_inv_for_xr02da, A2 );

	wire Z_row1;

	and MGM_BG_1( Z_row1, A2_inv_for_xr02da, A1 );

	wire A1_inv_for_xr02da;

	not MGM_BG_2( A1_inv_for_xr02da, A1 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A1_inv_for_xr02da, A2 );

	or MGM_BG_4( Z, Z_row1, Z_row2 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr03d1_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2, A3 );

	wire A2_inv_for_xr03d1;

	not MGM_BG_1( A2_inv_for_xr03d1, A2 );

	wire A3_inv_for_xr03d1;

	not MGM_BG_2( A3_inv_for_xr03d1, A3 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A2_inv_for_xr03d1, A3_inv_for_xr03d1, A1 );

	wire A1_inv_for_xr03d1;

	not MGM_BG_4( A1_inv_for_xr03d1, A1 );

	wire Z_row3;

	and MGM_BG_5( Z_row3, A1_inv_for_xr03d1, A3_inv_for_xr03d1, A2 );

	wire Z_row4;

	and MGM_BG_6( Z_row4, A1_inv_for_xr03d1, A2_inv_for_xr03d1, A3 );

	or MGM_BG_7( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr03d2_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2, A3 );

	wire A2_inv_for_xr03d2;

	not MGM_BG_1( A2_inv_for_xr03d2, A2 );

	wire A3_inv_for_xr03d2;

	not MGM_BG_2( A3_inv_for_xr03d2, A3 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A2_inv_for_xr03d2, A3_inv_for_xr03d2, A1 );

	wire A1_inv_for_xr03d2;

	not MGM_BG_4( A1_inv_for_xr03d2, A1 );

	wire Z_row3;

	and MGM_BG_5( Z_row3, A1_inv_for_xr03d2, A3_inv_for_xr03d2, A2 );

	wire Z_row4;

	and MGM_BG_6( Z_row4, A1_inv_for_xr03d2, A2_inv_for_xr03d2, A3 );

	or MGM_BG_7( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr03d4_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2, A3 );

	wire A2_inv_for_xr03d4;

	not MGM_BG_1( A2_inv_for_xr03d4, A2 );

	wire A3_inv_for_xr03d4;

	not MGM_BG_2( A3_inv_for_xr03d4, A3 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A2_inv_for_xr03d4, A3_inv_for_xr03d4, A1 );

	wire A1_inv_for_xr03d4;

	not MGM_BG_4( A1_inv_for_xr03d4, A1 );

	wire Z_row3;

	and MGM_BG_5( Z_row3, A1_inv_for_xr03d4, A3_inv_for_xr03d4, A2 );

	wire Z_row4;

	and MGM_BG_6( Z_row4, A1_inv_for_xr03d4, A2_inv_for_xr03d4, A3 );

	or MGM_BG_7( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr03d7_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2, A3 );

	wire A2_inv_for_xr03d7;

	not MGM_BG_1( A2_inv_for_xr03d7, A2 );

	wire A3_inv_for_xr03d7;

	not MGM_BG_2( A3_inv_for_xr03d7, A3 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A2_inv_for_xr03d7, A3_inv_for_xr03d7, A1 );

	wire A1_inv_for_xr03d7;

	not MGM_BG_4( A1_inv_for_xr03d7, A1 );

	wire Z_row3;

	and MGM_BG_5( Z_row3, A1_inv_for_xr03d7, A3_inv_for_xr03d7, A2 );

	wire Z_row4;

	and MGM_BG_6( Z_row4, A1_inv_for_xr03d7, A2_inv_for_xr03d7, A3 );

	or MGM_BG_7( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module xr03da_func( Z, A1, A2, A3 );
input A1, A2, A3;
output Z;

	wire Z_row1;

	and MGM_BG_0( Z_row1, A1, A2, A3 );

	wire A2_inv_for_xr03da;

	not MGM_BG_1( A2_inv_for_xr03da, A2 );

	wire A3_inv_for_xr03da;

	not MGM_BG_2( A3_inv_for_xr03da, A3 );

	wire Z_row2;

	and MGM_BG_3( Z_row2, A2_inv_for_xr03da, A3_inv_for_xr03da, A1 );

	wire A1_inv_for_xr03da;

	not MGM_BG_4( A1_inv_for_xr03da, A1 );

	wire Z_row3;

	and MGM_BG_5( Z_row3, A1_inv_for_xr03da, A3_inv_for_xr03da, A2 );

	wire Z_row4;

	and MGM_BG_6( Z_row4, A1_inv_for_xr03da, A2_inv_for_xr03da, A3 );

	or MGM_BG_7( Z, Z_row1, Z_row2, Z_row3, Z_row4 );

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module ndiode_func( I );
input I;

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module tiehi1_func( Z );
output Z;

	assign Z = 1'b1;

endmodule
`endcelldefine
// udp_data_end
// udp_data_begin


`celldefine
module tielo1_func( Z );
output Z;

	assign Z = 1'b0;

endmodule
`endcelldefine
// udp_data_end
